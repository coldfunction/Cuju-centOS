/* This file is autogenerated by tracetool, do not edit. */

probe qemu.kvm.simpletrace.cpu_in = qemu.kvm.cpu_in ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 0, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, size, val)
}
probe qemu.kvm.simpletrace.cpu_out = qemu.kvm.cpu_out ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, size, val)
}
probe qemu.kvm.simpletrace.balloon_event = qemu.kvm.balloon_event ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2, gettimeofday_ns(), 24 + 8 + 8, pid(), opaque, addr)
}
probe qemu.kvm.simpletrace.vm_state_notify = qemu.kvm.vm_state_notify ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 3, gettimeofday_ns(), 24 + 8 + 8, pid(), running, reason)
}
probe qemu.kvm.simpletrace.load_file = qemu.kvm.load_file ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argpath_str = path ? user_string_n(path, 512) : "<null>"
    } catch {}
    argpath_len = strlen(argpath_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 4, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argpath_len, pid(), argname_len, argname_len, argname_str, argpath_len, argpath_len, argpath_str)
}
probe qemu.kvm.simpletrace.runstate_set = qemu.kvm.runstate_set ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 5, gettimeofday_ns(), 24 + 8, pid(), new_state)
}
probe qemu.kvm.simpletrace.system_wakeup_request = qemu.kvm.system_wakeup_request ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 6, gettimeofday_ns(), 24 + 8, pid(), reason)
}
probe qemu.kvm.simpletrace.qemu_system_shutdown_request = qemu.kvm.qemu_system_shutdown_request ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 7, gettimeofday_ns(), 24 + 8, pid(), reason)
}
probe qemu.kvm.simpletrace.qemu_system_powerdown_request = qemu.kvm.qemu_system_powerdown_request ?
{
    printf("%8b%8b%8b%4b%4b", 1, 8, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.monitor_protocol_event_handler = qemu.kvm.monitor_protocol_event_handler ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 9, gettimeofday_ns(), 24 + 8 + 8, pid(), event, qdict)
}
probe qemu.kvm.simpletrace.monitor_protocol_event_emit = qemu.kvm.monitor_protocol_event_emit ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 10, gettimeofday_ns(), 24 + 8 + 8, pid(), event, data)
}
probe qemu.kvm.simpletrace.monitor_protocol_event_queue = qemu.kvm.monitor_protocol_event_queue ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 11, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), event, qdict, rate)
}
probe qemu.kvm.simpletrace.handle_hmp_command = qemu.kvm.handle_hmp_command ?
{
    try {
        argcmdline_str = cmdline ? user_string_n(cmdline, 512) : "<null>"
    } catch {}
    argcmdline_len = strlen(argcmdline_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 12, gettimeofday_ns(), 24 + 8 + 4 + argcmdline_len, pid(), mon, argcmdline_len, argcmdline_len, argcmdline_str)
}
probe qemu.kvm.simpletrace.handle_qmp_command = qemu.kvm.handle_qmp_command ?
{
    try {
        argreq_str = req ? user_string_n(req, 512) : "<null>"
    } catch {}
    argreq_len = strlen(argreq_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 13, gettimeofday_ns(), 24 + 8 + 4 + argreq_len, pid(), mon, argreq_len, argreq_len, argreq_str)
}
probe qemu.kvm.simpletrace.monitor_suspend = qemu.kvm.monitor_suspend ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 14, gettimeofday_ns(), 24 + 8 + 8, pid(), ptr, cnt)
}
probe qemu.kvm.simpletrace.monitor_qmp_cmd_in_band = qemu.kvm.monitor_qmp_cmd_in_band ?
{
    try {
        argid_str = id ? user_string_n(id, 512) : "<null>"
    } catch {}
    argid_len = strlen(argid_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 15, gettimeofday_ns(), 24 + 4 + argid_len, pid(), argid_len, argid_len, argid_str)
}
probe qemu.kvm.simpletrace.monitor_qmp_cmd_out_of_band = qemu.kvm.monitor_qmp_cmd_out_of_band ?
{
    try {
        argid_str = id ? user_string_n(id, 512) : "<null>"
    } catch {}
    argid_len = strlen(argid_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 16, gettimeofday_ns(), 24 + 4 + argid_len, pid(), argid_len, argid_len, argid_str)
}
probe qemu.kvm.simpletrace.dma_blk_io = qemu.kvm.dma_blk_io ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 17, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), dbs, bs, offset, to_dev)
}
probe qemu.kvm.simpletrace.dma_aio_cancel = qemu.kvm.dma_aio_cancel ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 18, gettimeofday_ns(), 24 + 8, pid(), dbs)
}
probe qemu.kvm.simpletrace.dma_complete = qemu.kvm.dma_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 19, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), dbs, ret, cb)
}
probe qemu.kvm.simpletrace.dma_blk_cb = qemu.kvm.dma_blk_cb ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 20, gettimeofday_ns(), 24 + 8 + 8, pid(), dbs, ret)
}
probe qemu.kvm.simpletrace.dma_map_wait = qemu.kvm.dma_map_wait ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 21, gettimeofday_ns(), 24 + 8, pid(), dbs)
}
probe qemu.kvm.simpletrace.find_ram_offset = qemu.kvm.find_ram_offset ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 22, gettimeofday_ns(), 24 + 8 + 8, pid(), size, offset)
}
probe qemu.kvm.simpletrace.find_ram_offset_loop = qemu.kvm.find_ram_offset_loop ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 23, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), size, candidate, offset, next_, mingap)
}
probe qemu.kvm.simpletrace.ram_block_discard_range = qemu.kvm.ram_block_discard_range ?
{
    try {
        argrbname_str = rbname ? user_string_n(rbname, 512) : "<null>"
    } catch {}
    argrbname_len = strlen(argrbname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b%8b%8b", 1, 24, gettimeofday_ns(), 24 + 4 + argrbname_len + 8 + 8 + 8 + 8 + 8, pid(), argrbname_len, argrbname_len, argrbname_str, hva, length, need_madvise, need_fallocate, ret)
}
probe qemu.kvm.simpletrace.memory_region_ops_read = qemu.kvm.memory_region_ops_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 25, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), cpu_index, mr, addr, value, size)
}
probe qemu.kvm.simpletrace.memory_region_ops_write = qemu.kvm.memory_region_ops_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 26, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), cpu_index, mr, addr, value, size)
}
probe qemu.kvm.simpletrace.memory_region_subpage_read = qemu.kvm.memory_region_subpage_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 27, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), cpu_index, mr, offset, value, size)
}
probe qemu.kvm.simpletrace.memory_region_subpage_write = qemu.kvm.memory_region_subpage_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 28, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), cpu_index, mr, offset, value, size)
}
probe qemu.kvm.simpletrace.memory_region_tb_read = qemu.kvm.memory_region_tb_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 29, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), cpu_index, addr, value, size)
}
probe qemu.kvm.simpletrace.memory_region_tb_write = qemu.kvm.memory_region_tb_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 30, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), cpu_index, addr, value, size)
}
probe qemu.kvm.simpletrace.memory_region_ram_device_read = qemu.kvm.memory_region_ram_device_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 31, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), cpu_index, mr, addr, value, size)
}
probe qemu.kvm.simpletrace.memory_region_ram_device_write = qemu.kvm.memory_region_ram_device_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 32, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), cpu_index, mr, addr, value, size)
}
probe qemu.kvm.simpletrace.flatview_new = qemu.kvm.flatview_new ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 33, gettimeofday_ns(), 24 + 8 + 8, pid(), view, root)
}
probe qemu.kvm.simpletrace.flatview_destroy = qemu.kvm.flatview_destroy ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 34, gettimeofday_ns(), 24 + 8 + 8, pid(), view, root)
}
probe qemu.kvm.simpletrace.flatview_destroy_rcu = qemu.kvm.flatview_destroy_rcu ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 35, gettimeofday_ns(), 24 + 8 + 8, pid(), view, root)
}
probe qemu.kvm.simpletrace.gdbstub_op_start = qemu.kvm.gdbstub_op_start ?
{
    try {
        argdevice_str = device ? user_string_n(device, 512) : "<null>"
    } catch {}
    argdevice_len = strlen(argdevice_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 36, gettimeofday_ns(), 24 + 4 + argdevice_len, pid(), argdevice_len, argdevice_len, argdevice_str)
}
probe qemu.kvm.simpletrace.gdbstub_op_exiting = qemu.kvm.gdbstub_op_exiting ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 37, gettimeofday_ns(), 24 + 8, pid(), code)
}
probe qemu.kvm.simpletrace.gdbstub_op_continue = qemu.kvm.gdbstub_op_continue ?
{
    printf("%8b%8b%8b%4b%4b", 1, 38, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.gdbstub_op_continue_cpu = qemu.kvm.gdbstub_op_continue_cpu ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 39, gettimeofday_ns(), 24 + 8, pid(), cpu_index)
}
probe qemu.kvm.simpletrace.gdbstub_op_stepping = qemu.kvm.gdbstub_op_stepping ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 40, gettimeofday_ns(), 24 + 8, pid(), cpu_index)
}
probe qemu.kvm.simpletrace.gdbstub_op_extra_info = qemu.kvm.gdbstub_op_extra_info ?
{
    try {
        arginfo_str = info ? user_string_n(info, 512) : "<null>"
    } catch {}
    arginfo_len = strlen(arginfo_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 41, gettimeofday_ns(), 24 + 4 + arginfo_len, pid(), arginfo_len, arginfo_len, arginfo_str)
}
probe qemu.kvm.simpletrace.gdbstub_hit_watchpoint = qemu.kvm.gdbstub_hit_watchpoint ?
{
    try {
        argtype_str = type ? user_string_n(type, 512) : "<null>"
    } catch {}
    argtype_len = strlen(argtype_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 42, gettimeofday_ns(), 24 + 4 + argtype_len + 8 + 8, pid(), argtype_len, argtype_len, argtype_str, cpu_gdb_index, vaddr)
}
probe qemu.kvm.simpletrace.gdbstub_hit_internal_error = qemu.kvm.gdbstub_hit_internal_error ?
{
    printf("%8b%8b%8b%4b%4b", 1, 43, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.gdbstub_hit_break = qemu.kvm.gdbstub_hit_break ?
{
    printf("%8b%8b%8b%4b%4b", 1, 44, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.gdbstub_hit_paused = qemu.kvm.gdbstub_hit_paused ?
{
    printf("%8b%8b%8b%4b%4b", 1, 45, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.gdbstub_hit_shutdown = qemu.kvm.gdbstub_hit_shutdown ?
{
    printf("%8b%8b%8b%4b%4b", 1, 46, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.gdbstub_hit_io_error = qemu.kvm.gdbstub_hit_io_error ?
{
    printf("%8b%8b%8b%4b%4b", 1, 47, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.gdbstub_hit_watchdog = qemu.kvm.gdbstub_hit_watchdog ?
{
    printf("%8b%8b%8b%4b%4b", 1, 48, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.gdbstub_hit_unknown = qemu.kvm.gdbstub_hit_unknown ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 49, gettimeofday_ns(), 24 + 8, pid(), state)
}
probe qemu.kvm.simpletrace.gdbstub_io_reply = qemu.kvm.gdbstub_io_reply ?
{
    try {
        argmessage_str = message ? user_string_n(message, 512) : "<null>"
    } catch {}
    argmessage_len = strlen(argmessage_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 50, gettimeofday_ns(), 24 + 4 + argmessage_len, pid(), argmessage_len, argmessage_len, argmessage_str)
}
probe qemu.kvm.simpletrace.gdbstub_io_binaryreply = qemu.kvm.gdbstub_io_binaryreply ?
{
    try {
        argline_str = line ? user_string_n(line, 512) : "<null>"
    } catch {}
    argline_len = strlen(argline_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 51, gettimeofday_ns(), 24 + 8 + 4 + argline_len, pid(), ofs, argline_len, argline_len, argline_str)
}
probe qemu.kvm.simpletrace.gdbstub_io_command = qemu.kvm.gdbstub_io_command ?
{
    try {
        argcommand_str = command ? user_string_n(command, 512) : "<null>"
    } catch {}
    argcommand_len = strlen(argcommand_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 52, gettimeofday_ns(), 24 + 4 + argcommand_len, pid(), argcommand_len, argcommand_len, argcommand_str)
}
probe qemu.kvm.simpletrace.gdbstub_io_got_ack = qemu.kvm.gdbstub_io_got_ack ?
{
    printf("%8b%8b%8b%4b%4b", 1, 53, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.gdbstub_io_got_unexpected = qemu.kvm.gdbstub_io_got_unexpected ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 54, gettimeofday_ns(), 24 + 8, pid(), ch)
}
probe qemu.kvm.simpletrace.gdbstub_err_got_nack = qemu.kvm.gdbstub_err_got_nack ?
{
    printf("%8b%8b%8b%4b%4b", 1, 55, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.gdbstub_err_garbage = qemu.kvm.gdbstub_err_garbage ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 56, gettimeofday_ns(), 24 + 8, pid(), ch)
}
probe qemu.kvm.simpletrace.gdbstub_err_overrun = qemu.kvm.gdbstub_err_overrun ?
{
    printf("%8b%8b%8b%4b%4b", 1, 57, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.gdbstub_err_invalid_repeat = qemu.kvm.gdbstub_err_invalid_repeat ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 58, gettimeofday_ns(), 24 + 8, pid(), ch)
}
probe qemu.kvm.simpletrace.gdbstub_err_invalid_rle = qemu.kvm.gdbstub_err_invalid_rle ?
{
    printf("%8b%8b%8b%4b%4b", 1, 59, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.gdbstub_err_checksum_invalid = qemu.kvm.gdbstub_err_checksum_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 60, gettimeofday_ns(), 24 + 8, pid(), ch)
}
probe qemu.kvm.simpletrace.gdbstub_err_checksum_incorrect = qemu.kvm.gdbstub_err_checksum_incorrect ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 61, gettimeofday_ns(), 24 + 8 + 8, pid(), expected, got)
}
probe qemu.kvm.simpletrace.job_state_transition = qemu.kvm.job_state_transition ?
{
    try {
        arglegal_str = legal ? user_string_n(legal, 512) : "<null>"
    } catch {}
    arglegal_len = strlen(arglegal_str)
    try {
        args0_str = s0 ? user_string_n(s0, 512) : "<null>"
    } catch {}
    args0_len = strlen(args0_str)
    try {
        args1_str = s1 ? user_string_n(s1, 512) : "<null>"
    } catch {}
    args1_len = strlen(args1_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s%4b%.*s%4b%.*s", 1, 62, gettimeofday_ns(), 24 + 8 + 8 + 4 + arglegal_len + 4 + args0_len + 4 + args1_len, pid(), job, ret, arglegal_len, arglegal_len, arglegal_str, args0_len, args0_len, args0_str, args1_len, args1_len, args1_str)
}
probe qemu.kvm.simpletrace.job_apply_verb = qemu.kvm.job_apply_verb ?
{
    try {
        argstate_str = state ? user_string_n(state, 512) : "<null>"
    } catch {}
    argstate_len = strlen(argstate_str)
    try {
        argverb_str = verb ? user_string_n(verb, 512) : "<null>"
    } catch {}
    argverb_len = strlen(argverb_str)
    try {
        arglegal_str = legal ? user_string_n(legal, 512) : "<null>"
    } catch {}
    arglegal_len = strlen(arglegal_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%4b%.*s%4b%.*s", 1, 63, gettimeofday_ns(), 24 + 8 + 4 + argstate_len + 4 + argverb_len + 4 + arglegal_len, pid(), job, argstate_len, argstate_len, argstate_str, argverb_len, argverb_len, argverb_str, arglegal_len, arglegal_len, arglegal_str)
}
probe qemu.kvm.simpletrace.job_completed = qemu.kvm.job_completed ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 64, gettimeofday_ns(), 24 + 8 + 8, pid(), job, ret)
}
probe qemu.kvm.simpletrace.qmp_job_cancel = qemu.kvm.qmp_job_cancel ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 65, gettimeofday_ns(), 24 + 8, pid(), job)
}
probe qemu.kvm.simpletrace.qmp_job_pause = qemu.kvm.qmp_job_pause ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 66, gettimeofday_ns(), 24 + 8, pid(), job)
}
probe qemu.kvm.simpletrace.qmp_job_resume = qemu.kvm.qmp_job_resume ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 67, gettimeofday_ns(), 24 + 8, pid(), job)
}
probe qemu.kvm.simpletrace.qmp_job_complete = qemu.kvm.qmp_job_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 68, gettimeofday_ns(), 24 + 8, pid(), job)
}
probe qemu.kvm.simpletrace.qmp_job_finalize = qemu.kvm.qmp_job_finalize ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 69, gettimeofday_ns(), 24 + 8, pid(), job)
}
probe qemu.kvm.simpletrace.qmp_job_dismiss = qemu.kvm.qmp_job_dismiss ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 70, gettimeofday_ns(), 24 + 8, pid(), job)
}
probe qemu.kvm.simpletrace.guest_cpu_enter = qemu.kvm.guest_cpu_enter ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 71, gettimeofday_ns(), 24 + 8, pid(), __cpu)
}
probe qemu.kvm.simpletrace.guest_cpu_exit = qemu.kvm.guest_cpu_exit ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 72, gettimeofday_ns(), 24 + 8, pid(), __cpu)
}
probe qemu.kvm.simpletrace.guest_cpu_reset = qemu.kvm.guest_cpu_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 73, gettimeofday_ns(), 24 + 8, pid(), __cpu)
}
probe qemu.kvm.simpletrace.guest_mem_before_trans = qemu.kvm.guest_mem_before_trans ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 74, gettimeofday_ns(), 24 + 8 + 8, pid(), __cpu, info)
}
probe qemu.kvm.simpletrace.guest_mem_before_exec = qemu.kvm.guest_mem_before_exec ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 75, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), __cpu, vaddr, info)
}
probe qemu.kvm.simpletrace.guest_user_syscall = qemu.kvm.guest_user_syscall ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b%8b%8b%8b", 1, 76, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), __cpu, num, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8)
}
probe qemu.kvm.simpletrace.guest_user_syscall_ret = qemu.kvm.guest_user_syscall_ret ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 77, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), __cpu, num, ret)
}
probe qemu.kvm.simpletrace.run_poll_handlers_begin = qemu.kvm.run_poll_handlers_begin ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 78, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), ctx, max_ns, timeout)
}
probe qemu.kvm.simpletrace.run_poll_handlers_end = qemu.kvm.run_poll_handlers_end ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 79, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), ctx, progress, timeout)
}
probe qemu.kvm.simpletrace.poll_shrink = qemu.kvm.poll_shrink ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 80, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), ctx, old, new)
}
probe qemu.kvm.simpletrace.poll_grow = qemu.kvm.poll_grow ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 81, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), ctx, old, new)
}
probe qemu.kvm.simpletrace.aio_co_schedule = qemu.kvm.aio_co_schedule ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 82, gettimeofday_ns(), 24 + 8 + 8, pid(), ctx, co)
}
probe qemu.kvm.simpletrace.aio_co_schedule_bh_cb = qemu.kvm.aio_co_schedule_bh_cb ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 83, gettimeofday_ns(), 24 + 8 + 8, pid(), ctx, co)
}
probe qemu.kvm.simpletrace.thread_pool_submit = qemu.kvm.thread_pool_submit ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 84, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), pool, req, opaque)
}
probe qemu.kvm.simpletrace.thread_pool_complete = qemu.kvm.thread_pool_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 85, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), pool, req, opaque, ret)
}
probe qemu.kvm.simpletrace.thread_pool_cancel = qemu.kvm.thread_pool_cancel ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 86, gettimeofday_ns(), 24 + 8 + 8, pid(), req, opaque)
}
probe qemu.kvm.simpletrace.buffer_resize = qemu.kvm.buffer_resize ?
{
    try {
        argbuf_str = buf ? user_string_n(buf, 512) : "<null>"
    } catch {}
    argbuf_len = strlen(argbuf_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 87, gettimeofday_ns(), 24 + 4 + argbuf_len + 8 + 8, pid(), argbuf_len, argbuf_len, argbuf_str, olen, len)
}
probe qemu.kvm.simpletrace.buffer_move_empty = qemu.kvm.buffer_move_empty ?
{
    try {
        argbuf_str = buf ? user_string_n(buf, 512) : "<null>"
    } catch {}
    argbuf_len = strlen(argbuf_str)
    try {
        argfrom_str = from ? user_string_n(from, 512) : "<null>"
    } catch {}
    argfrom_len = strlen(argfrom_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%4b%.*s", 1, 88, gettimeofday_ns(), 24 + 4 + argbuf_len + 8 + 4 + argfrom_len, pid(), argbuf_len, argbuf_len, argbuf_str, len, argfrom_len, argfrom_len, argfrom_str)
}
probe qemu.kvm.simpletrace.buffer_move = qemu.kvm.buffer_move ?
{
    try {
        argbuf_str = buf ? user_string_n(buf, 512) : "<null>"
    } catch {}
    argbuf_len = strlen(argbuf_str)
    try {
        argfrom_str = from ? user_string_n(from, 512) : "<null>"
    } catch {}
    argfrom_len = strlen(argfrom_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%4b%.*s", 1, 89, gettimeofday_ns(), 24 + 4 + argbuf_len + 8 + 4 + argfrom_len, pid(), argbuf_len, argbuf_len, argbuf_str, len, argfrom_len, argfrom_len, argfrom_str)
}
probe qemu.kvm.simpletrace.buffer_free = qemu.kvm.buffer_free ?
{
    try {
        argbuf_str = buf ? user_string_n(buf, 512) : "<null>"
    } catch {}
    argbuf_len = strlen(argbuf_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 90, gettimeofday_ns(), 24 + 4 + argbuf_len + 8, pid(), argbuf_len, argbuf_len, argbuf_str, len)
}
probe qemu.kvm.simpletrace.qemu_aio_coroutine_enter = qemu.kvm.qemu_aio_coroutine_enter ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 91, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), ctx, from, to, opaque)
}
probe qemu.kvm.simpletrace.qemu_coroutine_yield = qemu.kvm.qemu_coroutine_yield ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 92, gettimeofday_ns(), 24 + 8 + 8, pid(), from, to)
}
probe qemu.kvm.simpletrace.qemu_coroutine_terminate = qemu.kvm.qemu_coroutine_terminate ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 93, gettimeofday_ns(), 24 + 8, pid(), co)
}
probe qemu.kvm.simpletrace.qemu_co_queue_run_restart = qemu.kvm.qemu_co_queue_run_restart ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 94, gettimeofday_ns(), 24 + 8, pid(), co)
}
probe qemu.kvm.simpletrace.qemu_co_mutex_lock_uncontended = qemu.kvm.qemu_co_mutex_lock_uncontended ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 95, gettimeofday_ns(), 24 + 8 + 8, pid(), mutex, self_)
}
probe qemu.kvm.simpletrace.qemu_co_mutex_lock_entry = qemu.kvm.qemu_co_mutex_lock_entry ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 96, gettimeofday_ns(), 24 + 8 + 8, pid(), mutex, self_)
}
probe qemu.kvm.simpletrace.qemu_co_mutex_lock_return = qemu.kvm.qemu_co_mutex_lock_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 97, gettimeofday_ns(), 24 + 8 + 8, pid(), mutex, self_)
}
probe qemu.kvm.simpletrace.qemu_co_mutex_unlock_entry = qemu.kvm.qemu_co_mutex_unlock_entry ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 98, gettimeofday_ns(), 24 + 8 + 8, pid(), mutex, self_)
}
probe qemu.kvm.simpletrace.qemu_co_mutex_unlock_return = qemu.kvm.qemu_co_mutex_unlock_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 99, gettimeofday_ns(), 24 + 8 + 8, pid(), mutex, self_)
}
probe qemu.kvm.simpletrace.qemu_memalign = qemu.kvm.qemu_memalign ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 100, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), alignment, size, ptr)
}
probe qemu.kvm.simpletrace.qemu_anon_ram_alloc = qemu.kvm.qemu_anon_ram_alloc ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 101, gettimeofday_ns(), 24 + 8 + 8, pid(), size, ptr)
}
probe qemu.kvm.simpletrace.qemu_vfree = qemu.kvm.qemu_vfree ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 102, gettimeofday_ns(), 24 + 8, pid(), ptr)
}
probe qemu.kvm.simpletrace.qemu_anon_ram_free = qemu.kvm.qemu_anon_ram_free ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 103, gettimeofday_ns(), 24 + 8 + 8, pid(), ptr, size)
}
probe qemu.kvm.simpletrace.hbitmap_iter_skip_words = qemu.kvm.hbitmap_iter_skip_words ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 104, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), hb, hbi, pos, cur)
}
probe qemu.kvm.simpletrace.hbitmap_reset = qemu.kvm.hbitmap_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 105, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), hb, start, count, sbit, ebit)
}
probe qemu.kvm.simpletrace.hbitmap_set = qemu.kvm.hbitmap_set ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 106, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), hb, start, count, sbit, ebit)
}
probe qemu.kvm.simpletrace.lockcnt_fast_path_attempt = qemu.kvm.lockcnt_fast_path_attempt ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 107, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), lockcnt, expected, new)
}
probe qemu.kvm.simpletrace.lockcnt_fast_path_success = qemu.kvm.lockcnt_fast_path_success ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 108, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), lockcnt, expected, new)
}
probe qemu.kvm.simpletrace.lockcnt_unlock_attempt = qemu.kvm.lockcnt_unlock_attempt ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 109, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), lockcnt, expected, new)
}
probe qemu.kvm.simpletrace.lockcnt_unlock_success = qemu.kvm.lockcnt_unlock_success ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 110, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), lockcnt, expected, new)
}
probe qemu.kvm.simpletrace.lockcnt_futex_wait_prepare = qemu.kvm.lockcnt_futex_wait_prepare ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 111, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), lockcnt, expected, new)
}
probe qemu.kvm.simpletrace.lockcnt_futex_wait = qemu.kvm.lockcnt_futex_wait ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 112, gettimeofday_ns(), 24 + 8 + 8, pid(), lockcnt, val)
}
probe qemu.kvm.simpletrace.lockcnt_futex_wait_resume = qemu.kvm.lockcnt_futex_wait_resume ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 113, gettimeofday_ns(), 24 + 8 + 8, pid(), lockcnt, new)
}
probe qemu.kvm.simpletrace.lockcnt_futex_wake = qemu.kvm.lockcnt_futex_wake ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 114, gettimeofday_ns(), 24 + 8, pid(), lockcnt)
}
probe qemu.kvm.simpletrace.qemu_mutex_lock = qemu.kvm.qemu_mutex_lock ?
{
    try {
        argfile_str = file ? user_string_n(file, 512) : "<null>"
    } catch {}
    argfile_len = strlen(argfile_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 115, gettimeofday_ns(), 24 + 8 + 4 + argfile_len + 8, pid(), mutex, argfile_len, argfile_len, argfile_str, line)
}
probe qemu.kvm.simpletrace.qemu_mutex_locked = qemu.kvm.qemu_mutex_locked ?
{
    try {
        argfile_str = file ? user_string_n(file, 512) : "<null>"
    } catch {}
    argfile_len = strlen(argfile_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 116, gettimeofday_ns(), 24 + 8 + 4 + argfile_len + 8, pid(), mutex, argfile_len, argfile_len, argfile_str, line)
}
probe qemu.kvm.simpletrace.qemu_mutex_unlock = qemu.kvm.qemu_mutex_unlock ?
{
    try {
        argfile_str = file ? user_string_n(file, 512) : "<null>"
    } catch {}
    argfile_len = strlen(argfile_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 117, gettimeofday_ns(), 24 + 8 + 4 + argfile_len + 8, pid(), mutex, argfile_len, argfile_len, argfile_str, line)
}
probe qemu.kvm.simpletrace.qemu_vfio_dma_reset_temporary = qemu.kvm.qemu_vfio_dma_reset_temporary ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 118, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.qemu_vfio_ram_block_added = qemu.kvm.qemu_vfio_ram_block_added ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 119, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, p, size)
}
probe qemu.kvm.simpletrace.qemu_vfio_ram_block_removed = qemu.kvm.qemu_vfio_ram_block_removed ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 120, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, p, size)
}
probe qemu.kvm.simpletrace.qemu_vfio_find_mapping = qemu.kvm.qemu_vfio_find_mapping ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 121, gettimeofday_ns(), 24 + 8 + 8, pid(), s, p)
}
probe qemu.kvm.simpletrace.qemu_vfio_new_mapping = qemu.kvm.qemu_vfio_new_mapping ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 122, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, host, size, index, iova)
}
probe qemu.kvm.simpletrace.qemu_vfio_do_mapping = qemu.kvm.qemu_vfio_do_mapping ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 123, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, host, size, iova)
}
probe qemu.kvm.simpletrace.qemu_vfio_dma_map = qemu.kvm.qemu_vfio_dma_map ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 124, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, host, size, temporary, iova)
}
probe qemu.kvm.simpletrace.qemu_vfio_dma_map_invalid = qemu.kvm.qemu_vfio_dma_map_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 125, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, mapping_host, mapping_size, host, size)
}
probe qemu.kvm.simpletrace.qemu_vfio_dma_unmap = qemu.kvm.qemu_vfio_dma_unmap ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 126, gettimeofday_ns(), 24 + 8 + 8, pid(), s, host)
}
probe qemu.kvm.simpletrace.qcrypto_tls_creds_load_dh = qemu.kvm.qcrypto_tls_creds_load_dh ?
{
    try {
        argfilename_str = filename ? user_string_n(filename, 512) : "<null>"
    } catch {}
    argfilename_len = strlen(argfilename_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 127, gettimeofday_ns(), 24 + 8 + 4 + argfilename_len, pid(), creds, argfilename_len, argfilename_len, argfilename_str)
}
probe qemu.kvm.simpletrace.qcrypto_tls_creds_get_path = qemu.kvm.qcrypto_tls_creds_get_path ?
{
    try {
        argfilename_str = filename ? user_string_n(filename, 512) : "<null>"
    } catch {}
    argfilename_len = strlen(argfilename_str)
    try {
        argpath_str = path ? user_string_n(path, 512) : "<null>"
    } catch {}
    argpath_len = strlen(argpath_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%4b%.*s", 1, 128, gettimeofday_ns(), 24 + 8 + 4 + argfilename_len + 4 + argpath_len, pid(), creds, argfilename_len, argfilename_len, argfilename_str, argpath_len, argpath_len, argpath_str)
}
probe qemu.kvm.simpletrace.qcrypto_tls_creds_anon_load = qemu.kvm.qcrypto_tls_creds_anon_load ?
{
    try {
        argdir_str = dir ? user_string_n(dir, 512) : "<null>"
    } catch {}
    argdir_len = strlen(argdir_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 129, gettimeofday_ns(), 24 + 8 + 4 + argdir_len, pid(), creds, argdir_len, argdir_len, argdir_str)
}
probe qemu.kvm.simpletrace.qcrypto_tls_creds_x509_load = qemu.kvm.qcrypto_tls_creds_x509_load ?
{
    try {
        argdir_str = dir ? user_string_n(dir, 512) : "<null>"
    } catch {}
    argdir_len = strlen(argdir_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 130, gettimeofday_ns(), 24 + 8 + 4 + argdir_len, pid(), creds, argdir_len, argdir_len, argdir_str)
}
probe qemu.kvm.simpletrace.qcrypto_tls_creds_x509_check_basic_constraints = qemu.kvm.qcrypto_tls_creds_x509_check_basic_constraints ?
{
    try {
        argfile_str = file ? user_string_n(file, 512) : "<null>"
    } catch {}
    argfile_len = strlen(argfile_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 131, gettimeofday_ns(), 24 + 8 + 4 + argfile_len + 8, pid(), creds, argfile_len, argfile_len, argfile_str, status)
}
probe qemu.kvm.simpletrace.qcrypto_tls_creds_x509_check_key_usage = qemu.kvm.qcrypto_tls_creds_x509_check_key_usage ?
{
    try {
        argfile_str = file ? user_string_n(file, 512) : "<null>"
    } catch {}
    argfile_len = strlen(argfile_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%8b%8b", 1, 132, gettimeofday_ns(), 24 + 8 + 4 + argfile_len + 8 + 8 + 8, pid(), creds, argfile_len, argfile_len, argfile_str, status, usage, critical)
}
probe qemu.kvm.simpletrace.qcrypto_tls_creds_x509_check_key_purpose = qemu.kvm.qcrypto_tls_creds_x509_check_key_purpose ?
{
    try {
        argfile_str = file ? user_string_n(file, 512) : "<null>"
    } catch {}
    argfile_len = strlen(argfile_str)
    try {
        argusage_str = usage ? user_string_n(usage, 512) : "<null>"
    } catch {}
    argusage_len = strlen(argusage_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%4b%.*s%8b", 1, 133, gettimeofday_ns(), 24 + 8 + 4 + argfile_len + 8 + 4 + argusage_len + 8, pid(), creds, argfile_len, argfile_len, argfile_str, status, argusage_len, argusage_len, argusage_str, critical)
}
probe qemu.kvm.simpletrace.qcrypto_tls_creds_x509_load_cert = qemu.kvm.qcrypto_tls_creds_x509_load_cert ?
{
    try {
        argfile_str = file ? user_string_n(file, 512) : "<null>"
    } catch {}
    argfile_len = strlen(argfile_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 134, gettimeofday_ns(), 24 + 8 + 8 + 4 + argfile_len, pid(), creds, isServer, argfile_len, argfile_len, argfile_str)
}
probe qemu.kvm.simpletrace.qcrypto_tls_creds_x509_load_cert_list = qemu.kvm.qcrypto_tls_creds_x509_load_cert_list ?
{
    try {
        argfile_str = file ? user_string_n(file, 512) : "<null>"
    } catch {}
    argfile_len = strlen(argfile_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 135, gettimeofday_ns(), 24 + 8 + 4 + argfile_len, pid(), creds, argfile_len, argfile_len, argfile_str)
}
probe qemu.kvm.simpletrace.qcrypto_tls_session_new = qemu.kvm.qcrypto_tls_session_new ?
{
    try {
        arghostname_str = hostname ? user_string_n(hostname, 512) : "<null>"
    } catch {}
    arghostname_len = strlen(arghostname_str)
    try {
        argaclname_str = aclname ? user_string_n(aclname, 512) : "<null>"
    } catch {}
    argaclname_len = strlen(argaclname_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s%4b%.*s%8b", 1, 136, gettimeofday_ns(), 24 + 8 + 8 + 4 + arghostname_len + 4 + argaclname_len + 8, pid(), session, creds, arghostname_len, arghostname_len, arghostname_str, argaclname_len, argaclname_len, argaclname_str, endpoint)
}
probe qemu.kvm.simpletrace.qcrypto_tls_session_check_creds = qemu.kvm.qcrypto_tls_session_check_creds ?
{
    try {
        argstatus_str = status ? user_string_n(status, 512) : "<null>"
    } catch {}
    argstatus_len = strlen(argstatus_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 137, gettimeofday_ns(), 24 + 8 + 4 + argstatus_len, pid(), session, argstatus_len, argstatus_len, argstatus_str)
}
probe qemu.kvm.simpletrace.qio_task_new = qemu.kvm.qio_task_new ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 138, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), task, source, func, opaque)
}
probe qemu.kvm.simpletrace.qio_task_complete = qemu.kvm.qio_task_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 139, gettimeofday_ns(), 24 + 8, pid(), task)
}
probe qemu.kvm.simpletrace.qio_task_thread_start = qemu.kvm.qio_task_thread_start ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 140, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), task, worker, opaque)
}
probe qemu.kvm.simpletrace.qio_task_thread_run = qemu.kvm.qio_task_thread_run ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 141, gettimeofday_ns(), 24 + 8, pid(), task)
}
probe qemu.kvm.simpletrace.qio_task_thread_exit = qemu.kvm.qio_task_thread_exit ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 142, gettimeofday_ns(), 24 + 8, pid(), task)
}
probe qemu.kvm.simpletrace.qio_task_thread_result = qemu.kvm.qio_task_thread_result ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 143, gettimeofday_ns(), 24 + 8, pid(), task)
}
probe qemu.kvm.simpletrace.qio_channel_socket_new = qemu.kvm.qio_channel_socket_new ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 144, gettimeofday_ns(), 24 + 8, pid(), ioc)
}
probe qemu.kvm.simpletrace.qio_channel_socket_new_fd = qemu.kvm.qio_channel_socket_new_fd ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 145, gettimeofday_ns(), 24 + 8 + 8, pid(), ioc, fd)
}
probe qemu.kvm.simpletrace.qio_channel_socket_connect_sync = qemu.kvm.qio_channel_socket_connect_sync ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 146, gettimeofday_ns(), 24 + 8 + 8, pid(), ioc, addr)
}
probe qemu.kvm.simpletrace.qio_channel_socket_connect_async = qemu.kvm.qio_channel_socket_connect_async ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 147, gettimeofday_ns(), 24 + 8 + 8, pid(), ioc, addr)
}
probe qemu.kvm.simpletrace.qio_channel_socket_connect_fail = qemu.kvm.qio_channel_socket_connect_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 148, gettimeofday_ns(), 24 + 8, pid(), ioc)
}
probe qemu.kvm.simpletrace.qio_channel_socket_connect_complete = qemu.kvm.qio_channel_socket_connect_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 149, gettimeofday_ns(), 24 + 8 + 8, pid(), ioc, fd)
}
probe qemu.kvm.simpletrace.qio_channel_socket_listen_sync = qemu.kvm.qio_channel_socket_listen_sync ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 150, gettimeofday_ns(), 24 + 8 + 8, pid(), ioc, addr)
}
probe qemu.kvm.simpletrace.qio_channel_socket_listen_async = qemu.kvm.qio_channel_socket_listen_async ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 151, gettimeofday_ns(), 24 + 8 + 8, pid(), ioc, addr)
}
probe qemu.kvm.simpletrace.qio_channel_socket_listen_fail = qemu.kvm.qio_channel_socket_listen_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 152, gettimeofday_ns(), 24 + 8, pid(), ioc)
}
probe qemu.kvm.simpletrace.qio_channel_socket_listen_complete = qemu.kvm.qio_channel_socket_listen_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 153, gettimeofday_ns(), 24 + 8 + 8, pid(), ioc, fd)
}
probe qemu.kvm.simpletrace.qio_channel_socket_dgram_sync = qemu.kvm.qio_channel_socket_dgram_sync ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 154, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), ioc, localAddr, remoteAddr)
}
probe qemu.kvm.simpletrace.qio_channel_socket_dgram_async = qemu.kvm.qio_channel_socket_dgram_async ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 155, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), ioc, localAddr, remoteAddr)
}
probe qemu.kvm.simpletrace.qio_channel_socket_dgram_fail = qemu.kvm.qio_channel_socket_dgram_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 156, gettimeofday_ns(), 24 + 8, pid(), ioc)
}
probe qemu.kvm.simpletrace.qio_channel_socket_dgram_complete = qemu.kvm.qio_channel_socket_dgram_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 157, gettimeofday_ns(), 24 + 8 + 8, pid(), ioc, fd)
}
probe qemu.kvm.simpletrace.qio_channel_socket_accept = qemu.kvm.qio_channel_socket_accept ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 158, gettimeofday_ns(), 24 + 8, pid(), ioc)
}
probe qemu.kvm.simpletrace.qio_channel_socket_accept_fail = qemu.kvm.qio_channel_socket_accept_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 159, gettimeofday_ns(), 24 + 8, pid(), ioc)
}
probe qemu.kvm.simpletrace.qio_channel_socket_accept_complete = qemu.kvm.qio_channel_socket_accept_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 160, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), ioc, cioc, fd)
}
probe qemu.kvm.simpletrace.qio_channel_file_new_fd = qemu.kvm.qio_channel_file_new_fd ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 161, gettimeofday_ns(), 24 + 8 + 8, pid(), ioc, fd)
}
probe qemu.kvm.simpletrace.qio_channel_file_new_path = qemu.kvm.qio_channel_file_new_path ?
{
    try {
        argpath_str = path ? user_string_n(path, 512) : "<null>"
    } catch {}
    argpath_len = strlen(argpath_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%8b%8b", 1, 162, gettimeofday_ns(), 24 + 8 + 4 + argpath_len + 8 + 8 + 8, pid(), ioc, argpath_len, argpath_len, argpath_str, flags, mode, fd)
}
probe qemu.kvm.simpletrace.qio_channel_tls_new_client = qemu.kvm.qio_channel_tls_new_client ?
{
    try {
        arghostname_str = hostname ? user_string_n(hostname, 512) : "<null>"
    } catch {}
    arghostname_len = strlen(arghostname_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%4b%.*s", 1, 163, gettimeofday_ns(), 24 + 8 + 8 + 8 + 4 + arghostname_len, pid(), ioc, master, creds, arghostname_len, arghostname_len, arghostname_str)
}
probe qemu.kvm.simpletrace.qio_channel_tls_new_server = qemu.kvm.qio_channel_tls_new_server ?
{
    try {
        argaclname_str = aclname ? user_string_n(aclname, 512) : "<null>"
    } catch {}
    argaclname_len = strlen(argaclname_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%4b%.*s", 1, 164, gettimeofday_ns(), 24 + 8 + 8 + 8 + 4 + argaclname_len, pid(), ioc, master, creds, argaclname_len, argaclname_len, argaclname_str)
}
probe qemu.kvm.simpletrace.qio_channel_tls_handshake_start = qemu.kvm.qio_channel_tls_handshake_start ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 165, gettimeofday_ns(), 24 + 8, pid(), ioc)
}
probe qemu.kvm.simpletrace.qio_channel_tls_handshake_pending = qemu.kvm.qio_channel_tls_handshake_pending ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 166, gettimeofday_ns(), 24 + 8 + 8, pid(), ioc, status)
}
probe qemu.kvm.simpletrace.qio_channel_tls_handshake_fail = qemu.kvm.qio_channel_tls_handshake_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 167, gettimeofday_ns(), 24 + 8, pid(), ioc)
}
probe qemu.kvm.simpletrace.qio_channel_tls_handshake_complete = qemu.kvm.qio_channel_tls_handshake_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 168, gettimeofday_ns(), 24 + 8, pid(), ioc)
}
probe qemu.kvm.simpletrace.qio_channel_tls_credentials_allow = qemu.kvm.qio_channel_tls_credentials_allow ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 169, gettimeofday_ns(), 24 + 8, pid(), ioc)
}
probe qemu.kvm.simpletrace.qio_channel_tls_credentials_deny = qemu.kvm.qio_channel_tls_credentials_deny ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 170, gettimeofday_ns(), 24 + 8, pid(), ioc)
}
probe qemu.kvm.simpletrace.qio_channel_websock_new_server = qemu.kvm.qio_channel_websock_new_server ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 171, gettimeofday_ns(), 24 + 8 + 8, pid(), ioc, master)
}
probe qemu.kvm.simpletrace.qio_channel_websock_handshake_start = qemu.kvm.qio_channel_websock_handshake_start ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 172, gettimeofday_ns(), 24 + 8, pid(), ioc)
}
probe qemu.kvm.simpletrace.qio_channel_websock_handshake_pending = qemu.kvm.qio_channel_websock_handshake_pending ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 173, gettimeofday_ns(), 24 + 8 + 8, pid(), ioc, status)
}
probe qemu.kvm.simpletrace.qio_channel_websock_handshake_reply = qemu.kvm.qio_channel_websock_handshake_reply ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 174, gettimeofday_ns(), 24 + 8, pid(), ioc)
}
probe qemu.kvm.simpletrace.qio_channel_websock_handshake_fail = qemu.kvm.qio_channel_websock_handshake_fail ?
{
    try {
        argmsg_str = msg ? user_string_n(msg, 512) : "<null>"
    } catch {}
    argmsg_len = strlen(argmsg_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 175, gettimeofday_ns(), 24 + 8 + 4 + argmsg_len, pid(), ioc, argmsg_len, argmsg_len, argmsg_str)
}
probe qemu.kvm.simpletrace.qio_channel_websock_handshake_complete = qemu.kvm.qio_channel_websock_handshake_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 176, gettimeofday_ns(), 24 + 8, pid(), ioc)
}
probe qemu.kvm.simpletrace.qio_channel_websock_http_greeting = qemu.kvm.qio_channel_websock_http_greeting ?
{
    try {
        arggreeting_str = greeting ? user_string_n(greeting, 512) : "<null>"
    } catch {}
    arggreeting_len = strlen(arggreeting_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 177, gettimeofday_ns(), 24 + 8 + 4 + arggreeting_len, pid(), ioc, arggreeting_len, arggreeting_len, arggreeting_str)
}
probe qemu.kvm.simpletrace.qio_channel_websock_http_request = qemu.kvm.qio_channel_websock_http_request ?
{
    try {
        argprotocols_str = protocols ? user_string_n(protocols, 512) : "<null>"
    } catch {}
    argprotocols_len = strlen(argprotocols_str)
    try {
        argversion_str = version ? user_string_n(version, 512) : "<null>"
    } catch {}
    argversion_len = strlen(argversion_str)
    try {
        arghost_str = host ? user_string_n(host, 512) : "<null>"
    } catch {}
    arghost_len = strlen(arghost_str)
    try {
        argconnection_str = connection ? user_string_n(connection, 512) : "<null>"
    } catch {}
    argconnection_len = strlen(argconnection_str)
    try {
        argupgrade_str = upgrade ? user_string_n(upgrade, 512) : "<null>"
    } catch {}
    argupgrade_len = strlen(argupgrade_str)
    try {
        argkey_str = key ? user_string_n(key, 512) : "<null>"
    } catch {}
    argkey_len = strlen(argkey_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%4b%.*s%4b%.*s%4b%.*s%4b%.*s%4b%.*s", 1, 178, gettimeofday_ns(), 24 + 8 + 4 + argprotocols_len + 4 + argversion_len + 4 + arghost_len + 4 + argconnection_len + 4 + argupgrade_len + 4 + argkey_len, pid(), ioc, argprotocols_len, argprotocols_len, argprotocols_str, argversion_len, argversion_len, argversion_str, arghost_len, arghost_len, arghost_str, argconnection_len, argconnection_len, argconnection_str, argupgrade_len, argupgrade_len, argupgrade_str, argkey_len, argkey_len, argkey_str)
}
probe qemu.kvm.simpletrace.qio_channel_websock_header_partial_decode = qemu.kvm.qio_channel_websock_header_partial_decode ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 179, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), ioc, payloadlen, fin, opcode, has_mask)
}
probe qemu.kvm.simpletrace.qio_channel_websock_header_full_decode = qemu.kvm.qio_channel_websock_header_full_decode ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 180, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), ioc, headerlen, payloadlen, mask)
}
probe qemu.kvm.simpletrace.qio_channel_websock_payload_decode = qemu.kvm.qio_channel_websock_payload_decode ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 181, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), ioc, opcode, payload_remain)
}
probe qemu.kvm.simpletrace.qio_channel_websock_encode = qemu.kvm.qio_channel_websock_encode ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 182, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), ioc, opcode, payloadlen, headerlen)
}
probe qemu.kvm.simpletrace.qio_channel_websock_close = qemu.kvm.qio_channel_websock_close ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 183, gettimeofday_ns(), 24 + 8, pid(), ioc)
}
probe qemu.kvm.simpletrace.qio_channel_command_new_pid = qemu.kvm.qio_channel_command_new_pid ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 184, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), ioc, writefd, readfd, pid)
}
probe qemu.kvm.simpletrace.qio_channel_command_new_spawn = qemu.kvm.qio_channel_command_new_spawn ?
{
    try {
        argbinary_str = binary ? user_string_n(binary, 512) : "<null>"
    } catch {}
    argbinary_len = strlen(argbinary_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 185, gettimeofday_ns(), 24 + 8 + 4 + argbinary_len + 8, pid(), ioc, argbinary_len, argbinary_len, argbinary_str, flags)
}
probe qemu.kvm.simpletrace.qio_channel_command_abort = qemu.kvm.qio_channel_command_abort ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 186, gettimeofday_ns(), 24 + 8 + 8, pid(), ioc, pid)
}
probe qemu.kvm.simpletrace.qio_channel_command_wait = qemu.kvm.qio_channel_command_wait ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 187, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), ioc, pid, ret, status)
}
probe qemu.kvm.simpletrace.qemu_loadvm_state_section = qemu.kvm.qemu_loadvm_state_section ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 188, gettimeofday_ns(), 24 + 8, pid(), section_type)
}
probe qemu.kvm.simpletrace.qemu_loadvm_state_section_command = qemu.kvm.qemu_loadvm_state_section_command ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 189, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.qemu_loadvm_state_section_partend = qemu.kvm.qemu_loadvm_state_section_partend ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 190, gettimeofday_ns(), 24 + 8, pid(), section_id)
}
probe qemu.kvm.simpletrace.qemu_loadvm_state_post_main = qemu.kvm.qemu_loadvm_state_post_main ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 191, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.qemu_loadvm_state_section_startfull = qemu.kvm.qemu_loadvm_state_section_startfull ?
{
    try {
        argidstr_str = idstr ? user_string_n(idstr, 512) : "<null>"
    } catch {}
    argidstr_len = strlen(argidstr_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%8b", 1, 192, gettimeofday_ns(), 24 + 8 + 4 + argidstr_len + 8 + 8, pid(), section_id, argidstr_len, argidstr_len, argidstr_str, instance_id, version_id)
}
probe qemu.kvm.simpletrace.qemu_savevm_send_packaged = qemu.kvm.qemu_savevm_send_packaged ?
{
    printf("%8b%8b%8b%4b%4b", 1, 193, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.loadvm_state_setup = qemu.kvm.loadvm_state_setup ?
{
    printf("%8b%8b%8b%4b%4b", 1, 194, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.loadvm_state_cleanup = qemu.kvm.loadvm_state_cleanup ?
{
    printf("%8b%8b%8b%4b%4b", 1, 195, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.loadvm_handle_cmd_packaged = qemu.kvm.loadvm_handle_cmd_packaged ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 196, gettimeofday_ns(), 24 + 8, pid(), length)
}
probe qemu.kvm.simpletrace.loadvm_handle_cmd_packaged_main = qemu.kvm.loadvm_handle_cmd_packaged_main ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 197, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.loadvm_handle_cmd_packaged_received = qemu.kvm.loadvm_handle_cmd_packaged_received ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 198, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.loadvm_postcopy_handle_advise = qemu.kvm.loadvm_postcopy_handle_advise ?
{
    printf("%8b%8b%8b%4b%4b", 1, 199, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.loadvm_postcopy_handle_listen = qemu.kvm.loadvm_postcopy_handle_listen ?
{
    printf("%8b%8b%8b%4b%4b", 1, 200, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.loadvm_postcopy_handle_run = qemu.kvm.loadvm_postcopy_handle_run ?
{
    printf("%8b%8b%8b%4b%4b", 1, 201, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.loadvm_postcopy_handle_run_cpu_sync = qemu.kvm.loadvm_postcopy_handle_run_cpu_sync ?
{
    printf("%8b%8b%8b%4b%4b", 1, 202, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.loadvm_postcopy_handle_run_vmstart = qemu.kvm.loadvm_postcopy_handle_run_vmstart ?
{
    printf("%8b%8b%8b%4b%4b", 1, 203, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.loadvm_postcopy_ram_handle_discard = qemu.kvm.loadvm_postcopy_ram_handle_discard ?
{
    printf("%8b%8b%8b%4b%4b", 1, 204, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.loadvm_postcopy_ram_handle_discard_end = qemu.kvm.loadvm_postcopy_ram_handle_discard_end ?
{
    printf("%8b%8b%8b%4b%4b", 1, 205, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.loadvm_postcopy_ram_handle_discard_header = qemu.kvm.loadvm_postcopy_ram_handle_discard_header ?
{
    try {
        argramid_str = ramid ? user_string_n(ramid, 512) : "<null>"
    } catch {}
    argramid_len = strlen(argramid_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 206, gettimeofday_ns(), 24 + 4 + argramid_len + 8, pid(), argramid_len, argramid_len, argramid_str, len)
}
probe qemu.kvm.simpletrace.loadvm_process_command = qemu.kvm.loadvm_process_command ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 207, gettimeofday_ns(), 24 + 8 + 8, pid(), com, len)
}
probe qemu.kvm.simpletrace.loadvm_process_command_ping = qemu.kvm.loadvm_process_command_ping ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 208, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.postcopy_ram_listen_thread_exit = qemu.kvm.postcopy_ram_listen_thread_exit ?
{
    printf("%8b%8b%8b%4b%4b", 1, 209, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.postcopy_ram_listen_thread_start = qemu.kvm.postcopy_ram_listen_thread_start ?
{
    printf("%8b%8b%8b%4b%4b", 1, 210, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.qemu_savevm_send_postcopy_advise = qemu.kvm.qemu_savevm_send_postcopy_advise ?
{
    printf("%8b%8b%8b%4b%4b", 1, 211, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.qemu_savevm_send_postcopy_ram_discard = qemu.kvm.qemu_savevm_send_postcopy_ram_discard ?
{
    try {
        argid_str = id ? user_string_n(id, 512) : "<null>"
    } catch {}
    argid_len = strlen(argid_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 212, gettimeofday_ns(), 24 + 4 + argid_len + 8, pid(), argid_len, argid_len, argid_str, len)
}
probe qemu.kvm.simpletrace.savevm_command_send = qemu.kvm.savevm_command_send ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 213, gettimeofday_ns(), 24 + 8 + 8, pid(), command, len)
}
probe qemu.kvm.simpletrace.savevm_section_start = qemu.kvm.savevm_section_start ?
{
    try {
        argid_str = id ? user_string_n(id, 512) : "<null>"
    } catch {}
    argid_len = strlen(argid_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 214, gettimeofday_ns(), 24 + 4 + argid_len + 8, pid(), argid_len, argid_len, argid_str, section_id)
}
probe qemu.kvm.simpletrace.savevm_section_end = qemu.kvm.savevm_section_end ?
{
    try {
        argid_str = id ? user_string_n(id, 512) : "<null>"
    } catch {}
    argid_len = strlen(argid_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 215, gettimeofday_ns(), 24 + 4 + argid_len + 8 + 8, pid(), argid_len, argid_len, argid_str, section_id, ret)
}
probe qemu.kvm.simpletrace.savevm_section_skip = qemu.kvm.savevm_section_skip ?
{
    try {
        argid_str = id ? user_string_n(id, 512) : "<null>"
    } catch {}
    argid_len = strlen(argid_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 216, gettimeofday_ns(), 24 + 4 + argid_len + 8, pid(), argid_len, argid_len, argid_str, section_id)
}
probe qemu.kvm.simpletrace.savevm_send_open_return_path = qemu.kvm.savevm_send_open_return_path ?
{
    printf("%8b%8b%8b%4b%4b", 1, 217, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.savevm_send_ping = qemu.kvm.savevm_send_ping ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 218, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.savevm_send_postcopy_listen = qemu.kvm.savevm_send_postcopy_listen ?
{
    printf("%8b%8b%8b%4b%4b", 1, 219, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.savevm_send_postcopy_run = qemu.kvm.savevm_send_postcopy_run ?
{
    printf("%8b%8b%8b%4b%4b", 1, 220, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.savevm_state_setup = qemu.kvm.savevm_state_setup ?
{
    printf("%8b%8b%8b%4b%4b", 1, 221, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.savevm_state_header = qemu.kvm.savevm_state_header ?
{
    printf("%8b%8b%8b%4b%4b", 1, 222, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.savevm_state_iterate = qemu.kvm.savevm_state_iterate ?
{
    printf("%8b%8b%8b%4b%4b", 1, 223, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.savevm_state_cleanup = qemu.kvm.savevm_state_cleanup ?
{
    printf("%8b%8b%8b%4b%4b", 1, 224, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.savevm_state_complete_precopy = qemu.kvm.savevm_state_complete_precopy ?
{
    printf("%8b%8b%8b%4b%4b", 1, 225, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.vmstate_save = qemu.kvm.vmstate_save ?
{
    try {
        argidstr_str = idstr ? user_string_n(idstr, 512) : "<null>"
    } catch {}
    argidstr_len = strlen(argidstr_str)
    try {
        argvmsd_name_str = vmsd_name ? user_string_n(vmsd_name, 512) : "<null>"
    } catch {}
    argvmsd_name_len = strlen(argvmsd_name_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 226, gettimeofday_ns(), 24 + 4 + argidstr_len + 4 + argvmsd_name_len, pid(), argidstr_len, argidstr_len, argidstr_str, argvmsd_name_len, argvmsd_name_len, argvmsd_name_str)
}
probe qemu.kvm.simpletrace.vmstate_save_state_pre_save_res = qemu.kvm.vmstate_save_state_pre_save_res ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 227, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, res)
}
probe qemu.kvm.simpletrace.vmstate_save_state_loop = qemu.kvm.vmstate_save_state_loop ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argfield_str = field ? user_string_n(field, 512) : "<null>"
    } catch {}
    argfield_len = strlen(argfield_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%8b", 1, 228, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argfield_len + 8, pid(), argname_len, argname_len, argname_str, argfield_len, argfield_len, argfield_str, n_elems)
}
probe qemu.kvm.simpletrace.vmstate_save_state_top = qemu.kvm.vmstate_save_state_top ?
{
    try {
        argidstr_str = idstr ? user_string_n(idstr, 512) : "<null>"
    } catch {}
    argidstr_len = strlen(argidstr_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 229, gettimeofday_ns(), 24 + 4 + argidstr_len, pid(), argidstr_len, argidstr_len, argidstr_str)
}
probe qemu.kvm.simpletrace.vmstate_subsection_save_loop = qemu.kvm.vmstate_subsection_save_loop ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argsub_str = sub ? user_string_n(sub, 512) : "<null>"
    } catch {}
    argsub_len = strlen(argsub_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 230, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argsub_len, pid(), argname_len, argname_len, argname_str, argsub_len, argsub_len, argsub_str)
}
probe qemu.kvm.simpletrace.vmstate_subsection_save_top = qemu.kvm.vmstate_subsection_save_top ?
{
    try {
        argidstr_str = idstr ? user_string_n(idstr, 512) : "<null>"
    } catch {}
    argidstr_len = strlen(argidstr_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 231, gettimeofday_ns(), 24 + 4 + argidstr_len, pid(), argidstr_len, argidstr_len, argidstr_str)
}
probe qemu.kvm.simpletrace.vmstate_load = qemu.kvm.vmstate_load ?
{
    try {
        argidstr_str = idstr ? user_string_n(idstr, 512) : "<null>"
    } catch {}
    argidstr_len = strlen(argidstr_str)
    try {
        argvmsd_name_str = vmsd_name ? user_string_n(vmsd_name, 512) : "<null>"
    } catch {}
    argvmsd_name_len = strlen(argvmsd_name_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 232, gettimeofday_ns(), 24 + 4 + argidstr_len + 4 + argvmsd_name_len, pid(), argidstr_len, argidstr_len, argidstr_str, argvmsd_name_len, argvmsd_name_len, argvmsd_name_str)
}
probe qemu.kvm.simpletrace.qemu_announce_self_iter = qemu.kvm.qemu_announce_self_iter ?
{
    try {
        argmac_str = mac ? user_string_n(mac, 512) : "<null>"
    } catch {}
    argmac_len = strlen(argmac_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 233, gettimeofday_ns(), 24 + 4 + argmac_len, pid(), argmac_len, argmac_len, argmac_str)
}
probe qemu.kvm.simpletrace.vmstate_load_field_error = qemu.kvm.vmstate_load_field_error ?
{
    try {
        argfield_str = field ? user_string_n(field, 512) : "<null>"
    } catch {}
    argfield_len = strlen(argfield_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 234, gettimeofday_ns(), 24 + 4 + argfield_len + 8, pid(), argfield_len, argfield_len, argfield_str, ret)
}
probe qemu.kvm.simpletrace.vmstate_load_state = qemu.kvm.vmstate_load_state ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 235, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, version_id)
}
probe qemu.kvm.simpletrace.vmstate_load_state_end = qemu.kvm.vmstate_load_state_end ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argreason_str = reason ? user_string_n(reason, 512) : "<null>"
    } catch {}
    argreason_len = strlen(argreason_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%8b", 1, 236, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argreason_len + 8, pid(), argname_len, argname_len, argname_str, argreason_len, argreason_len, argreason_str, val)
}
probe qemu.kvm.simpletrace.vmstate_load_state_field = qemu.kvm.vmstate_load_state_field ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argfield_str = field ? user_string_n(field, 512) : "<null>"
    } catch {}
    argfield_len = strlen(argfield_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 237, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argfield_len, pid(), argname_len, argname_len, argname_str, argfield_len, argfield_len, argfield_str)
}
probe qemu.kvm.simpletrace.vmstate_n_elems = qemu.kvm.vmstate_n_elems ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 238, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, n_elems)
}
probe qemu.kvm.simpletrace.vmstate_subsection_load = qemu.kvm.vmstate_subsection_load ?
{
    try {
        argparent_str = parent ? user_string_n(parent, 512) : "<null>"
    } catch {}
    argparent_len = strlen(argparent_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 239, gettimeofday_ns(), 24 + 4 + argparent_len, pid(), argparent_len, argparent_len, argparent_str)
}
probe qemu.kvm.simpletrace.vmstate_subsection_load_bad = qemu.kvm.vmstate_subsection_load_bad ?
{
    try {
        argparent_str = parent ? user_string_n(parent, 512) : "<null>"
    } catch {}
    argparent_len = strlen(argparent_str)
    try {
        argsub_str = sub ? user_string_n(sub, 512) : "<null>"
    } catch {}
    argsub_len = strlen(argsub_str)
    try {
        argsub2_str = sub2 ? user_string_n(sub2, 512) : "<null>"
    } catch {}
    argsub2_len = strlen(argsub2_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%4b%.*s", 1, 240, gettimeofday_ns(), 24 + 4 + argparent_len + 4 + argsub_len + 4 + argsub2_len, pid(), argparent_len, argparent_len, argparent_str, argsub_len, argsub_len, argsub_str, argsub2_len, argsub2_len, argsub2_str)
}
probe qemu.kvm.simpletrace.vmstate_subsection_load_good = qemu.kvm.vmstate_subsection_load_good ?
{
    try {
        argparent_str = parent ? user_string_n(parent, 512) : "<null>"
    } catch {}
    argparent_len = strlen(argparent_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 241, gettimeofday_ns(), 24 + 4 + argparent_len, pid(), argparent_len, argparent_len, argparent_str)
}
probe qemu.kvm.simpletrace.get_qtailq = qemu.kvm.get_qtailq ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 242, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, version_id)
}
probe qemu.kvm.simpletrace.get_qtailq_end = qemu.kvm.get_qtailq_end ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argreason_str = reason ? user_string_n(reason, 512) : "<null>"
    } catch {}
    argreason_len = strlen(argreason_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%8b", 1, 243, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argreason_len + 8, pid(), argname_len, argname_len, argname_str, argreason_len, argreason_len, argreason_str, val)
}
probe qemu.kvm.simpletrace.put_qtailq = qemu.kvm.put_qtailq ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 244, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, version_id)
}
probe qemu.kvm.simpletrace.put_qtailq_end = qemu.kvm.put_qtailq_end ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argreason_str = reason ? user_string_n(reason, 512) : "<null>"
    } catch {}
    argreason_len = strlen(argreason_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 245, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argreason_len, pid(), argname_len, argname_len, argname_str, argreason_len, argreason_len, argreason_str)
}
probe qemu.kvm.simpletrace.qemu_file_fclose = qemu.kvm.qemu_file_fclose ?
{
    printf("%8b%8b%8b%4b%4b", 1, 246, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.get_queued_page = qemu.kvm.get_queued_page ?
{
    try {
        argblock_name_str = block_name ? user_string_n(block_name, 512) : "<null>"
    } catch {}
    argblock_name_len = strlen(argblock_name_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 247, gettimeofday_ns(), 24 + 4 + argblock_name_len + 8 + 8, pid(), argblock_name_len, argblock_name_len, argblock_name_str, tmp_offset, page_abs)
}
probe qemu.kvm.simpletrace.get_queued_page_not_dirty = qemu.kvm.get_queued_page_not_dirty ?
{
    try {
        argblock_name_str = block_name ? user_string_n(block_name, 512) : "<null>"
    } catch {}
    argblock_name_len = strlen(argblock_name_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 248, gettimeofday_ns(), 24 + 4 + argblock_name_len + 8 + 8 + 8, pid(), argblock_name_len, argblock_name_len, argblock_name_str, tmp_offset, page_abs, sent)
}
probe qemu.kvm.simpletrace.migration_bitmap_sync_start = qemu.kvm.migration_bitmap_sync_start ?
{
    printf("%8b%8b%8b%4b%4b", 1, 249, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.migration_bitmap_sync_end = qemu.kvm.migration_bitmap_sync_end ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 250, gettimeofday_ns(), 24 + 8, pid(), dirty_pages)
}
probe qemu.kvm.simpletrace.migration_throttle = qemu.kvm.migration_throttle ?
{
    printf("%8b%8b%8b%4b%4b", 1, 251, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.ram_discard_range = qemu.kvm.ram_discard_range ?
{
    try {
        argrbname_str = rbname ? user_string_n(rbname, 512) : "<null>"
    } catch {}
    argrbname_len = strlen(argrbname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 252, gettimeofday_ns(), 24 + 4 + argrbname_len + 8 + 8, pid(), argrbname_len, argrbname_len, argrbname_str, start, len)
}
probe qemu.kvm.simpletrace.ram_load_loop = qemu.kvm.ram_load_loop ?
{
    try {
        argrbname_str = rbname ? user_string_n(rbname, 512) : "<null>"
    } catch {}
    argrbname_len = strlen(argrbname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 253, gettimeofday_ns(), 24 + 4 + argrbname_len + 8 + 8 + 8, pid(), argrbname_len, argrbname_len, argrbname_str, addr, flags, host)
}
probe qemu.kvm.simpletrace.ram_load_postcopy_loop = qemu.kvm.ram_load_postcopy_loop ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 254, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, flags)
}
probe qemu.kvm.simpletrace.ram_postcopy_send_discard_bitmap = qemu.kvm.ram_postcopy_send_discard_bitmap ?
{
    printf("%8b%8b%8b%4b%4b", 1, 255, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.ram_save_page = qemu.kvm.ram_save_page ?
{
    try {
        argrbname_str = rbname ? user_string_n(rbname, 512) : "<null>"
    } catch {}
    argrbname_len = strlen(argrbname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 256, gettimeofday_ns(), 24 + 4 + argrbname_len + 8 + 8, pid(), argrbname_len, argrbname_len, argrbname_str, offset, host)
}
probe qemu.kvm.simpletrace.ram_save_queue_pages = qemu.kvm.ram_save_queue_pages ?
{
    try {
        argrbname_str = rbname ? user_string_n(rbname, 512) : "<null>"
    } catch {}
    argrbname_len = strlen(argrbname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 257, gettimeofday_ns(), 24 + 4 + argrbname_len + 8 + 8, pid(), argrbname_len, argrbname_len, argrbname_str, start, len)
}
probe qemu.kvm.simpletrace.await_return_path_close_on_source_close = qemu.kvm.await_return_path_close_on_source_close ?
{
    printf("%8b%8b%8b%4b%4b", 1, 258, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.await_return_path_close_on_source_joining = qemu.kvm.await_return_path_close_on_source_joining ?
{
    printf("%8b%8b%8b%4b%4b", 1, 259, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.migrate_set_state = qemu.kvm.migrate_set_state ?
{
    try {
        argnew_state_str = new_state ? user_string_n(new_state, 512) : "<null>"
    } catch {}
    argnew_state_len = strlen(argnew_state_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 260, gettimeofday_ns(), 24 + 4 + argnew_state_len, pid(), argnew_state_len, argnew_state_len, argnew_state_str)
}
probe qemu.kvm.simpletrace.migrate_fd_cleanup = qemu.kvm.migrate_fd_cleanup ?
{
    printf("%8b%8b%8b%4b%4b", 1, 261, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.migrate_fd_error = qemu.kvm.migrate_fd_error ?
{
    try {
        argerror_desc_str = error_desc ? user_string_n(error_desc, 512) : "<null>"
    } catch {}
    argerror_desc_len = strlen(argerror_desc_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 262, gettimeofday_ns(), 24 + 4 + argerror_desc_len, pid(), argerror_desc_len, argerror_desc_len, argerror_desc_str)
}
probe qemu.kvm.simpletrace.migrate_fd_cancel = qemu.kvm.migrate_fd_cancel ?
{
    printf("%8b%8b%8b%4b%4b", 1, 263, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.migrate_handle_rp_req_pages = qemu.kvm.migrate_handle_rp_req_pages ?
{
    try {
        argrbname_str = rbname ? user_string_n(rbname, 512) : "<null>"
    } catch {}
    argrbname_len = strlen(argrbname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 264, gettimeofday_ns(), 24 + 4 + argrbname_len + 8 + 8, pid(), argrbname_len, argrbname_len, argrbname_str, start, len)
}
probe qemu.kvm.simpletrace.migrate_pending = qemu.kvm.migrate_pending ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 265, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), size, max, pre, compat, post)
}
probe qemu.kvm.simpletrace.migrate_send_rp_message = qemu.kvm.migrate_send_rp_message ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 266, gettimeofday_ns(), 24 + 8 + 8, pid(), msg_type, len)
}
probe qemu.kvm.simpletrace.migration_completion_file_err = qemu.kvm.migration_completion_file_err ?
{
    printf("%8b%8b%8b%4b%4b", 1, 267, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.migration_completion_postcopy_end = qemu.kvm.migration_completion_postcopy_end ?
{
    printf("%8b%8b%8b%4b%4b", 1, 268, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.migration_completion_postcopy_end_after_complete = qemu.kvm.migration_completion_postcopy_end_after_complete ?
{
    printf("%8b%8b%8b%4b%4b", 1, 269, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.migration_return_path_end_before = qemu.kvm.migration_return_path_end_before ?
{
    printf("%8b%8b%8b%4b%4b", 1, 270, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.migration_return_path_end_after = qemu.kvm.migration_return_path_end_after ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 271, gettimeofday_ns(), 24 + 8, pid(), rp_error)
}
probe qemu.kvm.simpletrace.migration_thread_after_loop = qemu.kvm.migration_thread_after_loop ?
{
    printf("%8b%8b%8b%4b%4b", 1, 272, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.migration_thread_file_err = qemu.kvm.migration_thread_file_err ?
{
    printf("%8b%8b%8b%4b%4b", 1, 273, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.migration_thread_setup_complete = qemu.kvm.migration_thread_setup_complete ?
{
    printf("%8b%8b%8b%4b%4b", 1, 274, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.open_return_path_on_source = qemu.kvm.open_return_path_on_source ?
{
    printf("%8b%8b%8b%4b%4b", 1, 275, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.open_return_path_on_source_continue = qemu.kvm.open_return_path_on_source_continue ?
{
    printf("%8b%8b%8b%4b%4b", 1, 276, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.postcopy_start = qemu.kvm.postcopy_start ?
{
    printf("%8b%8b%8b%4b%4b", 1, 277, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.postcopy_start_set_run = qemu.kvm.postcopy_start_set_run ?
{
    printf("%8b%8b%8b%4b%4b", 1, 278, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.source_return_path_thread_bad_end = qemu.kvm.source_return_path_thread_bad_end ?
{
    printf("%8b%8b%8b%4b%4b", 1, 279, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.source_return_path_thread_end = qemu.kvm.source_return_path_thread_end ?
{
    printf("%8b%8b%8b%4b%4b", 1, 280, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.source_return_path_thread_entry = qemu.kvm.source_return_path_thread_entry ?
{
    printf("%8b%8b%8b%4b%4b", 1, 281, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.source_return_path_thread_loop_top = qemu.kvm.source_return_path_thread_loop_top ?
{
    printf("%8b%8b%8b%4b%4b", 1, 282, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.source_return_path_thread_pong = qemu.kvm.source_return_path_thread_pong ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 283, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.source_return_path_thread_shut = qemu.kvm.source_return_path_thread_shut ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 284, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.migrate_global_state_post_load = qemu.kvm.migrate_global_state_post_load ?
{
    try {
        argstate_str = state ? user_string_n(state, 512) : "<null>"
    } catch {}
    argstate_len = strlen(argstate_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 285, gettimeofday_ns(), 24 + 4 + argstate_len, pid(), argstate_len, argstate_len, argstate_str)
}
probe qemu.kvm.simpletrace.migrate_global_state_pre_save = qemu.kvm.migrate_global_state_pre_save ?
{
    try {
        argstate_str = state ? user_string_n(state, 512) : "<null>"
    } catch {}
    argstate_len = strlen(argstate_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 286, gettimeofday_ns(), 24 + 4 + argstate_len, pid(), argstate_len, argstate_len, argstate_str)
}
probe qemu.kvm.simpletrace.migration_thread_low_pending = qemu.kvm.migration_thread_low_pending ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 287, gettimeofday_ns(), 24 + 8, pid(), pending)
}
probe qemu.kvm.simpletrace.migrate_state_too_big = qemu.kvm.migrate_state_too_big ?
{
    printf("%8b%8b%8b%4b%4b", 1, 288, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.migrate_transferred = qemu.kvm.migrate_transferred ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 289, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), tranferred, time_spent, bandwidth, size)
}
probe qemu.kvm.simpletrace.process_incoming_migration_co_end = qemu.kvm.process_incoming_migration_co_end ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 290, gettimeofday_ns(), 24 + 8 + 8, pid(), ret, ps)
}
probe qemu.kvm.simpletrace.process_incoming_migration_co_postcopy_end_main = qemu.kvm.process_incoming_migration_co_postcopy_end_main ?
{
    printf("%8b%8b%8b%4b%4b", 1, 291, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.migration_set_incoming_channel = qemu.kvm.migration_set_incoming_channel ?
{
    try {
        argioctype_str = ioctype ? user_string_n(ioctype, 512) : "<null>"
    } catch {}
    argioctype_len = strlen(argioctype_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 292, gettimeofday_ns(), 24 + 8 + 4 + argioctype_len, pid(), ioc, argioctype_len, argioctype_len, argioctype_str)
}
probe qemu.kvm.simpletrace.migration_set_outgoing_channel = qemu.kvm.migration_set_outgoing_channel ?
{
    try {
        argioctype_str = ioctype ? user_string_n(ioctype, 512) : "<null>"
    } catch {}
    argioctype_len = strlen(argioctype_str)
    try {
        arghostname_str = hostname ? user_string_n(hostname, 512) : "<null>"
    } catch {}
    arghostname_len = strlen(arghostname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%4b%.*s%8b", 1, 293, gettimeofday_ns(), 24 + 8 + 4 + argioctype_len + 4 + arghostname_len + 8, pid(), ioc, argioctype_len, argioctype_len, argioctype_str, arghostname_len, arghostname_len, arghostname_str, err)
}
probe qemu.kvm.simpletrace.qemu_rdma_accept_incoming_migration = qemu.kvm.qemu_rdma_accept_incoming_migration ?
{
    printf("%8b%8b%8b%4b%4b", 1, 294, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.qemu_rdma_accept_incoming_migration_accepted = qemu.kvm.qemu_rdma_accept_incoming_migration_accepted ?
{
    printf("%8b%8b%8b%4b%4b", 1, 295, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.qemu_rdma_accept_pin_state = qemu.kvm.qemu_rdma_accept_pin_state ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 296, gettimeofday_ns(), 24 + 8, pid(), pin)
}
probe qemu.kvm.simpletrace.qemu_rdma_accept_pin_verbsc = qemu.kvm.qemu_rdma_accept_pin_verbsc ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 297, gettimeofday_ns(), 24 + 8, pid(), verbs)
}
probe qemu.kvm.simpletrace.qemu_rdma_block_for_wrid_miss = qemu.kvm.qemu_rdma_block_for_wrid_miss ?
{
    try {
        argwcompstr_str = wcompstr ? user_string_n(wcompstr, 512) : "<null>"
    } catch {}
    argwcompstr_len = strlen(argwcompstr_str)
    try {
        arggcompstr_str = gcompstr ? user_string_n(gcompstr, 512) : "<null>"
    } catch {}
    arggcompstr_len = strlen(arggcompstr_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%4b%.*s%8b", 1, 298, gettimeofday_ns(), 24 + 4 + argwcompstr_len + 8 + 4 + arggcompstr_len + 8, pid(), argwcompstr_len, argwcompstr_len, argwcompstr_str, wcomp, arggcompstr_len, arggcompstr_len, arggcompstr_str, req)
}
probe qemu.kvm.simpletrace.qemu_rdma_cleanup_disconnect = qemu.kvm.qemu_rdma_cleanup_disconnect ?
{
    printf("%8b%8b%8b%4b%4b", 1, 299, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.qemu_rdma_close = qemu.kvm.qemu_rdma_close ?
{
    printf("%8b%8b%8b%4b%4b", 1, 300, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.qemu_rdma_connect_pin_all_requested = qemu.kvm.qemu_rdma_connect_pin_all_requested ?
{
    printf("%8b%8b%8b%4b%4b", 1, 301, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.qemu_rdma_connect_pin_all_outcome = qemu.kvm.qemu_rdma_connect_pin_all_outcome ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 302, gettimeofday_ns(), 24 + 8, pid(), pin)
}
probe qemu.kvm.simpletrace.qemu_rdma_dest_init_trying = qemu.kvm.qemu_rdma_dest_init_trying ?
{
    try {
        arghost_str = host ? user_string_n(host, 512) : "<null>"
    } catch {}
    arghost_len = strlen(arghost_str)
    try {
        argip_str = ip ? user_string_n(ip, 512) : "<null>"
    } catch {}
    argip_len = strlen(argip_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 303, gettimeofday_ns(), 24 + 4 + arghost_len + 4 + argip_len, pid(), arghost_len, arghost_len, arghost_str, argip_len, argip_len, argip_str)
}
probe qemu.kvm.simpletrace.qemu_rdma_dump_gid = qemu.kvm.qemu_rdma_dump_gid ?
{
    try {
        argwho_str = who ? user_string_n(who, 512) : "<null>"
    } catch {}
    argwho_len = strlen(argwho_str)
    try {
        argsrc_str = src ? user_string_n(src, 512) : "<null>"
    } catch {}
    argsrc_len = strlen(argsrc_str)
    try {
        argdst_str = dst ? user_string_n(dst, 512) : "<null>"
    } catch {}
    argdst_len = strlen(argdst_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%4b%.*s", 1, 304, gettimeofday_ns(), 24 + 4 + argwho_len + 4 + argsrc_len + 4 + argdst_len, pid(), argwho_len, argwho_len, argwho_str, argsrc_len, argsrc_len, argsrc_str, argdst_len, argdst_len, argdst_str)
}
probe qemu.kvm.simpletrace.qemu_rdma_exchange_get_response_start = qemu.kvm.qemu_rdma_exchange_get_response_start ?
{
    try {
        argdesc_str = desc ? user_string_n(desc, 512) : "<null>"
    } catch {}
    argdesc_len = strlen(argdesc_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 305, gettimeofday_ns(), 24 + 4 + argdesc_len, pid(), argdesc_len, argdesc_len, argdesc_str)
}
probe qemu.kvm.simpletrace.qemu_rdma_exchange_get_response_none = qemu.kvm.qemu_rdma_exchange_get_response_none ?
{
    try {
        argdesc_str = desc ? user_string_n(desc, 512) : "<null>"
    } catch {}
    argdesc_len = strlen(argdesc_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 306, gettimeofday_ns(), 24 + 4 + argdesc_len + 8, pid(), argdesc_len, argdesc_len, argdesc_str, type)
}
probe qemu.kvm.simpletrace.qemu_rdma_exchange_send_issue_callback = qemu.kvm.qemu_rdma_exchange_send_issue_callback ?
{
    printf("%8b%8b%8b%4b%4b", 1, 307, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.qemu_rdma_exchange_send_waiting = qemu.kvm.qemu_rdma_exchange_send_waiting ?
{
    try {
        argdesc_str = desc ? user_string_n(desc, 512) : "<null>"
    } catch {}
    argdesc_len = strlen(argdesc_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 308, gettimeofday_ns(), 24 + 4 + argdesc_len, pid(), argdesc_len, argdesc_len, argdesc_str)
}
probe qemu.kvm.simpletrace.qemu_rdma_exchange_send_received = qemu.kvm.qemu_rdma_exchange_send_received ?
{
    try {
        argdesc_str = desc ? user_string_n(desc, 512) : "<null>"
    } catch {}
    argdesc_len = strlen(argdesc_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 309, gettimeofday_ns(), 24 + 4 + argdesc_len, pid(), argdesc_len, argdesc_len, argdesc_str)
}
probe qemu.kvm.simpletrace.qemu_rdma_fill = qemu.kvm.qemu_rdma_fill ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 310, gettimeofday_ns(), 24 + 8 + 8, pid(), control_len, size)
}
probe qemu.kvm.simpletrace.qemu_rdma_init_ram_blocks = qemu.kvm.qemu_rdma_init_ram_blocks ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 311, gettimeofday_ns(), 24 + 8, pid(), blocks)
}
probe qemu.kvm.simpletrace.qemu_rdma_poll_recv = qemu.kvm.qemu_rdma_poll_recv ?
{
    try {
        argcompstr_str = compstr ? user_string_n(compstr, 512) : "<null>"
    } catch {}
    argcompstr_len = strlen(argcompstr_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 312, gettimeofday_ns(), 24 + 4 + argcompstr_len + 8 + 8 + 8, pid(), argcompstr_len, argcompstr_len, argcompstr_str, comp, id, sent)
}
probe qemu.kvm.simpletrace.qemu_rdma_poll_write = qemu.kvm.qemu_rdma_poll_write ?
{
    try {
        argcompstr_str = compstr ? user_string_n(compstr, 512) : "<null>"
    } catch {}
    argcompstr_len = strlen(argcompstr_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b%8b%8b%8b", 1, 313, gettimeofday_ns(), 24 + 4 + argcompstr_len + 8 + 8 + 8 + 8 + 8 + 8, pid(), argcompstr_len, argcompstr_len, argcompstr_str, comp, left, block, chunk, local, remote)
}
probe qemu.kvm.simpletrace.qemu_rdma_poll_other = qemu.kvm.qemu_rdma_poll_other ?
{
    try {
        argcompstr_str = compstr ? user_string_n(compstr, 512) : "<null>"
    } catch {}
    argcompstr_len = strlen(argcompstr_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 314, gettimeofday_ns(), 24 + 4 + argcompstr_len + 8 + 8, pid(), argcompstr_len, argcompstr_len, argcompstr_str, comp, left)
}
probe qemu.kvm.simpletrace.qemu_rdma_post_send_control = qemu.kvm.qemu_rdma_post_send_control ?
{
    try {
        argdesc_str = desc ? user_string_n(desc, 512) : "<null>"
    } catch {}
    argdesc_len = strlen(argdesc_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 315, gettimeofday_ns(), 24 + 4 + argdesc_len, pid(), argdesc_len, argdesc_len, argdesc_str)
}
probe qemu.kvm.simpletrace.qemu_rdma_register_and_get_keys = qemu.kvm.qemu_rdma_register_and_get_keys ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 316, gettimeofday_ns(), 24 + 8 + 8, pid(), len, start)
}
probe qemu.kvm.simpletrace.qemu_rdma_registration_handle_compress = qemu.kvm.qemu_rdma_registration_handle_compress ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 317, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), length, index, offset)
}
probe qemu.kvm.simpletrace.qemu_rdma_registration_handle_finished = qemu.kvm.qemu_rdma_registration_handle_finished ?
{
    printf("%8b%8b%8b%4b%4b", 1, 318, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.qemu_rdma_registration_handle_ram_blocks = qemu.kvm.qemu_rdma_registration_handle_ram_blocks ?
{
    printf("%8b%8b%8b%4b%4b", 1, 319, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.qemu_rdma_registration_handle_ram_blocks_loop = qemu.kvm.qemu_rdma_registration_handle_ram_blocks_loop ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b%8b", 1, 320, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, offset, length, local_host_addr, src_index)
}
probe qemu.kvm.simpletrace.qemu_rdma_registration_handle_register = qemu.kvm.qemu_rdma_registration_handle_register ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 321, gettimeofday_ns(), 24 + 8, pid(), requests)
}
probe qemu.kvm.simpletrace.qemu_rdma_registration_handle_register_loop = qemu.kvm.qemu_rdma_registration_handle_register_loop ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 322, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), req, index, addr, chunks)
}
probe qemu.kvm.simpletrace.qemu_rdma_registration_handle_register_rkey = qemu.kvm.qemu_rdma_registration_handle_register_rkey ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 323, gettimeofday_ns(), 24 + 8, pid(), rkey)
}
probe qemu.kvm.simpletrace.qemu_rdma_registration_handle_unregister = qemu.kvm.qemu_rdma_registration_handle_unregister ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 324, gettimeofday_ns(), 24 + 8, pid(), requests)
}
probe qemu.kvm.simpletrace.qemu_rdma_registration_handle_unregister_loop = qemu.kvm.qemu_rdma_registration_handle_unregister_loop ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 325, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), count, index, chunk)
}
probe qemu.kvm.simpletrace.qemu_rdma_registration_handle_unregister_success = qemu.kvm.qemu_rdma_registration_handle_unregister_success ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 326, gettimeofday_ns(), 24 + 8, pid(), chunk)
}
probe qemu.kvm.simpletrace.qemu_rdma_registration_handle_wait = qemu.kvm.qemu_rdma_registration_handle_wait ?
{
    printf("%8b%8b%8b%4b%4b", 1, 327, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.qemu_rdma_registration_start = qemu.kvm.qemu_rdma_registration_start ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 328, gettimeofday_ns(), 24 + 8, pid(), flags)
}
probe qemu.kvm.simpletrace.qemu_rdma_registration_stop = qemu.kvm.qemu_rdma_registration_stop ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 329, gettimeofday_ns(), 24 + 8, pid(), flags)
}
probe qemu.kvm.simpletrace.qemu_rdma_registration_stop_ram = qemu.kvm.qemu_rdma_registration_stop_ram ?
{
    printf("%8b%8b%8b%4b%4b", 1, 330, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.qemu_rdma_resolve_host_trying = qemu.kvm.qemu_rdma_resolve_host_trying ?
{
    try {
        arghost_str = host ? user_string_n(host, 512) : "<null>"
    } catch {}
    arghost_len = strlen(arghost_str)
    try {
        argip_str = ip ? user_string_n(ip, 512) : "<null>"
    } catch {}
    argip_len = strlen(argip_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 331, gettimeofday_ns(), 24 + 4 + arghost_len + 4 + argip_len, pid(), arghost_len, arghost_len, arghost_str, argip_len, argip_len, argip_str)
}
probe qemu.kvm.simpletrace.qemu_rdma_signal_unregister_append = qemu.kvm.qemu_rdma_signal_unregister_append ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 332, gettimeofday_ns(), 24 + 8 + 8, pid(), chunk, pos)
}
probe qemu.kvm.simpletrace.qemu_rdma_signal_unregister_already = qemu.kvm.qemu_rdma_signal_unregister_already ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 333, gettimeofday_ns(), 24 + 8, pid(), chunk)
}
probe qemu.kvm.simpletrace.qemu_rdma_unregister_waiting_inflight = qemu.kvm.qemu_rdma_unregister_waiting_inflight ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 334, gettimeofday_ns(), 24 + 8, pid(), chunk)
}
probe qemu.kvm.simpletrace.qemu_rdma_unregister_waiting_proc = qemu.kvm.qemu_rdma_unregister_waiting_proc ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 335, gettimeofday_ns(), 24 + 8 + 8, pid(), chunk, pos)
}
probe qemu.kvm.simpletrace.qemu_rdma_unregister_waiting_send = qemu.kvm.qemu_rdma_unregister_waiting_send ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 336, gettimeofday_ns(), 24 + 8, pid(), chunk)
}
probe qemu.kvm.simpletrace.qemu_rdma_unregister_waiting_complete = qemu.kvm.qemu_rdma_unregister_waiting_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 337, gettimeofday_ns(), 24 + 8, pid(), chunk)
}
probe qemu.kvm.simpletrace.qemu_rdma_write_flush = qemu.kvm.qemu_rdma_write_flush ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 338, gettimeofday_ns(), 24 + 8, pid(), sent)
}
probe qemu.kvm.simpletrace.qemu_rdma_write_one_block = qemu.kvm.qemu_rdma_write_one_block ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b", 1, 339, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), count, block, chunk, current, len, nb_sent, nb_chunks)
}
probe qemu.kvm.simpletrace.qemu_rdma_write_one_post = qemu.kvm.qemu_rdma_write_one_post ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 340, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), chunk, addr, remote, len)
}
probe qemu.kvm.simpletrace.qemu_rdma_write_one_queue_full = qemu.kvm.qemu_rdma_write_one_queue_full ?
{
    printf("%8b%8b%8b%4b%4b", 1, 341, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.qemu_rdma_write_one_recvregres = qemu.kvm.qemu_rdma_write_one_recvregres ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 342, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), mykey, theirkey, chunk)
}
probe qemu.kvm.simpletrace.qemu_rdma_write_one_sendreg = qemu.kvm.qemu_rdma_write_one_sendreg ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 343, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), chunk, len, index, offset)
}
probe qemu.kvm.simpletrace.qemu_rdma_write_one_top = qemu.kvm.qemu_rdma_write_one_top ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 344, gettimeofday_ns(), 24 + 8 + 8, pid(), chunks, size)
}
probe qemu.kvm.simpletrace.qemu_rdma_write_one_zero = qemu.kvm.qemu_rdma_write_one_zero ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 345, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), chunk, len, index, offset)
}
probe qemu.kvm.simpletrace.rdma_add_block = qemu.kvm.rdma_add_block ?
{
    try {
        argblock_name_str = block_name ? user_string_n(block_name, 512) : "<null>"
    } catch {}
    argblock_name_len = strlen(argblock_name_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b%8b%8b%8b%8b", 1, 346, gettimeofday_ns(), 24 + 4 + argblock_name_len + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), argblock_name_len, argblock_name_len, argblock_name_str, block, addr, offset, len, end, bits, chunks)
}
probe qemu.kvm.simpletrace.rdma_block_notification_handle = qemu.kvm.rdma_block_notification_handle ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 347, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, index)
}
probe qemu.kvm.simpletrace.rdma_delete_block = qemu.kvm.rdma_delete_block ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b", 1, 348, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), block, addr, offset, len, end, bits, chunks)
}
probe qemu.kvm.simpletrace.rdma_start_incoming_migration = qemu.kvm.rdma_start_incoming_migration ?
{
    printf("%8b%8b%8b%4b%4b", 1, 349, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.rdma_start_incoming_migration_after_dest_init = qemu.kvm.rdma_start_incoming_migration_after_dest_init ?
{
    printf("%8b%8b%8b%4b%4b", 1, 350, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.rdma_start_incoming_migration_after_rdma_listen = qemu.kvm.rdma_start_incoming_migration_after_rdma_listen ?
{
    printf("%8b%8b%8b%4b%4b", 1, 351, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.rdma_start_outgoing_migration_after_rdma_connect = qemu.kvm.rdma_start_outgoing_migration_after_rdma_connect ?
{
    printf("%8b%8b%8b%4b%4b", 1, 352, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.rdma_start_outgoing_migration_after_rdma_source_init = qemu.kvm.rdma_start_outgoing_migration_after_rdma_source_init ?
{
    printf("%8b%8b%8b%4b%4b", 1, 353, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.postcopy_discard_send_finish = qemu.kvm.postcopy_discard_send_finish ?
{
    try {
        argramblock_str = ramblock ? user_string_n(ramblock, 512) : "<null>"
    } catch {}
    argramblock_len = strlen(argramblock_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 354, gettimeofday_ns(), 24 + 4 + argramblock_len + 8 + 8, pid(), argramblock_len, argramblock_len, argramblock_str, nwords, ncmds)
}
probe qemu.kvm.simpletrace.postcopy_discard_send_range = qemu.kvm.postcopy_discard_send_range ?
{
    try {
        argramblock_str = ramblock ? user_string_n(ramblock, 512) : "<null>"
    } catch {}
    argramblock_len = strlen(argramblock_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 355, gettimeofday_ns(), 24 + 4 + argramblock_len + 8 + 8, pid(), argramblock_len, argramblock_len, argramblock_str, start, length)
}
probe qemu.kvm.simpletrace.postcopy_cleanup_range = qemu.kvm.postcopy_cleanup_range ?
{
    try {
        argramblock_str = ramblock ? user_string_n(ramblock, 512) : "<null>"
    } catch {}
    argramblock_len = strlen(argramblock_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 356, gettimeofday_ns(), 24 + 4 + argramblock_len + 8 + 8 + 8, pid(), argramblock_len, argramblock_len, argramblock_str, host_addr, offset, length)
}
probe qemu.kvm.simpletrace.postcopy_init_range = qemu.kvm.postcopy_init_range ?
{
    try {
        argramblock_str = ramblock ? user_string_n(ramblock, 512) : "<null>"
    } catch {}
    argramblock_len = strlen(argramblock_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 357, gettimeofday_ns(), 24 + 4 + argramblock_len + 8 + 8 + 8, pid(), argramblock_len, argramblock_len, argramblock_str, host_addr, offset, length)
}
probe qemu.kvm.simpletrace.postcopy_nhp_range = qemu.kvm.postcopy_nhp_range ?
{
    try {
        argramblock_str = ramblock ? user_string_n(ramblock, 512) : "<null>"
    } catch {}
    argramblock_len = strlen(argramblock_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 358, gettimeofday_ns(), 24 + 4 + argramblock_len + 8 + 8 + 8, pid(), argramblock_len, argramblock_len, argramblock_str, host_addr, offset, length)
}
probe qemu.kvm.simpletrace.postcopy_place_page = qemu.kvm.postcopy_place_page ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 359, gettimeofday_ns(), 24 + 8, pid(), host_addr)
}
probe qemu.kvm.simpletrace.postcopy_place_page_zero = qemu.kvm.postcopy_place_page_zero ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 360, gettimeofday_ns(), 24 + 8, pid(), host_addr)
}
probe qemu.kvm.simpletrace.postcopy_ram_enable_notify = qemu.kvm.postcopy_ram_enable_notify ?
{
    printf("%8b%8b%8b%4b%4b", 1, 361, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.postcopy_ram_fault_thread_entry = qemu.kvm.postcopy_ram_fault_thread_entry ?
{
    printf("%8b%8b%8b%4b%4b", 1, 362, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.postcopy_ram_fault_thread_exit = qemu.kvm.postcopy_ram_fault_thread_exit ?
{
    printf("%8b%8b%8b%4b%4b", 1, 363, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.postcopy_ram_fault_thread_fds_core = qemu.kvm.postcopy_ram_fault_thread_fds_core ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 364, gettimeofday_ns(), 24 + 8 + 8, pid(), baseufd, quitfd)
}
probe qemu.kvm.simpletrace.postcopy_ram_fault_thread_fds_extra = qemu.kvm.postcopy_ram_fault_thread_fds_extra ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 365, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), index, argname_len, argname_len, argname_str, fd)
}
probe qemu.kvm.simpletrace.postcopy_ram_fault_thread_quit = qemu.kvm.postcopy_ram_fault_thread_quit ?
{
    printf("%8b%8b%8b%4b%4b", 1, 366, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.postcopy_ram_fault_thread_request = qemu.kvm.postcopy_ram_fault_thread_request ?
{
    try {
        argramblock_str = ramblock ? user_string_n(ramblock, 512) : "<null>"
    } catch {}
    argramblock_len = strlen(argramblock_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 367, gettimeofday_ns(), 24 + 8 + 4 + argramblock_len + 8, pid(), hostaddr, argramblock_len, argramblock_len, argramblock_str, offset)
}
probe qemu.kvm.simpletrace.postcopy_ram_incoming_cleanup_closeuf = qemu.kvm.postcopy_ram_incoming_cleanup_closeuf ?
{
    printf("%8b%8b%8b%4b%4b", 1, 368, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.postcopy_ram_incoming_cleanup_entry = qemu.kvm.postcopy_ram_incoming_cleanup_entry ?
{
    printf("%8b%8b%8b%4b%4b", 1, 369, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.postcopy_ram_incoming_cleanup_exit = qemu.kvm.postcopy_ram_incoming_cleanup_exit ?
{
    printf("%8b%8b%8b%4b%4b", 1, 370, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.postcopy_ram_incoming_cleanup_join = qemu.kvm.postcopy_ram_incoming_cleanup_join ?
{
    printf("%8b%8b%8b%4b%4b", 1, 371, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.postcopy_request_shared_page = qemu.kvm.postcopy_request_shared_page ?
{
    try {
        argsharer_str = sharer ? user_string_n(sharer, 512) : "<null>"
    } catch {}
    argsharer_len = strlen(argsharer_str)
    try {
        argrb_str = rb ? user_string_n(rb, 512) : "<null>"
    } catch {}
    argrb_len = strlen(argrb_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%8b", 1, 372, gettimeofday_ns(), 24 + 4 + argsharer_len + 4 + argrb_len + 8, pid(), argsharer_len, argsharer_len, argsharer_str, argrb_len, argrb_len, argrb_str, rb_offset)
}
probe qemu.kvm.simpletrace.postcopy_request_shared_page_present = qemu.kvm.postcopy_request_shared_page_present ?
{
    try {
        argsharer_str = sharer ? user_string_n(sharer, 512) : "<null>"
    } catch {}
    argsharer_len = strlen(argsharer_str)
    try {
        argrb_str = rb ? user_string_n(rb, 512) : "<null>"
    } catch {}
    argrb_len = strlen(argrb_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%8b", 1, 373, gettimeofday_ns(), 24 + 4 + argsharer_len + 4 + argrb_len + 8, pid(), argsharer_len, argsharer_len, argsharer_str, argrb_len, argrb_len, argrb_str, rb_offset)
}
probe qemu.kvm.simpletrace.postcopy_wake_shared = qemu.kvm.postcopy_wake_shared ?
{
    try {
        argrb_str = rb ? user_string_n(rb, 512) : "<null>"
    } catch {}
    argrb_len = strlen(argrb_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 374, gettimeofday_ns(), 24 + 8 + 4 + argrb_len, pid(), client_addr, argrb_len, argrb_len, argrb_str)
}
probe qemu.kvm.simpletrace.save_xbzrle_page_skipping = qemu.kvm.save_xbzrle_page_skipping ?
{
    printf("%8b%8b%8b%4b%4b", 1, 375, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.save_xbzrle_page_overflow = qemu.kvm.save_xbzrle_page_overflow ?
{
    printf("%8b%8b%8b%4b%4b", 1, 376, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.ram_save_iterate_big_wait = qemu.kvm.ram_save_iterate_big_wait ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 377, gettimeofday_ns(), 24 + 8 + 8, pid(), milliconds, iterations)
}
probe qemu.kvm.simpletrace.ram_load_complete = qemu.kvm.ram_load_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 378, gettimeofday_ns(), 24 + 8 + 8, pid(), ret, seq_iter)
}
probe qemu.kvm.simpletrace.migration_exec_outgoing = qemu.kvm.migration_exec_outgoing ?
{
    try {
        argcmd_str = cmd ? user_string_n(cmd, 512) : "<null>"
    } catch {}
    argcmd_len = strlen(argcmd_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 379, gettimeofday_ns(), 24 + 4 + argcmd_len, pid(), argcmd_len, argcmd_len, argcmd_str)
}
probe qemu.kvm.simpletrace.migration_exec_incoming = qemu.kvm.migration_exec_incoming ?
{
    try {
        argcmd_str = cmd ? user_string_n(cmd, 512) : "<null>"
    } catch {}
    argcmd_len = strlen(argcmd_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 380, gettimeofday_ns(), 24 + 4 + argcmd_len, pid(), argcmd_len, argcmd_len, argcmd_str)
}
probe qemu.kvm.simpletrace.migration_fd_outgoing = qemu.kvm.migration_fd_outgoing ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 381, gettimeofday_ns(), 24 + 8, pid(), fd)
}
probe qemu.kvm.simpletrace.migration_fd_incoming = qemu.kvm.migration_fd_incoming ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 382, gettimeofday_ns(), 24 + 8, pid(), fd)
}
probe qemu.kvm.simpletrace.migration_socket_incoming_accepted = qemu.kvm.migration_socket_incoming_accepted ?
{
    printf("%8b%8b%8b%4b%4b", 1, 383, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.migration_socket_outgoing_connected = qemu.kvm.migration_socket_outgoing_connected ?
{
    try {
        arghostname_str = hostname ? user_string_n(hostname, 512) : "<null>"
    } catch {}
    arghostname_len = strlen(arghostname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 384, gettimeofday_ns(), 24 + 4 + arghostname_len, pid(), arghostname_len, arghostname_len, arghostname_str)
}
probe qemu.kvm.simpletrace.migration_socket_outgoing_error = qemu.kvm.migration_socket_outgoing_error ?
{
    try {
        argerr_str = err ? user_string_n(err, 512) : "<null>"
    } catch {}
    argerr_len = strlen(argerr_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 385, gettimeofday_ns(), 24 + 4 + argerr_len, pid(), argerr_len, argerr_len, argerr_str)
}
probe qemu.kvm.simpletrace.migration_tls_outgoing_handshake_start = qemu.kvm.migration_tls_outgoing_handshake_start ?
{
    try {
        arghostname_str = hostname ? user_string_n(hostname, 512) : "<null>"
    } catch {}
    arghostname_len = strlen(arghostname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 386, gettimeofday_ns(), 24 + 4 + arghostname_len, pid(), arghostname_len, arghostname_len, arghostname_str)
}
probe qemu.kvm.simpletrace.migration_tls_outgoing_handshake_error = qemu.kvm.migration_tls_outgoing_handshake_error ?
{
    try {
        argerr_str = err ? user_string_n(err, 512) : "<null>"
    } catch {}
    argerr_len = strlen(argerr_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 387, gettimeofday_ns(), 24 + 4 + argerr_len, pid(), argerr_len, argerr_len, argerr_str)
}
probe qemu.kvm.simpletrace.migration_tls_outgoing_handshake_complete = qemu.kvm.migration_tls_outgoing_handshake_complete ?
{
    printf("%8b%8b%8b%4b%4b", 1, 388, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.migration_tls_incoming_handshake_start = qemu.kvm.migration_tls_incoming_handshake_start ?
{
    printf("%8b%8b%8b%4b%4b", 1, 389, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.migration_tls_incoming_handshake_error = qemu.kvm.migration_tls_incoming_handshake_error ?
{
    try {
        argerr_str = err ? user_string_n(err, 512) : "<null>"
    } catch {}
    argerr_len = strlen(argerr_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 390, gettimeofday_ns(), 24 + 4 + argerr_len, pid(), argerr_len, argerr_len, argerr_str)
}
probe qemu.kvm.simpletrace.migration_tls_incoming_handshake_complete = qemu.kvm.migration_tls_incoming_handshake_complete ?
{
    printf("%8b%8b%8b%4b%4b", 1, 391, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.colo_vm_state_change = qemu.kvm.colo_vm_state_change ?
{
    try {
        argold_str = old ? user_string_n(old, 512) : "<null>"
    } catch {}
    argold_len = strlen(argold_str)
    try {
        argnew_str = new ? user_string_n(new, 512) : "<null>"
    } catch {}
    argnew_len = strlen(argnew_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 392, gettimeofday_ns(), 24 + 4 + argold_len + 4 + argnew_len, pid(), argold_len, argold_len, argold_str, argnew_len, argnew_len, argnew_str)
}
probe qemu.kvm.simpletrace.colo_send_message = qemu.kvm.colo_send_message ?
{
    try {
        argmsg_str = msg ? user_string_n(msg, 512) : "<null>"
    } catch {}
    argmsg_len = strlen(argmsg_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 393, gettimeofday_ns(), 24 + 4 + argmsg_len, pid(), argmsg_len, argmsg_len, argmsg_str)
}
probe qemu.kvm.simpletrace.colo_receive_message = qemu.kvm.colo_receive_message ?
{
    try {
        argmsg_str = msg ? user_string_n(msg, 512) : "<null>"
    } catch {}
    argmsg_len = strlen(argmsg_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 394, gettimeofday_ns(), 24 + 4 + argmsg_len, pid(), argmsg_len, argmsg_len, argmsg_str)
}
probe qemu.kvm.simpletrace.colo_failover_set_state = qemu.kvm.colo_failover_set_state ?
{
    try {
        argnew_state_str = new_state ? user_string_n(new_state, 512) : "<null>"
    } catch {}
    argnew_state_len = strlen(argnew_state_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 395, gettimeofday_ns(), 24 + 4 + argnew_state_len, pid(), argnew_state_len, argnew_state_len, argnew_state_str)
}
probe qemu.kvm.simpletrace.send_bitmap_header_enter = qemu.kvm.send_bitmap_header_enter ?
{
    printf("%8b%8b%8b%4b%4b", 1, 396, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.send_bitmap_bits = qemu.kvm.send_bitmap_bits ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 397, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), flags, start_sector, nr_sectors, data_size)
}
probe qemu.kvm.simpletrace.dirty_bitmap_save_iterate = qemu.kvm.dirty_bitmap_save_iterate ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 398, gettimeofday_ns(), 24 + 8, pid(), in_postcopy)
}
probe qemu.kvm.simpletrace.dirty_bitmap_save_complete_enter = qemu.kvm.dirty_bitmap_save_complete_enter ?
{
    printf("%8b%8b%8b%4b%4b", 1, 399, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.dirty_bitmap_save_complete_finish = qemu.kvm.dirty_bitmap_save_complete_finish ?
{
    printf("%8b%8b%8b%4b%4b", 1, 400, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.dirty_bitmap_save_pending = qemu.kvm.dirty_bitmap_save_pending ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 401, gettimeofday_ns(), 24 + 8 + 8, pid(), pending, max_size)
}
probe qemu.kvm.simpletrace.dirty_bitmap_load_complete = qemu.kvm.dirty_bitmap_load_complete ?
{
    printf("%8b%8b%8b%4b%4b", 1, 402, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.dirty_bitmap_load_bits_enter = qemu.kvm.dirty_bitmap_load_bits_enter ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 403, gettimeofday_ns(), 24 + 8 + 8, pid(), first_sector, nr_sectors)
}
probe qemu.kvm.simpletrace.dirty_bitmap_load_bits_zeroes = qemu.kvm.dirty_bitmap_load_bits_zeroes ?
{
    printf("%8b%8b%8b%4b%4b", 1, 404, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.dirty_bitmap_load_header = qemu.kvm.dirty_bitmap_load_header ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 405, gettimeofday_ns(), 24 + 8, pid(), flags)
}
probe qemu.kvm.simpletrace.dirty_bitmap_load_enter = qemu.kvm.dirty_bitmap_load_enter ?
{
    printf("%8b%8b%8b%4b%4b", 1, 406, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.dirty_bitmap_load_success = qemu.kvm.dirty_bitmap_load_success ?
{
    printf("%8b%8b%8b%4b%4b", 1, 407, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.bdrv_open_common = qemu.kvm.bdrv_open_common ?
{
    try {
        argfilename_str = filename ? user_string_n(filename, 512) : "<null>"
    } catch {}
    argfilename_len = strlen(argfilename_str)
    try {
        argformat_name_str = format_name ? user_string_n(format_name, 512) : "<null>"
    } catch {}
    argformat_name_len = strlen(argformat_name_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%4b%.*s", 1, 408, gettimeofday_ns(), 24 + 8 + 4 + argfilename_len + 8 + 4 + argformat_name_len, pid(), bs, argfilename_len, argfilename_len, argfilename_str, flags, argformat_name_len, argformat_name_len, argformat_name_str)
}
probe qemu.kvm.simpletrace.bdrv_lock_medium = qemu.kvm.bdrv_lock_medium ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 409, gettimeofday_ns(), 24 + 8 + 8, pid(), bs, locked)
}
probe qemu.kvm.simpletrace.blk_co_preadv = qemu.kvm.blk_co_preadv ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 410, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), blk, bs, offset, bytes, flags)
}
probe qemu.kvm.simpletrace.blk_co_pwritev = qemu.kvm.blk_co_pwritev ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 411, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), blk, bs, offset, bytes, flags)
}
probe qemu.kvm.simpletrace.blk_root_attach = qemu.kvm.blk_root_attach ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 412, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), child, blk, bs)
}
probe qemu.kvm.simpletrace.blk_root_detach = qemu.kvm.blk_root_detach ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 413, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), child, blk, bs)
}
probe qemu.kvm.simpletrace.bdrv_co_preadv = qemu.kvm.bdrv_co_preadv ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 414, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), bs, offset, nbytes, flags)
}
probe qemu.kvm.simpletrace.bdrv_co_pwritev = qemu.kvm.bdrv_co_pwritev ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 415, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), bs, offset, nbytes, flags)
}
probe qemu.kvm.simpletrace.bdrv_co_pwrite_zeroes = qemu.kvm.bdrv_co_pwrite_zeroes ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 416, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), bs, offset, count, flags)
}
probe qemu.kvm.simpletrace.bdrv_co_do_copy_on_readv = qemu.kvm.bdrv_co_do_copy_on_readv ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 417, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), bs, offset, bytes, cluster_offset, cluster_bytes)
}
probe qemu.kvm.simpletrace.stream_one_iteration = qemu.kvm.stream_one_iteration ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 418, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, offset, bytes, is_allocated)
}
probe qemu.kvm.simpletrace.stream_start = qemu.kvm.stream_start ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 419, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bs, base, s)
}
probe qemu.kvm.simpletrace.commit_one_iteration = qemu.kvm.commit_one_iteration ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 420, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, offset, bytes, is_allocated)
}
probe qemu.kvm.simpletrace.commit_start = qemu.kvm.commit_start ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 421, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), bs, base, top, s)
}
probe qemu.kvm.simpletrace.mirror_start = qemu.kvm.mirror_start ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 422, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bs, s, opaque)
}
probe qemu.kvm.simpletrace.mirror_restart_iter = qemu.kvm.mirror_restart_iter ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 423, gettimeofday_ns(), 24 + 8 + 8, pid(), s, cnt)
}
probe qemu.kvm.simpletrace.mirror_before_flush = qemu.kvm.mirror_before_flush ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 424, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.mirror_before_drain = qemu.kvm.mirror_before_drain ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 425, gettimeofday_ns(), 24 + 8 + 8, pid(), s, cnt)
}
probe qemu.kvm.simpletrace.mirror_before_sleep = qemu.kvm.mirror_before_sleep ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 426, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, cnt, synced, delay_ns)
}
probe qemu.kvm.simpletrace.mirror_one_iteration = qemu.kvm.mirror_one_iteration ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 427, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, offset, bytes)
}
probe qemu.kvm.simpletrace.mirror_iteration_done = qemu.kvm.mirror_iteration_done ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 428, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, offset, bytes, ret)
}
probe qemu.kvm.simpletrace.mirror_yield = qemu.kvm.mirror_yield ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 429, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, cnt, buf_free_count, in_flight)
}
probe qemu.kvm.simpletrace.mirror_yield_in_flight = qemu.kvm.mirror_yield_in_flight ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 430, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, offset, in_flight)
}
probe qemu.kvm.simpletrace.backup_do_cow_enter = qemu.kvm.backup_do_cow_enter ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 431, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), job, start, offset, bytes)
}
probe qemu.kvm.simpletrace.backup_do_cow_return = qemu.kvm.backup_do_cow_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 432, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), job, offset, bytes, ret)
}
probe qemu.kvm.simpletrace.backup_do_cow_skip = qemu.kvm.backup_do_cow_skip ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 433, gettimeofday_ns(), 24 + 8 + 8, pid(), job, start)
}
probe qemu.kvm.simpletrace.backup_do_cow_process = qemu.kvm.backup_do_cow_process ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 434, gettimeofday_ns(), 24 + 8 + 8, pid(), job, start)
}
probe qemu.kvm.simpletrace.backup_do_cow_read_fail = qemu.kvm.backup_do_cow_read_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 435, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), job, start, ret)
}
probe qemu.kvm.simpletrace.backup_do_cow_write_fail = qemu.kvm.backup_do_cow_write_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 436, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), job, start, ret)
}
probe qemu.kvm.simpletrace.backup_do_cow_copy_range_fail = qemu.kvm.backup_do_cow_copy_range_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 437, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), job, start, ret)
}
probe qemu.kvm.simpletrace.qmp_block_job_cancel = qemu.kvm.qmp_block_job_cancel ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 438, gettimeofday_ns(), 24 + 8, pid(), job)
}
probe qemu.kvm.simpletrace.qmp_block_job_pause = qemu.kvm.qmp_block_job_pause ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 439, gettimeofday_ns(), 24 + 8, pid(), job)
}
probe qemu.kvm.simpletrace.qmp_block_job_resume = qemu.kvm.qmp_block_job_resume ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 440, gettimeofday_ns(), 24 + 8, pid(), job)
}
probe qemu.kvm.simpletrace.qmp_block_job_complete = qemu.kvm.qmp_block_job_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 441, gettimeofday_ns(), 24 + 8, pid(), job)
}
probe qemu.kvm.simpletrace.qmp_block_job_finalize = qemu.kvm.qmp_block_job_finalize ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 442, gettimeofday_ns(), 24 + 8, pid(), job)
}
probe qemu.kvm.simpletrace.qmp_block_job_dismiss = qemu.kvm.qmp_block_job_dismiss ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 443, gettimeofday_ns(), 24 + 8, pid(), job)
}
probe qemu.kvm.simpletrace.qmp_block_stream = qemu.kvm.qmp_block_stream ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 444, gettimeofday_ns(), 24 + 8 + 8, pid(), bs, job)
}
probe qemu.kvm.simpletrace.paio_submit_co = qemu.kvm.paio_submit_co ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 445, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, count, type)
}
probe qemu.kvm.simpletrace.paio_submit = qemu.kvm.paio_submit ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 446, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), acb, opaque, offset, count, type)
}
probe qemu.kvm.simpletrace.qcow2_writev_start_req = qemu.kvm.qcow2_writev_start_req ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 447, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), co, offset, bytes)
}
probe qemu.kvm.simpletrace.qcow2_writev_done_req = qemu.kvm.qcow2_writev_done_req ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 448, gettimeofday_ns(), 24 + 8 + 8, pid(), co, ret)
}
probe qemu.kvm.simpletrace.qcow2_writev_start_part = qemu.kvm.qcow2_writev_start_part ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 449, gettimeofday_ns(), 24 + 8, pid(), co)
}
probe qemu.kvm.simpletrace.qcow2_writev_done_part = qemu.kvm.qcow2_writev_done_part ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 450, gettimeofday_ns(), 24 + 8 + 8, pid(), co, cur_bytes)
}
probe qemu.kvm.simpletrace.qcow2_writev_data = qemu.kvm.qcow2_writev_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 451, gettimeofday_ns(), 24 + 8 + 8, pid(), co, offset)
}
probe qemu.kvm.simpletrace.qcow2_pwrite_zeroes_start_req = qemu.kvm.qcow2_pwrite_zeroes_start_req ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 452, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), co, offset, count)
}
probe qemu.kvm.simpletrace.qcow2_pwrite_zeroes = qemu.kvm.qcow2_pwrite_zeroes ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 453, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), co, offset, count)
}
probe qemu.kvm.simpletrace.qcow2_alloc_clusters_offset = qemu.kvm.qcow2_alloc_clusters_offset ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 454, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), co, offset, bytes)
}
probe qemu.kvm.simpletrace.qcow2_handle_copied = qemu.kvm.qcow2_handle_copied ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 455, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), co, guest_offset, host_offset, bytes)
}
probe qemu.kvm.simpletrace.qcow2_handle_alloc = qemu.kvm.qcow2_handle_alloc ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 456, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), co, guest_offset, host_offset, bytes)
}
probe qemu.kvm.simpletrace.qcow2_do_alloc_clusters_offset = qemu.kvm.qcow2_do_alloc_clusters_offset ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 457, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), co, guest_offset, host_offset, nb_clusters)
}
probe qemu.kvm.simpletrace.qcow2_cluster_alloc_phys = qemu.kvm.qcow2_cluster_alloc_phys ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 458, gettimeofday_ns(), 24 + 8, pid(), co)
}
probe qemu.kvm.simpletrace.qcow2_cluster_link_l2 = qemu.kvm.qcow2_cluster_link_l2 ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 459, gettimeofday_ns(), 24 + 8 + 8, pid(), co, nb_clusters)
}
probe qemu.kvm.simpletrace.qcow2_l2_allocate = qemu.kvm.qcow2_l2_allocate ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 460, gettimeofday_ns(), 24 + 8 + 8, pid(), bs, l1_index)
}
probe qemu.kvm.simpletrace.qcow2_l2_allocate_get_empty = qemu.kvm.qcow2_l2_allocate_get_empty ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 461, gettimeofday_ns(), 24 + 8 + 8, pid(), bs, l1_index)
}
probe qemu.kvm.simpletrace.qcow2_l2_allocate_write_l2 = qemu.kvm.qcow2_l2_allocate_write_l2 ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 462, gettimeofday_ns(), 24 + 8 + 8, pid(), bs, l1_index)
}
probe qemu.kvm.simpletrace.qcow2_l2_allocate_write_l1 = qemu.kvm.qcow2_l2_allocate_write_l1 ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 463, gettimeofday_ns(), 24 + 8 + 8, pid(), bs, l1_index)
}
probe qemu.kvm.simpletrace.qcow2_l2_allocate_done = qemu.kvm.qcow2_l2_allocate_done ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 464, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bs, l1_index, ret)
}
probe qemu.kvm.simpletrace.qcow2_cache_get = qemu.kvm.qcow2_cache_get ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 465, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), co, c, offset, read_from_disk)
}
probe qemu.kvm.simpletrace.qcow2_cache_get_replace_entry = qemu.kvm.qcow2_cache_get_replace_entry ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 466, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), co, c, i)
}
probe qemu.kvm.simpletrace.qcow2_cache_get_read = qemu.kvm.qcow2_cache_get_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 467, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), co, c, i)
}
probe qemu.kvm.simpletrace.qcow2_cache_get_done = qemu.kvm.qcow2_cache_get_done ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 468, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), co, c, i)
}
probe qemu.kvm.simpletrace.qcow2_cache_flush = qemu.kvm.qcow2_cache_flush ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 469, gettimeofday_ns(), 24 + 8 + 8, pid(), co, c)
}
probe qemu.kvm.simpletrace.qcow2_cache_entry_flush = qemu.kvm.qcow2_cache_entry_flush ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 470, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), co, c, i)
}
probe qemu.kvm.simpletrace.qed_alloc_l2_cache_entry = qemu.kvm.qed_alloc_l2_cache_entry ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 471, gettimeofday_ns(), 24 + 8 + 8, pid(), l2_cache, entry)
}
probe qemu.kvm.simpletrace.qed_unref_l2_cache_entry = qemu.kvm.qed_unref_l2_cache_entry ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 472, gettimeofday_ns(), 24 + 8 + 8, pid(), entry, ref)
}
probe qemu.kvm.simpletrace.qed_find_l2_cache_entry = qemu.kvm.qed_find_l2_cache_entry ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 473, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), l2_cache, entry, offset, ref)
}
probe qemu.kvm.simpletrace.qed_read_table = qemu.kvm.qed_read_table ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 474, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, offset, table)
}
probe qemu.kvm.simpletrace.qed_read_table_cb = qemu.kvm.qed_read_table_cb ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 475, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, table, ret)
}
probe qemu.kvm.simpletrace.qed_write_table = qemu.kvm.qed_write_table ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 476, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, offset, table, index, n)
}
probe qemu.kvm.simpletrace.qed_write_table_cb = qemu.kvm.qed_write_table_cb ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 477, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, table, flush, ret)
}
probe qemu.kvm.simpletrace.qed_need_check_timer_cb = qemu.kvm.qed_need_check_timer_cb ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 478, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.qed_start_need_check_timer = qemu.kvm.qed_start_need_check_timer ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 479, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.qed_cancel_need_check_timer = qemu.kvm.qed_cancel_need_check_timer ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 480, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.qed_aio_complete = qemu.kvm.qed_aio_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 481, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, acb, ret)
}
probe qemu.kvm.simpletrace.qed_aio_setup = qemu.kvm.qed_aio_setup ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 482, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), s, acb, sector_num, nb_sectors, opaque, flags)
}
probe qemu.kvm.simpletrace.qed_aio_next_io = qemu.kvm.qed_aio_next_io ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 483, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, acb, ret, cur_pos)
}
probe qemu.kvm.simpletrace.qed_aio_read_data = qemu.kvm.qed_aio_read_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 484, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, acb, ret, offset, len)
}
probe qemu.kvm.simpletrace.qed_aio_write_data = qemu.kvm.qed_aio_write_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 485, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, acb, ret, offset, len)
}
probe qemu.kvm.simpletrace.qed_aio_write_prefill = qemu.kvm.qed_aio_write_prefill ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 486, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, acb, start, len, offset)
}
probe qemu.kvm.simpletrace.qed_aio_write_postfill = qemu.kvm.qed_aio_write_postfill ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 487, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, acb, start, len, offset)
}
probe qemu.kvm.simpletrace.qed_aio_write_main = qemu.kvm.qed_aio_write_main ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 488, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, acb, ret, offset, len)
}
probe qemu.kvm.simpletrace.vxhs_iio_callback = qemu.kvm.vxhs_iio_callback ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 489, gettimeofday_ns(), 24 + 8, pid(), error)
}
probe qemu.kvm.simpletrace.vxhs_iio_callback_chnfail = qemu.kvm.vxhs_iio_callback_chnfail ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 490, gettimeofday_ns(), 24 + 8 + 8, pid(), err, error)
}
probe qemu.kvm.simpletrace.vxhs_iio_callback_unknwn = qemu.kvm.vxhs_iio_callback_unknwn ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 491, gettimeofday_ns(), 24 + 8 + 8, pid(), opcode, err)
}
probe qemu.kvm.simpletrace.vxhs_aio_rw_invalid = qemu.kvm.vxhs_aio_rw_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 492, gettimeofday_ns(), 24 + 8, pid(), req)
}
probe qemu.kvm.simpletrace.vxhs_aio_rw_ioerr = qemu.kvm.vxhs_aio_rw_ioerr ?
{
    try {
        argguid_str = guid ? user_string_n(guid, 512) : "<null>"
    } catch {}
    argguid_len = strlen(argguid_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b%8b%8b%8b", 1, 493, gettimeofday_ns(), 24 + 4 + argguid_len + 8 + 8 + 8 + 8 + 8 + 8, pid(), argguid_len, argguid_len, argguid_str, iodir, size, off, acb, ret, err)
}
probe qemu.kvm.simpletrace.vxhs_get_vdisk_stat_err = qemu.kvm.vxhs_get_vdisk_stat_err ?
{
    try {
        argguid_str = guid ? user_string_n(guid, 512) : "<null>"
    } catch {}
    argguid_len = strlen(argguid_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 494, gettimeofday_ns(), 24 + 4 + argguid_len + 8 + 8, pid(), argguid_len, argguid_len, argguid_str, ret, err)
}
probe qemu.kvm.simpletrace.vxhs_get_vdisk_stat = qemu.kvm.vxhs_get_vdisk_stat ?
{
    try {
        argvdisk_guid_str = vdisk_guid ? user_string_n(vdisk_guid, 512) : "<null>"
    } catch {}
    argvdisk_guid_len = strlen(argvdisk_guid_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 495, gettimeofday_ns(), 24 + 4 + argvdisk_guid_len + 8, pid(), argvdisk_guid_len, argvdisk_guid_len, argvdisk_guid_str, vdisk_size)
}
probe qemu.kvm.simpletrace.vxhs_complete_aio = qemu.kvm.vxhs_complete_aio ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 496, gettimeofday_ns(), 24 + 8 + 8, pid(), acb, ret)
}
probe qemu.kvm.simpletrace.vxhs_parse_uri_filename = qemu.kvm.vxhs_parse_uri_filename ?
{
    try {
        argfilename_str = filename ? user_string_n(filename, 512) : "<null>"
    } catch {}
    argfilename_len = strlen(argfilename_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 497, gettimeofday_ns(), 24 + 4 + argfilename_len, pid(), argfilename_len, argfilename_len, argfilename_str)
}
probe qemu.kvm.simpletrace.vxhs_open_vdiskid = qemu.kvm.vxhs_open_vdiskid ?
{
    try {
        argvdisk_id_str = vdisk_id ? user_string_n(vdisk_id, 512) : "<null>"
    } catch {}
    argvdisk_id_len = strlen(argvdisk_id_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 498, gettimeofday_ns(), 24 + 4 + argvdisk_id_len, pid(), argvdisk_id_len, argvdisk_id_len, argvdisk_id_str)
}
probe qemu.kvm.simpletrace.vxhs_open_hostinfo = qemu.kvm.vxhs_open_hostinfo ?
{
    try {
        argof_vsa_addr_str = of_vsa_addr ? user_string_n(of_vsa_addr, 512) : "<null>"
    } catch {}
    argof_vsa_addr_len = strlen(argof_vsa_addr_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 499, gettimeofday_ns(), 24 + 4 + argof_vsa_addr_len + 8, pid(), argof_vsa_addr_len, argof_vsa_addr_len, argof_vsa_addr_str, port)
}
probe qemu.kvm.simpletrace.vxhs_open_iio_open = qemu.kvm.vxhs_open_iio_open ?
{
    try {
        arghost_str = host ? user_string_n(host, 512) : "<null>"
    } catch {}
    arghost_len = strlen(arghost_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 500, gettimeofday_ns(), 24 + 4 + arghost_len, pid(), arghost_len, arghost_len, arghost_str)
}
probe qemu.kvm.simpletrace.vxhs_parse_uri_hostinfo = qemu.kvm.vxhs_parse_uri_hostinfo ?
{
    try {
        arghost_str = host ? user_string_n(host, 512) : "<null>"
    } catch {}
    arghost_len = strlen(arghost_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 501, gettimeofday_ns(), 24 + 4 + arghost_len + 8, pid(), arghost_len, arghost_len, arghost_str, port)
}
probe qemu.kvm.simpletrace.vxhs_close = qemu.kvm.vxhs_close ?
{
    try {
        argvdisk_guid_str = vdisk_guid ? user_string_n(vdisk_guid, 512) : "<null>"
    } catch {}
    argvdisk_guid_len = strlen(argvdisk_guid_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 502, gettimeofday_ns(), 24 + 4 + argvdisk_guid_len, pid(), argvdisk_guid_len, argvdisk_guid_len, argvdisk_guid_str)
}
probe qemu.kvm.simpletrace.vxhs_get_creds = qemu.kvm.vxhs_get_creds ?
{
    try {
        argcacert_str = cacert ? user_string_n(cacert, 512) : "<null>"
    } catch {}
    argcacert_len = strlen(argcacert_str)
    try {
        argclient_key_str = client_key ? user_string_n(client_key, 512) : "<null>"
    } catch {}
    argclient_key_len = strlen(argclient_key_str)
    try {
        argclient_cert_str = client_cert ? user_string_n(client_cert, 512) : "<null>"
    } catch {}
    argclient_cert_len = strlen(argclient_cert_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%4b%.*s", 1, 503, gettimeofday_ns(), 24 + 4 + argcacert_len + 4 + argclient_key_len + 4 + argclient_cert_len, pid(), argcacert_len, argcacert_len, argcacert_str, argclient_key_len, argclient_key_len, argclient_key_str, argclient_cert_len, argclient_cert_len, argclient_cert_str)
}
probe qemu.kvm.simpletrace.nvme_kick = qemu.kvm.nvme_kick ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 504, gettimeofday_ns(), 24 + 8 + 8, pid(), s, queue)
}
probe qemu.kvm.simpletrace.nvme_dma_flush_queue_wait = qemu.kvm.nvme_dma_flush_queue_wait ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 505, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.nvme_error = qemu.kvm.nvme_error ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 506, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), cmd_specific, sq_head, sqid, cid, status)
}
probe qemu.kvm.simpletrace.nvme_process_completion = qemu.kvm.nvme_process_completion ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 507, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, index, inflight)
}
probe qemu.kvm.simpletrace.nvme_process_completion_queue_busy = qemu.kvm.nvme_process_completion_queue_busy ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 508, gettimeofday_ns(), 24 + 8 + 8, pid(), s, index)
}
probe qemu.kvm.simpletrace.nvme_complete_command = qemu.kvm.nvme_complete_command ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 509, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, index, cid)
}
probe qemu.kvm.simpletrace.nvme_submit_command = qemu.kvm.nvme_submit_command ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 510, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, index, cid)
}
probe qemu.kvm.simpletrace.nvme_submit_command_raw = qemu.kvm.nvme_submit_command_raw ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b%8b", 1, 511, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), c0, c1, c2, c3, c4, c5, c6, c7)
}
probe qemu.kvm.simpletrace.nvme_handle_event = qemu.kvm.nvme_handle_event ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 512, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.nvme_poll_cb = qemu.kvm.nvme_poll_cb ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 513, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.nvme_prw_aligned = qemu.kvm.nvme_prw_aligned ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 514, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), s, is_write, offset, bytes, flags, niov)
}
probe qemu.kvm.simpletrace.nvme_qiov_unaligned = qemu.kvm.nvme_qiov_unaligned ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 515, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), qiov, n, base, size, align)
}
probe qemu.kvm.simpletrace.nvme_prw_buffered = qemu.kvm.nvme_prw_buffered ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 516, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, offset, bytes, niov, is_write)
}
probe qemu.kvm.simpletrace.nvme_rw_done = qemu.kvm.nvme_rw_done ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 517, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, is_write, offset, bytes, ret)
}
probe qemu.kvm.simpletrace.nvme_dma_map_flush = qemu.kvm.nvme_dma_map_flush ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 518, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.nvme_free_req_queue_wait = qemu.kvm.nvme_free_req_queue_wait ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 519, gettimeofday_ns(), 24 + 8, pid(), q)
}
probe qemu.kvm.simpletrace.nvme_cmd_map_qiov = qemu.kvm.nvme_cmd_map_qiov ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 520, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, cmd, req, qiov, entries)
}
probe qemu.kvm.simpletrace.nvme_cmd_map_qiov_pages = qemu.kvm.nvme_cmd_map_qiov_pages ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 521, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, i, page)
}
probe qemu.kvm.simpletrace.nvme_cmd_map_qiov_iov = qemu.kvm.nvme_cmd_map_qiov_iov ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 522, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, i, page, pages)
}
probe qemu.kvm.simpletrace.nbd_parse_blockstatus_compliance = qemu.kvm.nbd_parse_blockstatus_compliance ?
{
    try {
        argerr_str = err ? user_string_n(err, 512) : "<null>"
    } catch {}
    argerr_len = strlen(argerr_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 523, gettimeofday_ns(), 24 + 4 + argerr_len, pid(), argerr_len, argerr_len, argerr_str)
}
probe qemu.kvm.simpletrace.nbd_structured_read_compliance = qemu.kvm.nbd_structured_read_compliance ?
{
    try {
        argtype_str = type ? user_string_n(type, 512) : "<null>"
    } catch {}
    argtype_len = strlen(argtype_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 524, gettimeofday_ns(), 24 + 4 + argtype_len, pid(), argtype_len, argtype_len, argtype_str)
}
probe qemu.kvm.simpletrace.nbd_read_reply_entry_fail = qemu.kvm.nbd_read_reply_entry_fail ?
{
    try {
        argerr_str = err ? user_string_n(err, 512) : "<null>"
    } catch {}
    argerr_len = strlen(argerr_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 525, gettimeofday_ns(), 24 + 8 + 4 + argerr_len, pid(), ret, argerr_len, argerr_len, argerr_str)
}
probe qemu.kvm.simpletrace.nbd_co_request_fail = qemu.kvm.nbd_co_request_fail ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argerr_str = err ? user_string_n(err, 512) : "<null>"
    } catch {}
    argerr_len = strlen(argerr_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%4b%.*s%8b%4b%.*s", 1, 526, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 4 + argname_len + 8 + 4 + argerr_len, pid(), from, len, handle, flags, type, argname_len, argname_len, argname_str, ret, argerr_len, argerr_len, argerr_str)
}
probe qemu.kvm.simpletrace.wct_init = qemu.kvm.wct_init ?
{
    printf("%8b%8b%8b%4b%4b", 1, 527, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.wct_cmd_re = qemu.kvm.wct_cmd_re ?
{
    printf("%8b%8b%8b%4b%4b", 1, 528, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.wct_cmd_st = qemu.kvm.wct_cmd_st ?
{
    printf("%8b%8b%8b%4b%4b", 1, 529, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.wct_cmd_sp = qemu.kvm.wct_cmd_sp ?
{
    printf("%8b%8b%8b%4b%4b", 1, 530, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.wct_cmd_ts = qemu.kvm.wct_cmd_ts ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 531, gettimeofday_ns(), 24 + 8, pid(), input)
}
probe qemu.kvm.simpletrace.wct_cmd_other = qemu.kvm.wct_cmd_other ?
{
    try {
        argcmd_str = cmd ? user_string_n(cmd, 512) : "<null>"
    } catch {}
    argcmd_len = strlen(argcmd_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 532, gettimeofday_ns(), 24 + 4 + argcmd_len, pid(), argcmd_len, argcmd_len, argcmd_str)
}
probe qemu.kvm.simpletrace.wct_speed = qemu.kvm.wct_speed ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 533, gettimeofday_ns(), 24 + 8, pid(), speed)
}
probe qemu.kvm.simpletrace.spice_vmc_write = qemu.kvm.spice_vmc_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 534, gettimeofday_ns(), 24 + 8 + 8, pid(), out, len)
}
probe qemu.kvm.simpletrace.spice_vmc_read = qemu.kvm.spice_vmc_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 535, gettimeofday_ns(), 24 + 8 + 8, pid(), bytes, len)
}
probe qemu.kvm.simpletrace.spice_vmc_register_interface = qemu.kvm.spice_vmc_register_interface ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 536, gettimeofday_ns(), 24 + 8, pid(), scd)
}
probe qemu.kvm.simpletrace.spice_vmc_unregister_interface = qemu.kvm.spice_vmc_unregister_interface ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 537, gettimeofday_ns(), 24 + 8, pid(), scd)
}
probe qemu.kvm.simpletrace.spice_vmc_event = qemu.kvm.spice_vmc_event ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 538, gettimeofday_ns(), 24 + 8, pid(), event)
}
probe qemu.kvm.simpletrace.virtio_blk_req_complete = qemu.kvm.virtio_blk_req_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 539, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), vdev, req, status)
}
probe qemu.kvm.simpletrace.virtio_blk_rw_complete = qemu.kvm.virtio_blk_rw_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 540, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), vdev, req, ret)
}
probe qemu.kvm.simpletrace.virtio_blk_handle_write = qemu.kvm.virtio_blk_handle_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 541, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), vdev, req, sector, nsectors)
}
probe qemu.kvm.simpletrace.virtio_blk_handle_read = qemu.kvm.virtio_blk_handle_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 542, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), vdev, req, sector, nsectors)
}
probe qemu.kvm.simpletrace.virtio_blk_submit_multireq = qemu.kvm.virtio_blk_submit_multireq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b", 1, 543, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), vdev, mrb, start, num_reqs, offset, size, is_write)
}
probe qemu.kvm.simpletrace.hd_geometry_lchs_guess = qemu.kvm.hd_geometry_lchs_guess ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 544, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), blk, cyls, heads, secs)
}
probe qemu.kvm.simpletrace.hd_geometry_guess = qemu.kvm.hd_geometry_guess ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 545, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), blk, cyls, heads, secs, trans)
}
probe qemu.kvm.simpletrace.nvme_irq_msix = qemu.kvm.nvme_irq_msix ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 546, gettimeofday_ns(), 24 + 8, pid(), vector)
}
probe qemu.kvm.simpletrace.nvme_irq_pin = qemu.kvm.nvme_irq_pin ?
{
    printf("%8b%8b%8b%4b%4b", 1, 547, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_irq_masked = qemu.kvm.nvme_irq_masked ?
{
    printf("%8b%8b%8b%4b%4b", 1, 548, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_dma_read = qemu.kvm.nvme_dma_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 549, gettimeofday_ns(), 24 + 8 + 8, pid(), prp1, prp2)
}
probe qemu.kvm.simpletrace.nvme_rw = qemu.kvm.nvme_rw ?
{
    try {
        argverb_str = verb ? user_string_n(verb, 512) : "<null>"
    } catch {}
    argverb_len = strlen(argverb_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 550, gettimeofday_ns(), 24 + 4 + argverb_len + 8 + 8 + 8, pid(), argverb_len, argverb_len, argverb_str, blk_count, byte_count, lba)
}
probe qemu.kvm.simpletrace.nvme_create_sq = qemu.kvm.nvme_create_sq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 551, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), addr, sqid, cqid, qsize, qflags)
}
probe qemu.kvm.simpletrace.nvme_create_cq = qemu.kvm.nvme_create_cq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 552, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), addr, cqid, vector, size, qflags, ien)
}
probe qemu.kvm.simpletrace.nvme_del_sq = qemu.kvm.nvme_del_sq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 553, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.nvme_del_cq = qemu.kvm.nvme_del_cq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 554, gettimeofday_ns(), 24 + 8, pid(), cqid)
}
probe qemu.kvm.simpletrace.nvme_identify_ctrl = qemu.kvm.nvme_identify_ctrl ?
{
    printf("%8b%8b%8b%4b%4b", 1, 555, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_identify_ns = qemu.kvm.nvme_identify_ns ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 556, gettimeofday_ns(), 24 + 8, pid(), ns)
}
probe qemu.kvm.simpletrace.nvme_identify_nslist = qemu.kvm.nvme_identify_nslist ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 557, gettimeofday_ns(), 24 + 8, pid(), ns)
}
probe qemu.kvm.simpletrace.nvme_getfeat_vwcache = qemu.kvm.nvme_getfeat_vwcache ?
{
    try {
        argresult_str = result ? user_string_n(result, 512) : "<null>"
    } catch {}
    argresult_len = strlen(argresult_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 558, gettimeofday_ns(), 24 + 4 + argresult_len, pid(), argresult_len, argresult_len, argresult_str)
}
probe qemu.kvm.simpletrace.nvme_getfeat_numq = qemu.kvm.nvme_getfeat_numq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 559, gettimeofday_ns(), 24 + 8, pid(), result)
}
probe qemu.kvm.simpletrace.nvme_setfeat_numq = qemu.kvm.nvme_setfeat_numq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 560, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), reqcq, reqsq, gotcq, gotsq)
}
probe qemu.kvm.simpletrace.nvme_mmio_intm_set = qemu.kvm.nvme_mmio_intm_set ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 561, gettimeofday_ns(), 24 + 8 + 8, pid(), data, new_mask)
}
probe qemu.kvm.simpletrace.nvme_mmio_intm_clr = qemu.kvm.nvme_mmio_intm_clr ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 562, gettimeofday_ns(), 24 + 8 + 8, pid(), data, new_mask)
}
probe qemu.kvm.simpletrace.nvme_mmio_cfg = qemu.kvm.nvme_mmio_cfg ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 563, gettimeofday_ns(), 24 + 8, pid(), data)
}
probe qemu.kvm.simpletrace.nvme_mmio_aqattr = qemu.kvm.nvme_mmio_aqattr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 564, gettimeofday_ns(), 24 + 8, pid(), data)
}
probe qemu.kvm.simpletrace.nvme_mmio_asqaddr = qemu.kvm.nvme_mmio_asqaddr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 565, gettimeofday_ns(), 24 + 8, pid(), data)
}
probe qemu.kvm.simpletrace.nvme_mmio_acqaddr = qemu.kvm.nvme_mmio_acqaddr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 566, gettimeofday_ns(), 24 + 8, pid(), data)
}
probe qemu.kvm.simpletrace.nvme_mmio_asqaddr_hi = qemu.kvm.nvme_mmio_asqaddr_hi ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 567, gettimeofday_ns(), 24 + 8 + 8, pid(), data, new_addr)
}
probe qemu.kvm.simpletrace.nvme_mmio_acqaddr_hi = qemu.kvm.nvme_mmio_acqaddr_hi ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 568, gettimeofday_ns(), 24 + 8 + 8, pid(), data, new_addr)
}
probe qemu.kvm.simpletrace.nvme_mmio_start_success = qemu.kvm.nvme_mmio_start_success ?
{
    printf("%8b%8b%8b%4b%4b", 1, 569, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_mmio_stopped = qemu.kvm.nvme_mmio_stopped ?
{
    printf("%8b%8b%8b%4b%4b", 1, 570, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_mmio_shutdown_set = qemu.kvm.nvme_mmio_shutdown_set ?
{
    printf("%8b%8b%8b%4b%4b", 1, 571, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_mmio_shutdown_cleared = qemu.kvm.nvme_mmio_shutdown_cleared ?
{
    printf("%8b%8b%8b%4b%4b", 1, 572, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_err_invalid_dma = qemu.kvm.nvme_err_invalid_dma ?
{
    printf("%8b%8b%8b%4b%4b", 1, 573, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_err_invalid_prplist_ent = qemu.kvm.nvme_err_invalid_prplist_ent ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 574, gettimeofday_ns(), 24 + 8, pid(), prplist)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_prp2_align = qemu.kvm.nvme_err_invalid_prp2_align ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 575, gettimeofday_ns(), 24 + 8, pid(), prp2)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_prp2_missing = qemu.kvm.nvme_err_invalid_prp2_missing ?
{
    printf("%8b%8b%8b%4b%4b", 1, 576, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_err_invalid_field = qemu.kvm.nvme_err_invalid_field ?
{
    printf("%8b%8b%8b%4b%4b", 1, 577, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_err_invalid_prp = qemu.kvm.nvme_err_invalid_prp ?
{
    printf("%8b%8b%8b%4b%4b", 1, 578, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_err_invalid_sgl = qemu.kvm.nvme_err_invalid_sgl ?
{
    printf("%8b%8b%8b%4b%4b", 1, 579, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_err_invalid_ns = qemu.kvm.nvme_err_invalid_ns ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 580, gettimeofday_ns(), 24 + 8 + 8, pid(), ns, limit_)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_opc = qemu.kvm.nvme_err_invalid_opc ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 581, gettimeofday_ns(), 24 + 8, pid(), opc)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_admin_opc = qemu.kvm.nvme_err_invalid_admin_opc ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 582, gettimeofday_ns(), 24 + 8, pid(), opc)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_lba_range = qemu.kvm.nvme_err_invalid_lba_range ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 583, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), start, len, limit_)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_del_sq = qemu.kvm.nvme_err_invalid_del_sq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 584, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_create_sq_cqid = qemu.kvm.nvme_err_invalid_create_sq_cqid ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 585, gettimeofday_ns(), 24 + 8, pid(), cqid)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_create_sq_sqid = qemu.kvm.nvme_err_invalid_create_sq_sqid ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 586, gettimeofday_ns(), 24 + 8, pid(), sqid)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_create_sq_size = qemu.kvm.nvme_err_invalid_create_sq_size ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 587, gettimeofday_ns(), 24 + 8, pid(), qsize)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_create_sq_addr = qemu.kvm.nvme_err_invalid_create_sq_addr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 588, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_create_sq_qflags = qemu.kvm.nvme_err_invalid_create_sq_qflags ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 589, gettimeofday_ns(), 24 + 8, pid(), qflags)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_del_cq_cqid = qemu.kvm.nvme_err_invalid_del_cq_cqid ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 590, gettimeofday_ns(), 24 + 8, pid(), cqid)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_del_cq_notempty = qemu.kvm.nvme_err_invalid_del_cq_notempty ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 591, gettimeofday_ns(), 24 + 8, pid(), cqid)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_create_cq_cqid = qemu.kvm.nvme_err_invalid_create_cq_cqid ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 592, gettimeofday_ns(), 24 + 8, pid(), cqid)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_create_cq_size = qemu.kvm.nvme_err_invalid_create_cq_size ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 593, gettimeofday_ns(), 24 + 8, pid(), size)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_create_cq_addr = qemu.kvm.nvme_err_invalid_create_cq_addr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 594, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_create_cq_vector = qemu.kvm.nvme_err_invalid_create_cq_vector ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 595, gettimeofday_ns(), 24 + 8, pid(), vector)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_create_cq_qflags = qemu.kvm.nvme_err_invalid_create_cq_qflags ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 596, gettimeofday_ns(), 24 + 8, pid(), qflags)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_identify_cns = qemu.kvm.nvme_err_invalid_identify_cns ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 597, gettimeofday_ns(), 24 + 8, pid(), cns)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_getfeat = qemu.kvm.nvme_err_invalid_getfeat ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 598, gettimeofday_ns(), 24 + 8, pid(), dw10)
}
probe qemu.kvm.simpletrace.nvme_err_invalid_setfeat = qemu.kvm.nvme_err_invalid_setfeat ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 599, gettimeofday_ns(), 24 + 8, pid(), dw10)
}
probe qemu.kvm.simpletrace.nvme_err_startfail_cq = qemu.kvm.nvme_err_startfail_cq ?
{
    printf("%8b%8b%8b%4b%4b", 1, 600, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_err_startfail_sq = qemu.kvm.nvme_err_startfail_sq ?
{
    printf("%8b%8b%8b%4b%4b", 1, 601, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_err_startfail_nbarasq = qemu.kvm.nvme_err_startfail_nbarasq ?
{
    printf("%8b%8b%8b%4b%4b", 1, 602, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_err_startfail_nbaracq = qemu.kvm.nvme_err_startfail_nbaracq ?
{
    printf("%8b%8b%8b%4b%4b", 1, 603, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_err_startfail_asq_misaligned = qemu.kvm.nvme_err_startfail_asq_misaligned ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 604, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.nvme_err_startfail_acq_misaligned = qemu.kvm.nvme_err_startfail_acq_misaligned ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 605, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.nvme_err_startfail_page_too_small = qemu.kvm.nvme_err_startfail_page_too_small ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 606, gettimeofday_ns(), 24 + 8 + 8, pid(), log2ps, maxlog2ps)
}
probe qemu.kvm.simpletrace.nvme_err_startfail_page_too_large = qemu.kvm.nvme_err_startfail_page_too_large ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 607, gettimeofday_ns(), 24 + 8 + 8, pid(), log2ps, maxlog2ps)
}
probe qemu.kvm.simpletrace.nvme_err_startfail_cqent_too_small = qemu.kvm.nvme_err_startfail_cqent_too_small ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 608, gettimeofday_ns(), 24 + 8 + 8, pid(), log2ps, maxlog2ps)
}
probe qemu.kvm.simpletrace.nvme_err_startfail_cqent_too_large = qemu.kvm.nvme_err_startfail_cqent_too_large ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 609, gettimeofday_ns(), 24 + 8 + 8, pid(), log2ps, maxlog2ps)
}
probe qemu.kvm.simpletrace.nvme_err_startfail_sqent_too_small = qemu.kvm.nvme_err_startfail_sqent_too_small ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 610, gettimeofday_ns(), 24 + 8 + 8, pid(), log2ps, maxlog2ps)
}
probe qemu.kvm.simpletrace.nvme_err_startfail_sqent_too_large = qemu.kvm.nvme_err_startfail_sqent_too_large ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 611, gettimeofday_ns(), 24 + 8 + 8, pid(), log2ps, maxlog2ps)
}
probe qemu.kvm.simpletrace.nvme_err_startfail_asqent_sz_zero = qemu.kvm.nvme_err_startfail_asqent_sz_zero ?
{
    printf("%8b%8b%8b%4b%4b", 1, 612, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_err_startfail_acqent_sz_zero = qemu.kvm.nvme_err_startfail_acqent_sz_zero ?
{
    printf("%8b%8b%8b%4b%4b", 1, 613, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_err_startfail = qemu.kvm.nvme_err_startfail ?
{
    printf("%8b%8b%8b%4b%4b", 1, 614, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_ub_mmiowr_misaligned32 = qemu.kvm.nvme_ub_mmiowr_misaligned32 ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 615, gettimeofday_ns(), 24 + 8, pid(), offset)
}
probe qemu.kvm.simpletrace.nvme_ub_mmiowr_toosmall = qemu.kvm.nvme_ub_mmiowr_toosmall ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 616, gettimeofday_ns(), 24 + 8 + 8, pid(), offset, size)
}
probe qemu.kvm.simpletrace.nvme_ub_mmiowr_intmask_with_msix = qemu.kvm.nvme_ub_mmiowr_intmask_with_msix ?
{
    printf("%8b%8b%8b%4b%4b", 1, 617, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_ub_mmiowr_ro_csts = qemu.kvm.nvme_ub_mmiowr_ro_csts ?
{
    printf("%8b%8b%8b%4b%4b", 1, 618, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_ub_mmiowr_ssreset_w1c_unsupported = qemu.kvm.nvme_ub_mmiowr_ssreset_w1c_unsupported ?
{
    printf("%8b%8b%8b%4b%4b", 1, 619, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_ub_mmiowr_ssreset_unsupported = qemu.kvm.nvme_ub_mmiowr_ssreset_unsupported ?
{
    printf("%8b%8b%8b%4b%4b", 1, 620, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_ub_mmiowr_cmbloc_reserved = qemu.kvm.nvme_ub_mmiowr_cmbloc_reserved ?
{
    printf("%8b%8b%8b%4b%4b", 1, 621, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_ub_mmiowr_cmbsz_readonly = qemu.kvm.nvme_ub_mmiowr_cmbsz_readonly ?
{
    printf("%8b%8b%8b%4b%4b", 1, 622, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nvme_ub_mmiowr_invalid = qemu.kvm.nvme_ub_mmiowr_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 623, gettimeofday_ns(), 24 + 8 + 8, pid(), offset, data)
}
probe qemu.kvm.simpletrace.nvme_ub_mmiord_misaligned32 = qemu.kvm.nvme_ub_mmiord_misaligned32 ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 624, gettimeofday_ns(), 24 + 8, pid(), offset)
}
probe qemu.kvm.simpletrace.nvme_ub_mmiord_toosmall = qemu.kvm.nvme_ub_mmiord_toosmall ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 625, gettimeofday_ns(), 24 + 8, pid(), offset)
}
probe qemu.kvm.simpletrace.nvme_ub_mmiord_invalid_ofs = qemu.kvm.nvme_ub_mmiord_invalid_ofs ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 626, gettimeofday_ns(), 24 + 8, pid(), offset)
}
probe qemu.kvm.simpletrace.nvme_ub_db_wr_misaligned = qemu.kvm.nvme_ub_db_wr_misaligned ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 627, gettimeofday_ns(), 24 + 8, pid(), offset)
}
probe qemu.kvm.simpletrace.nvme_ub_db_wr_invalid_cq = qemu.kvm.nvme_ub_db_wr_invalid_cq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 628, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.nvme_ub_db_wr_invalid_cqhead = qemu.kvm.nvme_ub_db_wr_invalid_cqhead ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 629, gettimeofday_ns(), 24 + 8 + 8, pid(), qid, new_head)
}
probe qemu.kvm.simpletrace.nvme_ub_db_wr_invalid_sq = qemu.kvm.nvme_ub_db_wr_invalid_sq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 630, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.nvme_ub_db_wr_invalid_sqtail = qemu.kvm.nvme_ub_db_wr_invalid_sqtail ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 631, gettimeofday_ns(), 24 + 8 + 8, pid(), qid, new_tail)
}
probe qemu.kvm.simpletrace.xen_disk_alloc = qemu.kvm.xen_disk_alloc ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 632, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.xen_disk_init = qemu.kvm.xen_disk_init ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 633, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.xen_disk_connect = qemu.kvm.xen_disk_connect ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 634, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.xen_disk_disconnect = qemu.kvm.xen_disk_disconnect ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 635, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.xen_disk_free = qemu.kvm.xen_disk_free ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 636, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.virtio_blk_data_plane_start = qemu.kvm.virtio_blk_data_plane_start ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 637, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.virtio_blk_data_plane_stop = qemu.kvm.virtio_blk_data_plane_stop ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 638, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.virtio_serial_send_control_event = qemu.kvm.virtio_serial_send_control_event ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 639, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), port, event, value)
}
probe qemu.kvm.simpletrace.virtio_serial_throttle_port = qemu.kvm.virtio_serial_throttle_port ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 640, gettimeofday_ns(), 24 + 8 + 8, pid(), port, throttle)
}
probe qemu.kvm.simpletrace.virtio_serial_handle_control_message = qemu.kvm.virtio_serial_handle_control_message ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 641, gettimeofday_ns(), 24 + 8 + 8, pid(), event, value)
}
probe qemu.kvm.simpletrace.virtio_serial_handle_control_message_port = qemu.kvm.virtio_serial_handle_control_message_port ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 642, gettimeofday_ns(), 24 + 8, pid(), port)
}
probe qemu.kvm.simpletrace.virtio_console_flush_buf = qemu.kvm.virtio_console_flush_buf ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 643, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), port, len, ret)
}
probe qemu.kvm.simpletrace.virtio_console_chr_read = qemu.kvm.virtio_console_chr_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 644, gettimeofday_ns(), 24 + 8 + 8, pid(), port, size)
}
probe qemu.kvm.simpletrace.virtio_console_chr_event = qemu.kvm.virtio_console_chr_event ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 645, gettimeofday_ns(), 24 + 8 + 8, pid(), port, event)
}
probe qemu.kvm.simpletrace.grlib_apbuart_event = qemu.kvm.grlib_apbuart_event ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 646, gettimeofday_ns(), 24 + 8, pid(), event)
}
probe qemu.kvm.simpletrace.grlib_apbuart_writel_unknown = qemu.kvm.grlib_apbuart_writel_unknown ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 647, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.grlib_apbuart_readl_unknown = qemu.kvm.grlib_apbuart_readl_unknown ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 648, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.lm32_juart_get_jtx = qemu.kvm.lm32_juart_get_jtx ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 649, gettimeofday_ns(), 24 + 8, pid(), value)
}
probe qemu.kvm.simpletrace.lm32_juart_set_jtx = qemu.kvm.lm32_juart_set_jtx ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 650, gettimeofday_ns(), 24 + 8, pid(), value)
}
probe qemu.kvm.simpletrace.lm32_juart_get_jrx = qemu.kvm.lm32_juart_get_jrx ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 651, gettimeofday_ns(), 24 + 8, pid(), value)
}
probe qemu.kvm.simpletrace.lm32_juart_set_jrx = qemu.kvm.lm32_juart_set_jrx ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 652, gettimeofday_ns(), 24 + 8, pid(), value)
}
probe qemu.kvm.simpletrace.lm32_uart_memory_write = qemu.kvm.lm32_uart_memory_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 653, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.lm32_uart_memory_read = qemu.kvm.lm32_uart_memory_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 654, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.lm32_uart_irq_state = qemu.kvm.lm32_uart_irq_state ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 655, gettimeofday_ns(), 24 + 8, pid(), level)
}
probe qemu.kvm.simpletrace.milkymist_uart_memory_read = qemu.kvm.milkymist_uart_memory_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 656, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.milkymist_uart_memory_write = qemu.kvm.milkymist_uart_memory_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 657, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.milkymist_uart_raise_irq = qemu.kvm.milkymist_uart_raise_irq ?
{
    printf("%8b%8b%8b%4b%4b", 1, 658, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.milkymist_uart_lower_irq = qemu.kvm.milkymist_uart_lower_irq ?
{
    printf("%8b%8b%8b%4b%4b", 1, 659, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.escc_put_queue = qemu.kvm.escc_put_queue ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 660, gettimeofday_ns(), 24 + 8 + 8, pid(), channel, b)
}
probe qemu.kvm.simpletrace.escc_get_queue = qemu.kvm.escc_get_queue ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 661, gettimeofday_ns(), 24 + 8 + 8, pid(), channel, val)
}
probe qemu.kvm.simpletrace.escc_update_irq = qemu.kvm.escc_update_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 662, gettimeofday_ns(), 24 + 8, pid(), irq)
}
probe qemu.kvm.simpletrace.escc_update_parameters = qemu.kvm.escc_update_parameters ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 663, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), channel, speed, parity, data_bits, stop_bits)
}
probe qemu.kvm.simpletrace.escc_mem_writeb_ctrl = qemu.kvm.escc_mem_writeb_ctrl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 664, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), channel, reg, val)
}
probe qemu.kvm.simpletrace.escc_mem_writeb_data = qemu.kvm.escc_mem_writeb_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 665, gettimeofday_ns(), 24 + 8 + 8, pid(), channel, val)
}
probe qemu.kvm.simpletrace.escc_mem_readb_ctrl = qemu.kvm.escc_mem_readb_ctrl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 666, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), channel, reg, val)
}
probe qemu.kvm.simpletrace.escc_mem_readb_data = qemu.kvm.escc_mem_readb_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 667, gettimeofday_ns(), 24 + 8 + 8, pid(), channel, ret)
}
probe qemu.kvm.simpletrace.escc_serial_receive_byte = qemu.kvm.escc_serial_receive_byte ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 668, gettimeofday_ns(), 24 + 8 + 8, pid(), channel, ch)
}
probe qemu.kvm.simpletrace.escc_sunkbd_event_in = qemu.kvm.escc_sunkbd_event_in ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 669, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), ch, argname_len, argname_len, argname_str, down)
}
probe qemu.kvm.simpletrace.escc_sunkbd_event_out = qemu.kvm.escc_sunkbd_event_out ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 670, gettimeofday_ns(), 24 + 8, pid(), ch)
}
probe qemu.kvm.simpletrace.escc_kbd_command = qemu.kvm.escc_kbd_command ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 671, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.escc_sunmouse_event = qemu.kvm.escc_sunmouse_event ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 672, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), dx, dy, buttons_state)
}
probe qemu.kvm.simpletrace.pl011_irq_state = qemu.kvm.pl011_irq_state ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 673, gettimeofday_ns(), 24 + 8, pid(), level)
}
probe qemu.kvm.simpletrace.pl011_read = qemu.kvm.pl011_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 674, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.pl011_read_fifo = qemu.kvm.pl011_read_fifo ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 675, gettimeofday_ns(), 24 + 8, pid(), read_count)
}
probe qemu.kvm.simpletrace.pl011_write = qemu.kvm.pl011_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 676, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.pl011_can_receive = qemu.kvm.pl011_can_receive ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 677, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), lcr, read_count, r)
}
probe qemu.kvm.simpletrace.pl011_put_fifo = qemu.kvm.pl011_put_fifo ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 678, gettimeofday_ns(), 24 + 8 + 8, pid(), c, read_count)
}
probe qemu.kvm.simpletrace.pl011_put_fifo_full = qemu.kvm.pl011_put_fifo_full ?
{
    printf("%8b%8b%8b%4b%4b", 1, 679, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.cmsdk_apb_uart_read = qemu.kvm.cmsdk_apb_uart_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 680, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, data, size)
}
probe qemu.kvm.simpletrace.cmsdk_apb_uart_write = qemu.kvm.cmsdk_apb_uart_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 681, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, data, size)
}
probe qemu.kvm.simpletrace.cmsdk_apb_uart_reset = qemu.kvm.cmsdk_apb_uart_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 682, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.cmsdk_apb_uart_receive = qemu.kvm.cmsdk_apb_uart_receive ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 683, gettimeofday_ns(), 24 + 8, pid(), c)
}
probe qemu.kvm.simpletrace.cmsdk_apb_uart_tx_pending = qemu.kvm.cmsdk_apb_uart_tx_pending ?
{
    printf("%8b%8b%8b%4b%4b", 1, 684, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.cmsdk_apb_uart_tx = qemu.kvm.cmsdk_apb_uart_tx ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 685, gettimeofday_ns(), 24 + 8, pid(), c)
}
probe qemu.kvm.simpletrace.cmsdk_apb_uart_set_params = qemu.kvm.cmsdk_apb_uart_set_params ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 686, gettimeofday_ns(), 24 + 8, pid(), speed)
}
probe qemu.kvm.simpletrace.pic_update_irq = qemu.kvm.pic_update_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 687, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), master, imr, irr, padd)
}
probe qemu.kvm.simpletrace.pic_set_irq = qemu.kvm.pic_set_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 688, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), master, irq, level)
}
probe qemu.kvm.simpletrace.pic_interrupt = qemu.kvm.pic_interrupt ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 689, gettimeofday_ns(), 24 + 8 + 8, pid(), irq, intno)
}
probe qemu.kvm.simpletrace.pic_ioport_write = qemu.kvm.pic_ioport_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 690, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), master, addr, val)
}
probe qemu.kvm.simpletrace.pic_ioport_read = qemu.kvm.pic_ioport_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 691, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), master, addr, val)
}
probe qemu.kvm.simpletrace.cpu_set_apic_base = qemu.kvm.cpu_set_apic_base ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 692, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.cpu_get_apic_base = qemu.kvm.cpu_get_apic_base ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 693, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.apic_report_irq_delivered = qemu.kvm.apic_report_irq_delivered ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 694, gettimeofday_ns(), 24 + 8, pid(), apic_irq_delivered)
}
probe qemu.kvm.simpletrace.apic_reset_irq_delivered = qemu.kvm.apic_reset_irq_delivered ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 695, gettimeofday_ns(), 24 + 8, pid(), apic_irq_delivered)
}
probe qemu.kvm.simpletrace.apic_get_irq_delivered = qemu.kvm.apic_get_irq_delivered ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 696, gettimeofday_ns(), 24 + 8, pid(), apic_irq_delivered)
}
probe qemu.kvm.simpletrace.apic_local_deliver = qemu.kvm.apic_local_deliver ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 697, gettimeofday_ns(), 24 + 8 + 8, pid(), vector, lvt)
}
probe qemu.kvm.simpletrace.apic_deliver_irq = qemu.kvm.apic_deliver_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 698, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), dest, dest_mode, delivery_mode, vector_num, trigger_mode)
}
probe qemu.kvm.simpletrace.apic_mem_readl = qemu.kvm.apic_mem_readl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 699, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.apic_mem_writel = qemu.kvm.apic_mem_writel ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 700, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.ioapic_set_remote_irr = qemu.kvm.ioapic_set_remote_irr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 701, gettimeofday_ns(), 24 + 8, pid(), n)
}
probe qemu.kvm.simpletrace.ioapic_clear_remote_irr = qemu.kvm.ioapic_clear_remote_irr ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 702, gettimeofday_ns(), 24 + 8 + 8, pid(), n, vector)
}
probe qemu.kvm.simpletrace.ioapic_eoi_broadcast = qemu.kvm.ioapic_eoi_broadcast ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 703, gettimeofday_ns(), 24 + 8, pid(), vector)
}
probe qemu.kvm.simpletrace.ioapic_mem_read = qemu.kvm.ioapic_mem_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 704, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), addr, regsel, size, val)
}
probe qemu.kvm.simpletrace.ioapic_mem_write = qemu.kvm.ioapic_mem_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 705, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), addr, regsel, size, val)
}
probe qemu.kvm.simpletrace.ioapic_set_irq = qemu.kvm.ioapic_set_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 706, gettimeofday_ns(), 24 + 8 + 8, pid(), vector, level)
}
probe qemu.kvm.simpletrace.slavio_intctl_mem_readl = qemu.kvm.slavio_intctl_mem_readl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 707, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cpu, addr, ret)
}
probe qemu.kvm.simpletrace.slavio_intctl_mem_writel = qemu.kvm.slavio_intctl_mem_writel ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 708, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cpu, addr, val)
}
probe qemu.kvm.simpletrace.slavio_intctl_mem_writel_clear = qemu.kvm.slavio_intctl_mem_writel_clear ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 709, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cpu, val, intreg_pending)
}
probe qemu.kvm.simpletrace.slavio_intctl_mem_writel_set = qemu.kvm.slavio_intctl_mem_writel_set ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 710, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cpu, val, intreg_pending)
}
probe qemu.kvm.simpletrace.slavio_intctlm_mem_readl = qemu.kvm.slavio_intctlm_mem_readl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 711, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, ret)
}
probe qemu.kvm.simpletrace.slavio_intctlm_mem_writel = qemu.kvm.slavio_intctlm_mem_writel ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 712, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.slavio_intctlm_mem_writel_enable = qemu.kvm.slavio_intctlm_mem_writel_enable ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 713, gettimeofday_ns(), 24 + 8 + 8, pid(), val, intregm_disabled)
}
probe qemu.kvm.simpletrace.slavio_intctlm_mem_writel_disable = qemu.kvm.slavio_intctlm_mem_writel_disable ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 714, gettimeofday_ns(), 24 + 8 + 8, pid(), val, intregm_disabled)
}
probe qemu.kvm.simpletrace.slavio_intctlm_mem_writel_target = qemu.kvm.slavio_intctlm_mem_writel_target ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 715, gettimeofday_ns(), 24 + 8, pid(), cpu)
}
probe qemu.kvm.simpletrace.slavio_check_interrupts = qemu.kvm.slavio_check_interrupts ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 716, gettimeofday_ns(), 24 + 8 + 8, pid(), pending, intregm_disabled)
}
probe qemu.kvm.simpletrace.slavio_set_irq = qemu.kvm.slavio_set_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 717, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), target_cpu, irq, pil, level)
}
probe qemu.kvm.simpletrace.slavio_set_timer_irq_cpu = qemu.kvm.slavio_set_timer_irq_cpu ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 718, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, level)
}
probe qemu.kvm.simpletrace.grlib_irqmp_check_irqs = qemu.kvm.grlib_irqmp_check_irqs ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 719, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), pend, force, mask, lvl1, lvl2)
}
probe qemu.kvm.simpletrace.grlib_irqmp_ack = qemu.kvm.grlib_irqmp_ack ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 720, gettimeofday_ns(), 24 + 8, pid(), intno)
}
probe qemu.kvm.simpletrace.grlib_irqmp_set_irq = qemu.kvm.grlib_irqmp_set_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 721, gettimeofday_ns(), 24 + 8, pid(), irq)
}
probe qemu.kvm.simpletrace.grlib_irqmp_readl_unknown = qemu.kvm.grlib_irqmp_readl_unknown ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 722, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.grlib_irqmp_writel_unknown = qemu.kvm.grlib_irqmp_writel_unknown ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 723, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.lm32_pic_raise_irq = qemu.kvm.lm32_pic_raise_irq ?
{
    printf("%8b%8b%8b%4b%4b", 1, 724, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.lm32_pic_lower_irq = qemu.kvm.lm32_pic_lower_irq ?
{
    printf("%8b%8b%8b%4b%4b", 1, 725, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.lm32_pic_interrupt = qemu.kvm.lm32_pic_interrupt ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 726, gettimeofday_ns(), 24 + 8 + 8, pid(), irq, level)
}
probe qemu.kvm.simpletrace.lm32_pic_set_im = qemu.kvm.lm32_pic_set_im ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 727, gettimeofday_ns(), 24 + 8, pid(), im)
}
probe qemu.kvm.simpletrace.lm32_pic_set_ip = qemu.kvm.lm32_pic_set_ip ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 728, gettimeofday_ns(), 24 + 8, pid(), ip)
}
probe qemu.kvm.simpletrace.lm32_pic_get_im = qemu.kvm.lm32_pic_get_im ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 729, gettimeofday_ns(), 24 + 8, pid(), im)
}
probe qemu.kvm.simpletrace.lm32_pic_get_ip = qemu.kvm.lm32_pic_get_ip ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 730, gettimeofday_ns(), 24 + 8, pid(), ip)
}
probe qemu.kvm.simpletrace.xics_icp_check_ipi = qemu.kvm.xics_icp_check_ipi ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 731, gettimeofday_ns(), 24 + 8 + 8, pid(), server, mfrr)
}
probe qemu.kvm.simpletrace.xics_icp_accept = qemu.kvm.xics_icp_accept ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 732, gettimeofday_ns(), 24 + 8 + 8, pid(), old_xirr, new_xirr)
}
probe qemu.kvm.simpletrace.xics_icp_eoi = qemu.kvm.xics_icp_eoi ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 733, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), server, xirr, new_xirr)
}
probe qemu.kvm.simpletrace.xics_icp_irq = qemu.kvm.xics_icp_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 734, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), server, nr, priority)
}
probe qemu.kvm.simpletrace.xics_icp_raise = qemu.kvm.xics_icp_raise ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 735, gettimeofday_ns(), 24 + 8 + 8, pid(), xirr, pending_priority)
}
probe qemu.kvm.simpletrace.xics_ics_simple_set_irq_msi = qemu.kvm.xics_ics_simple_set_irq_msi ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 736, gettimeofday_ns(), 24 + 8 + 8, pid(), srcno, nr)
}
probe qemu.kvm.simpletrace.xics_masked_pending = qemu.kvm.xics_masked_pending ?
{
    printf("%8b%8b%8b%4b%4b", 1, 737, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.xics_ics_simple_set_irq_lsi = qemu.kvm.xics_ics_simple_set_irq_lsi ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 738, gettimeofday_ns(), 24 + 8 + 8, pid(), srcno, nr)
}
probe qemu.kvm.simpletrace.xics_ics_simple_write_xive = qemu.kvm.xics_ics_simple_write_xive ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 739, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), nr, srcno, server, priority)
}
probe qemu.kvm.simpletrace.xics_ics_simple_reject = qemu.kvm.xics_ics_simple_reject ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 740, gettimeofday_ns(), 24 + 8 + 8, pid(), nr, srcno)
}
probe qemu.kvm.simpletrace.xics_ics_simple_eoi = qemu.kvm.xics_ics_simple_eoi ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 741, gettimeofday_ns(), 24 + 8, pid(), nr)
}
probe qemu.kvm.simpletrace.flic_create_device = qemu.kvm.flic_create_device ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 742, gettimeofday_ns(), 24 + 8, pid(), err)
}
probe qemu.kvm.simpletrace.flic_no_device_api = qemu.kvm.flic_no_device_api ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 743, gettimeofday_ns(), 24 + 8, pid(), err)
}
probe qemu.kvm.simpletrace.flic_reset_failed = qemu.kvm.flic_reset_failed ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 744, gettimeofday_ns(), 24 + 8, pid(), err)
}
probe qemu.kvm.simpletrace.qemu_s390_airq_suppressed = qemu.kvm.qemu_s390_airq_suppressed ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 745, gettimeofday_ns(), 24 + 8 + 8, pid(), type, isc)
}
probe qemu.kvm.simpletrace.qemu_s390_suppress_airq = qemu.kvm.qemu_s390_suppress_airq ?
{
    try {
        argfrom_str = from ? user_string_n(from, 512) : "<null>"
    } catch {}
    argfrom_len = strlen(argfrom_str)
    try {
        argto_str = to ? user_string_n(to, 512) : "<null>"
    } catch {}
    argto_len = strlen(argto_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%4b%.*s", 1, 746, gettimeofday_ns(), 24 + 8 + 4 + argfrom_len + 4 + argto_len, pid(), isc, argfrom_len, argfrom_len, argfrom_str, argto_len, argto_len, argto_str)
}
probe qemu.kvm.simpletrace.aspeed_vic_set_irq = qemu.kvm.aspeed_vic_set_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 747, gettimeofday_ns(), 24 + 8 + 8, pid(), irq, level)
}
probe qemu.kvm.simpletrace.aspeed_vic_update_fiq = qemu.kvm.aspeed_vic_update_fiq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 748, gettimeofday_ns(), 24 + 8, pid(), flags)
}
probe qemu.kvm.simpletrace.aspeed_vic_update_irq = qemu.kvm.aspeed_vic_update_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 749, gettimeofday_ns(), 24 + 8, pid(), flags)
}
probe qemu.kvm.simpletrace.aspeed_vic_read = qemu.kvm.aspeed_vic_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 750, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, size, value)
}
probe qemu.kvm.simpletrace.aspeed_vic_write = qemu.kvm.aspeed_vic_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 751, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, size, data)
}
probe qemu.kvm.simpletrace.gic_enable_irq = qemu.kvm.gic_enable_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 752, gettimeofday_ns(), 24 + 8, pid(), irq)
}
probe qemu.kvm.simpletrace.gic_disable_irq = qemu.kvm.gic_disable_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 753, gettimeofday_ns(), 24 + 8, pid(), irq)
}
probe qemu.kvm.simpletrace.gic_set_irq = qemu.kvm.gic_set_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 754, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), irq, level, cpumask, target)
}
probe qemu.kvm.simpletrace.gic_update_bestirq = qemu.kvm.gic_update_bestirq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 755, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), cpu, irq, prio, priority_mask, running_priority)
}
probe qemu.kvm.simpletrace.gic_update_set_irq = qemu.kvm.gic_update_set_irq ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 756, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), cpu, argname_len, argname_len, argname_str, level)
}
probe qemu.kvm.simpletrace.gic_acknowledge_irq = qemu.kvm.gic_acknowledge_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 757, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, irq)
}
probe qemu.kvm.simpletrace.gicv3_icc_pmr_read = qemu.kvm.gicv3_icc_pmr_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 758, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_pmr_write = qemu.kvm.gicv3_icc_pmr_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 759, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_bpr_read = qemu.kvm.gicv3_icc_bpr_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 760, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), grp, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_bpr_write = qemu.kvm.gicv3_icc_bpr_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 761, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), grp, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_ap_read = qemu.kvm.gicv3_icc_ap_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 762, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), grp, regno, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_ap_write = qemu.kvm.gicv3_icc_ap_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 763, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), grp, regno, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_igrpen_read = qemu.kvm.gicv3_icc_igrpen_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 764, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), grp, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_igrpen_write = qemu.kvm.gicv3_icc_igrpen_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 765, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), grp, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_igrpen1_el3_read = qemu.kvm.gicv3_icc_igrpen1_el3_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 766, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_igrpen1_el3_write = qemu.kvm.gicv3_icc_igrpen1_el3_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 767, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_ctlr_read = qemu.kvm.gicv3_icc_ctlr_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 768, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_ctlr_write = qemu.kvm.gicv3_icc_ctlr_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 769, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_ctlr_el3_read = qemu.kvm.gicv3_icc_ctlr_el3_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 770, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_ctlr_el3_write = qemu.kvm.gicv3_icc_ctlr_el3_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 771, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_cpuif_update = qemu.kvm.gicv3_cpuif_update ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 772, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), cpuid, irq, grp, prio)
}
probe qemu.kvm.simpletrace.gicv3_cpuif_set_irqs = qemu.kvm.gicv3_cpuif_set_irqs ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 773, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cpuid, fiqlevel, irqlevel)
}
probe qemu.kvm.simpletrace.gicv3_icc_generate_sgi = qemu.kvm.gicv3_icc_generate_sgi ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 774, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), cpuid, irq, irm, aff, targetlist)
}
probe qemu.kvm.simpletrace.gicv3_icc_iar0_read = qemu.kvm.gicv3_icc_iar0_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 775, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_iar1_read = qemu.kvm.gicv3_icc_iar1_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 776, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_eoir_write = qemu.kvm.gicv3_icc_eoir_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 777, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), grp, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_hppir0_read = qemu.kvm.gicv3_icc_hppir0_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 778, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_hppir1_read = qemu.kvm.gicv3_icc_hppir1_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 779, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_dir_write = qemu.kvm.gicv3_icc_dir_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 780, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icc_rpr_read = qemu.kvm.gicv3_icc_rpr_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 781, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_ich_ap_read = qemu.kvm.gicv3_ich_ap_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 782, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), grp, regno, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_ich_ap_write = qemu.kvm.gicv3_ich_ap_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 783, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), grp, regno, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_ich_hcr_read = qemu.kvm.gicv3_ich_hcr_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 784, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_ich_hcr_write = qemu.kvm.gicv3_ich_hcr_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 785, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_ich_vmcr_read = qemu.kvm.gicv3_ich_vmcr_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 786, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_ich_vmcr_write = qemu.kvm.gicv3_ich_vmcr_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 787, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_ich_lr_read = qemu.kvm.gicv3_ich_lr_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 788, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), regno, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_ich_lr32_read = qemu.kvm.gicv3_ich_lr32_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 789, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), regno, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_ich_lrc_read = qemu.kvm.gicv3_ich_lrc_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 790, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), regno, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_ich_lr_write = qemu.kvm.gicv3_ich_lr_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 791, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), regno, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_ich_lr32_write = qemu.kvm.gicv3_ich_lr32_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 792, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), regno, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_ich_lrc_write = qemu.kvm.gicv3_ich_lrc_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 793, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), regno, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_ich_vtr_read = qemu.kvm.gicv3_ich_vtr_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 794, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_ich_misr_read = qemu.kvm.gicv3_ich_misr_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 795, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_ich_eisr_read = qemu.kvm.gicv3_ich_eisr_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 796, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_ich_elrsr_read = qemu.kvm.gicv3_ich_elrsr_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 797, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icv_ap_read = qemu.kvm.gicv3_icv_ap_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 798, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), grp, regno, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icv_ap_write = qemu.kvm.gicv3_icv_ap_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 799, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), grp, regno, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icv_bpr_read = qemu.kvm.gicv3_icv_bpr_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 800, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), grp, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icv_bpr_write = qemu.kvm.gicv3_icv_bpr_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 801, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), grp, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icv_pmr_read = qemu.kvm.gicv3_icv_pmr_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 802, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icv_pmr_write = qemu.kvm.gicv3_icv_pmr_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 803, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icv_igrpen_read = qemu.kvm.gicv3_icv_igrpen_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 804, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), grp, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icv_igrpen_write = qemu.kvm.gicv3_icv_igrpen_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 805, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), grp, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icv_ctlr_read = qemu.kvm.gicv3_icv_ctlr_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 806, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icv_ctlr_write = qemu.kvm.gicv3_icv_ctlr_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 807, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icv_rpr_read = qemu.kvm.gicv3_icv_rpr_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 808, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icv_hppir_read = qemu.kvm.gicv3_icv_hppir_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 809, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), grp, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icv_dir_write = qemu.kvm.gicv3_icv_dir_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 810, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icv_iar_read = qemu.kvm.gicv3_icv_iar_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 811, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), grp, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_icv_eoir_write = qemu.kvm.gicv3_icv_eoir_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 812, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), grp, cpu, val)
}
probe qemu.kvm.simpletrace.gicv3_cpuif_virt_update = qemu.kvm.gicv3_cpuif_virt_update ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 813, gettimeofday_ns(), 24 + 8 + 8, pid(), cpuid, idx)
}
probe qemu.kvm.simpletrace.gicv3_cpuif_virt_set_irqs = qemu.kvm.gicv3_cpuif_virt_set_irqs ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 814, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), cpuid, fiqlevel, irqlevel, maintlevel)
}
probe qemu.kvm.simpletrace.gicv3_dist_read = qemu.kvm.gicv3_dist_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 815, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), offset, data, size, secure)
}
probe qemu.kvm.simpletrace.gicv3_dist_badread = qemu.kvm.gicv3_dist_badread ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 816, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, size, secure)
}
probe qemu.kvm.simpletrace.gicv3_dist_write = qemu.kvm.gicv3_dist_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 817, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), offset, data, size, secure)
}
probe qemu.kvm.simpletrace.gicv3_dist_badwrite = qemu.kvm.gicv3_dist_badwrite ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 818, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), offset, data, size, secure)
}
probe qemu.kvm.simpletrace.gicv3_dist_set_irq = qemu.kvm.gicv3_dist_set_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 819, gettimeofday_ns(), 24 + 8 + 8, pid(), irq, level)
}
probe qemu.kvm.simpletrace.gicv3_redist_read = qemu.kvm.gicv3_redist_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 820, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), cpu, offset, data, size, secure)
}
probe qemu.kvm.simpletrace.gicv3_redist_badread = qemu.kvm.gicv3_redist_badread ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 821, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), cpu, offset, size, secure)
}
probe qemu.kvm.simpletrace.gicv3_redist_write = qemu.kvm.gicv3_redist_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 822, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), cpu, offset, data, size, secure)
}
probe qemu.kvm.simpletrace.gicv3_redist_badwrite = qemu.kvm.gicv3_redist_badwrite ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 823, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), cpu, offset, data, size, secure)
}
probe qemu.kvm.simpletrace.gicv3_redist_set_irq = qemu.kvm.gicv3_redist_set_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 824, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cpu, irq, level)
}
probe qemu.kvm.simpletrace.gicv3_redist_send_sgi = qemu.kvm.gicv3_redist_send_sgi ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 825, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu, irq)
}
probe qemu.kvm.simpletrace.nvic_recompute_state = qemu.kvm.nvic_recompute_state ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 826, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), vectpending, vectpending_prio, exception_prio)
}
probe qemu.kvm.simpletrace.nvic_recompute_state_secure = qemu.kvm.nvic_recompute_state_secure ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 827, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), vectpending, vectpending_is_s_banked, vectpending_prio, exception_prio)
}
probe qemu.kvm.simpletrace.nvic_set_prio = qemu.kvm.nvic_set_prio ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 828, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), irq, secure, prio)
}
probe qemu.kvm.simpletrace.nvic_irq_update = qemu.kvm.nvic_irq_update ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 829, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), vectpending, pendprio, exception_prio, level)
}
probe qemu.kvm.simpletrace.nvic_escalate_prio = qemu.kvm.nvic_escalate_prio ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 830, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), irq, irqprio, runprio)
}
probe qemu.kvm.simpletrace.nvic_escalate_disabled = qemu.kvm.nvic_escalate_disabled ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 831, gettimeofday_ns(), 24 + 8, pid(), irq)
}
probe qemu.kvm.simpletrace.nvic_set_pending = qemu.kvm.nvic_set_pending ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 832, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), irq, secure, derived, en, prio)
}
probe qemu.kvm.simpletrace.nvic_clear_pending = qemu.kvm.nvic_clear_pending ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 833, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), irq, secure, en, prio)
}
probe qemu.kvm.simpletrace.nvic_set_pending_level = qemu.kvm.nvic_set_pending_level ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 834, gettimeofday_ns(), 24 + 8, pid(), irq)
}
probe qemu.kvm.simpletrace.nvic_acknowledge_irq = qemu.kvm.nvic_acknowledge_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 835, gettimeofday_ns(), 24 + 8 + 8, pid(), irq, prio)
}
probe qemu.kvm.simpletrace.nvic_get_pending_irq_info = qemu.kvm.nvic_get_pending_irq_info ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 836, gettimeofday_ns(), 24 + 8 + 8, pid(), irq, secure)
}
probe qemu.kvm.simpletrace.nvic_complete_irq = qemu.kvm.nvic_complete_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 837, gettimeofday_ns(), 24 + 8 + 8, pid(), irq, secure)
}
probe qemu.kvm.simpletrace.nvic_set_irq_level = qemu.kvm.nvic_set_irq_level ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 838, gettimeofday_ns(), 24 + 8 + 8, pid(), irq, level)
}
probe qemu.kvm.simpletrace.nvic_sysreg_read = qemu.kvm.nvic_sysreg_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 839, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, value, size)
}
probe qemu.kvm.simpletrace.nvic_sysreg_write = qemu.kvm.nvic_sysreg_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 840, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, value, size)
}
probe qemu.kvm.simpletrace.heathrow_write = qemu.kvm.heathrow_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 841, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, n, value)
}
probe qemu.kvm.simpletrace.heathrow_read = qemu.kvm.heathrow_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 842, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, n, value)
}
probe qemu.kvm.simpletrace.heathrow_set_irq = qemu.kvm.heathrow_set_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 843, gettimeofday_ns(), 24 + 8 + 8, pid(), num, level)
}
probe qemu.kvm.simpletrace.lance_mem_readw = qemu.kvm.lance_mem_readw ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 844, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, ret)
}
probe qemu.kvm.simpletrace.lance_mem_writew = qemu.kvm.lance_mem_writew ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 845, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.milkymist_minimac2_memory_read = qemu.kvm.milkymist_minimac2_memory_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 846, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.milkymist_minimac2_memory_write = qemu.kvm.milkymist_minimac2_memory_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 847, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.milkymist_minimac2_mdio_write = qemu.kvm.milkymist_minimac2_mdio_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 848, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), phy_addr, addr, value)
}
probe qemu.kvm.simpletrace.milkymist_minimac2_mdio_read = qemu.kvm.milkymist_minimac2_mdio_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 849, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), phy_addr, addr, value)
}
probe qemu.kvm.simpletrace.milkymist_minimac2_tx_frame = qemu.kvm.milkymist_minimac2_tx_frame ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 850, gettimeofday_ns(), 24 + 8, pid(), length)
}
probe qemu.kvm.simpletrace.milkymist_minimac2_rx_frame = qemu.kvm.milkymist_minimac2_rx_frame ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 851, gettimeofday_ns(), 24 + 8 + 8, pid(), buf, length)
}
probe qemu.kvm.simpletrace.milkymist_minimac2_rx_transfer = qemu.kvm.milkymist_minimac2_rx_transfer ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 852, gettimeofday_ns(), 24 + 8 + 8, pid(), buf, length)
}
probe qemu.kvm.simpletrace.milkymist_minimac2_raise_irq_rx = qemu.kvm.milkymist_minimac2_raise_irq_rx ?
{
    printf("%8b%8b%8b%4b%4b", 1, 853, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.milkymist_minimac2_lower_irq_rx = qemu.kvm.milkymist_minimac2_lower_irq_rx ?
{
    printf("%8b%8b%8b%4b%4b", 1, 854, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.milkymist_minimac2_pulse_irq_tx = qemu.kvm.milkymist_minimac2_pulse_irq_tx ?
{
    printf("%8b%8b%8b%4b%4b", 1, 855, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.mipsnet_send = qemu.kvm.mipsnet_send ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 856, gettimeofday_ns(), 24 + 8, pid(), size)
}
probe qemu.kvm.simpletrace.mipsnet_receive = qemu.kvm.mipsnet_receive ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 857, gettimeofday_ns(), 24 + 8, pid(), size)
}
probe qemu.kvm.simpletrace.mipsnet_read = qemu.kvm.mipsnet_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 858, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.mipsnet_write = qemu.kvm.mipsnet_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 859, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.mipsnet_irq = qemu.kvm.mipsnet_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 860, gettimeofday_ns(), 24 + 8 + 8, pid(), isr, intctl)
}
probe qemu.kvm.simpletrace.open_eth_mii_write = qemu.kvm.open_eth_mii_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 861, gettimeofday_ns(), 24 + 8 + 8, pid(), idx, v)
}
probe qemu.kvm.simpletrace.open_eth_mii_read = qemu.kvm.open_eth_mii_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 862, gettimeofday_ns(), 24 + 8 + 8, pid(), idx, v)
}
probe qemu.kvm.simpletrace.open_eth_update_irq = qemu.kvm.open_eth_update_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 863, gettimeofday_ns(), 24 + 8, pid(), v)
}
probe qemu.kvm.simpletrace.open_eth_receive = qemu.kvm.open_eth_receive ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 864, gettimeofday_ns(), 24 + 8, pid(), len)
}
probe qemu.kvm.simpletrace.open_eth_receive_mcast = qemu.kvm.open_eth_receive_mcast ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 865, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), idx, h0, h1)
}
probe qemu.kvm.simpletrace.open_eth_receive_reject = qemu.kvm.open_eth_receive_reject ?
{
    printf("%8b%8b%8b%4b%4b", 1, 866, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.open_eth_receive_desc = qemu.kvm.open_eth_receive_desc ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 867, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, len_flags)
}
probe qemu.kvm.simpletrace.open_eth_start_xmit = qemu.kvm.open_eth_start_xmit ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 868, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, len, tx_len)
}
probe qemu.kvm.simpletrace.open_eth_reg_read = qemu.kvm.open_eth_reg_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 869, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, v)
}
probe qemu.kvm.simpletrace.open_eth_reg_write = qemu.kvm.open_eth_reg_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 870, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, v)
}
probe qemu.kvm.simpletrace.open_eth_desc_read = qemu.kvm.open_eth_desc_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 871, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, v)
}
probe qemu.kvm.simpletrace.open_eth_desc_write = qemu.kvm.open_eth_desc_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 872, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, v)
}
probe qemu.kvm.simpletrace.pcnet_s_reset = qemu.kvm.pcnet_s_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 873, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.pcnet_user_int = qemu.kvm.pcnet_user_int ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 874, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.pcnet_isr_change = qemu.kvm.pcnet_isr_change ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 875, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, isr, isr_old)
}
probe qemu.kvm.simpletrace.pcnet_init = qemu.kvm.pcnet_init ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 876, gettimeofday_ns(), 24 + 8 + 8, pid(), s, init_addr)
}
probe qemu.kvm.simpletrace.pcnet_rlen_tlen = qemu.kvm.pcnet_rlen_tlen ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 877, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, rlen, tlen)
}
probe qemu.kvm.simpletrace.pcnet_ss32_rdra_tdra = qemu.kvm.pcnet_ss32_rdra_tdra ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 878, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), s, ss32, rdra, rcvrl, tdra, xmtrl)
}
probe qemu.kvm.simpletrace.pcnet_aprom_writeb = qemu.kvm.pcnet_aprom_writeb ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 879, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), opaque, addr, val)
}
probe qemu.kvm.simpletrace.pcnet_aprom_readb = qemu.kvm.pcnet_aprom_readb ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 880, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), opaque, addr, val)
}
probe qemu.kvm.simpletrace.pcnet_ioport_read = qemu.kvm.pcnet_ioport_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 881, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), opaque, addr, size)
}
probe qemu.kvm.simpletrace.pcnet_ioport_write = qemu.kvm.pcnet_ioport_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 882, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), opaque, addr, data, size)
}
probe qemu.kvm.simpletrace.pcnet_mmio_writeb = qemu.kvm.pcnet_mmio_writeb ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 883, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), opaque, addr, val)
}
probe qemu.kvm.simpletrace.pcnet_mmio_writew = qemu.kvm.pcnet_mmio_writew ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 884, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), opaque, addr, val)
}
probe qemu.kvm.simpletrace.pcnet_mmio_writel = qemu.kvm.pcnet_mmio_writel ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 885, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), opaque, addr, val)
}
probe qemu.kvm.simpletrace.pcnet_mmio_readb = qemu.kvm.pcnet_mmio_readb ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 886, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), opaque, addr, val)
}
probe qemu.kvm.simpletrace.pcnet_mmio_readw = qemu.kvm.pcnet_mmio_readw ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 887, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), opaque, addr, val)
}
probe qemu.kvm.simpletrace.pcnet_mmio_readl = qemu.kvm.pcnet_mmio_readl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 888, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), opaque, addr, val)
}
probe qemu.kvm.simpletrace.net_rx_pkt_parsed = qemu.kvm.net_rx_pkt_parsed ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b", 1, 889, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), ip4, ip6, udp, tcp, l3o, l4o, l5o)
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_validate_entry = qemu.kvm.net_rx_pkt_l4_csum_validate_entry ?
{
    printf("%8b%8b%8b%4b%4b", 1, 890, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_validate_not_xxp = qemu.kvm.net_rx_pkt_l4_csum_validate_not_xxp ?
{
    printf("%8b%8b%8b%4b%4b", 1, 891, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_validate_udp_with_no_checksum = qemu.kvm.net_rx_pkt_l4_csum_validate_udp_with_no_checksum ?
{
    printf("%8b%8b%8b%4b%4b", 1, 892, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_validate_ip4_fragment = qemu.kvm.net_rx_pkt_l4_csum_validate_ip4_fragment ?
{
    printf("%8b%8b%8b%4b%4b", 1, 893, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_validate_csum = qemu.kvm.net_rx_pkt_l4_csum_validate_csum ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 894, gettimeofday_ns(), 24 + 8, pid(), csum_valid)
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_calc_entry = qemu.kvm.net_rx_pkt_l4_csum_calc_entry ?
{
    printf("%8b%8b%8b%4b%4b", 1, 895, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_calc_ip4_udp = qemu.kvm.net_rx_pkt_l4_csum_calc_ip4_udp ?
{
    printf("%8b%8b%8b%4b%4b", 1, 896, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_calc_ip4_tcp = qemu.kvm.net_rx_pkt_l4_csum_calc_ip4_tcp ?
{
    printf("%8b%8b%8b%4b%4b", 1, 897, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_calc_ip6_udp = qemu.kvm.net_rx_pkt_l4_csum_calc_ip6_udp ?
{
    printf("%8b%8b%8b%4b%4b", 1, 898, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_calc_ip6_tcp = qemu.kvm.net_rx_pkt_l4_csum_calc_ip6_tcp ?
{
    printf("%8b%8b%8b%4b%4b", 1, 899, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_calc_ph_csum = qemu.kvm.net_rx_pkt_l4_csum_calc_ph_csum ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 900, gettimeofday_ns(), 24 + 8 + 8, pid(), cntr, csl)
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_calc_csum = qemu.kvm.net_rx_pkt_l4_csum_calc_csum ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 901, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), l4hdr_off, csl, cntr, csum)
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_fix_entry = qemu.kvm.net_rx_pkt_l4_csum_fix_entry ?
{
    printf("%8b%8b%8b%4b%4b", 1, 902, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_fix_tcp = qemu.kvm.net_rx_pkt_l4_csum_fix_tcp ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 903, gettimeofday_ns(), 24 + 8, pid(), l4_cso)
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_fix_udp = qemu.kvm.net_rx_pkt_l4_csum_fix_udp ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 904, gettimeofday_ns(), 24 + 8, pid(), l4_cso)
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_fix_not_xxp = qemu.kvm.net_rx_pkt_l4_csum_fix_not_xxp ?
{
    printf("%8b%8b%8b%4b%4b", 1, 905, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_fix_ip4_fragment = qemu.kvm.net_rx_pkt_l4_csum_fix_ip4_fragment ?
{
    printf("%8b%8b%8b%4b%4b", 1, 906, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_fix_udp_with_no_checksum = qemu.kvm.net_rx_pkt_l4_csum_fix_udp_with_no_checksum ?
{
    printf("%8b%8b%8b%4b%4b", 1, 907, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_l4_csum_fix_csum = qemu.kvm.net_rx_pkt_l4_csum_fix_csum ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 908, gettimeofday_ns(), 24 + 8 + 8, pid(), cso, csum)
}
probe qemu.kvm.simpletrace.net_rx_pkt_l3_csum_validate_entry = qemu.kvm.net_rx_pkt_l3_csum_validate_entry ?
{
    printf("%8b%8b%8b%4b%4b", 1, 909, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_l3_csum_validate_not_ip4 = qemu.kvm.net_rx_pkt_l3_csum_validate_not_ip4 ?
{
    printf("%8b%8b%8b%4b%4b", 1, 910, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_l3_csum_validate_csum = qemu.kvm.net_rx_pkt_l3_csum_validate_csum ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 911, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), l3hdr_off, csl, cntr, csum, csum_valid)
}
probe qemu.kvm.simpletrace.net_rx_pkt_rss_ip4 = qemu.kvm.net_rx_pkt_rss_ip4 ?
{
    printf("%8b%8b%8b%4b%4b", 1, 912, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_rss_ip4_tcp = qemu.kvm.net_rx_pkt_rss_ip4_tcp ?
{
    printf("%8b%8b%8b%4b%4b", 1, 913, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_rss_ip6_tcp = qemu.kvm.net_rx_pkt_rss_ip6_tcp ?
{
    printf("%8b%8b%8b%4b%4b", 1, 914, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_rss_ip6 = qemu.kvm.net_rx_pkt_rss_ip6 ?
{
    printf("%8b%8b%8b%4b%4b", 1, 915, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_rss_ip6_ex = qemu.kvm.net_rx_pkt_rss_ip6_ex ?
{
    printf("%8b%8b%8b%4b%4b", 1, 916, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.net_rx_pkt_rss_hash = qemu.kvm.net_rx_pkt_rss_hash ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 917, gettimeofday_ns(), 24 + 8 + 8, pid(), rss_length, rss_hash)
}
probe qemu.kvm.simpletrace.net_rx_pkt_rss_add_chunk = qemu.kvm.net_rx_pkt_rss_add_chunk ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 918, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), ptr, size, input_offset)
}
probe qemu.kvm.simpletrace.e1000x_rx_can_recv_disabled = qemu.kvm.e1000x_rx_can_recv_disabled ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 919, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), link_up, rx_enabled, pci_master)
}
probe qemu.kvm.simpletrace.e1000x_vlan_is_vlan_pkt = qemu.kvm.e1000x_vlan_is_vlan_pkt ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 920, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), is_vlan_pkt, eth_proto, vet)
}
probe qemu.kvm.simpletrace.e1000x_rx_flt_ucast_match = qemu.kvm.e1000x_rx_flt_ucast_match ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b", 1, 921, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), idx, b0, b1, b2, b3, b4, b5)
}
probe qemu.kvm.simpletrace.e1000x_rx_flt_ucast_mismatch = qemu.kvm.e1000x_rx_flt_ucast_mismatch ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 922, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), b0, b1, b2, b3, b4, b5)
}
probe qemu.kvm.simpletrace.e1000x_rx_flt_inexact_mismatch = qemu.kvm.e1000x_rx_flt_inexact_mismatch ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b%8b%8b", 1, 923, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), b0, b1, b2, b3, b4, b5, mo, mta, mta_val)
}
probe qemu.kvm.simpletrace.e1000x_rx_link_down = qemu.kvm.e1000x_rx_link_down ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 924, gettimeofday_ns(), 24 + 8, pid(), status_reg)
}
probe qemu.kvm.simpletrace.e1000x_rx_disabled = qemu.kvm.e1000x_rx_disabled ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 925, gettimeofday_ns(), 24 + 8, pid(), rctl_reg)
}
probe qemu.kvm.simpletrace.e1000x_rx_oversized = qemu.kvm.e1000x_rx_oversized ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 926, gettimeofday_ns(), 24 + 8, pid(), size)
}
probe qemu.kvm.simpletrace.e1000x_mac_indicate = qemu.kvm.e1000x_mac_indicate ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 927, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), b0, b1, b2, b3, b4, b5)
}
probe qemu.kvm.simpletrace.e1000x_link_negotiation_start = qemu.kvm.e1000x_link_negotiation_start ?
{
    printf("%8b%8b%8b%4b%4b", 1, 928, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000x_link_negotiation_done = qemu.kvm.e1000x_link_negotiation_done ?
{
    printf("%8b%8b%8b%4b%4b", 1, 929, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_core_write = qemu.kvm.e1000e_core_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 930, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), index, size, val)
}
probe qemu.kvm.simpletrace.e1000e_core_read = qemu.kvm.e1000e_core_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 931, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), index, size, val)
}
probe qemu.kvm.simpletrace.e1000e_core_mdic_read = qemu.kvm.e1000e_core_mdic_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 932, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), page, addr, data)
}
probe qemu.kvm.simpletrace.e1000e_core_mdic_read_unhandled = qemu.kvm.e1000e_core_mdic_read_unhandled ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 933, gettimeofday_ns(), 24 + 8 + 8, pid(), page, addr)
}
probe qemu.kvm.simpletrace.e1000e_core_mdic_write = qemu.kvm.e1000e_core_mdic_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 934, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), page, addr, data)
}
probe qemu.kvm.simpletrace.e1000e_core_mdic_write_unhandled = qemu.kvm.e1000e_core_mdic_write_unhandled ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 935, gettimeofday_ns(), 24 + 8 + 8, pid(), page, addr)
}
probe qemu.kvm.simpletrace.e1000e_core_ctrl_write = qemu.kvm.e1000e_core_ctrl_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 936, gettimeofday_ns(), 24 + 8 + 8, pid(), index, val)
}
probe qemu.kvm.simpletrace.e1000e_core_ctrl_sw_reset = qemu.kvm.e1000e_core_ctrl_sw_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 937, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_core_ctrl_phy_reset = qemu.kvm.e1000e_core_ctrl_phy_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 938, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_link_autoneg_flowctl = qemu.kvm.e1000e_link_autoneg_flowctl ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 939, gettimeofday_ns(), 24 + 8, pid(), enabled)
}
probe qemu.kvm.simpletrace.e1000e_link_set_params = qemu.kvm.e1000e_link_set_params ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 940, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), autodetect, speed, force_spd, force_dplx, rx_fctl, tx_fctl)
}
probe qemu.kvm.simpletrace.e1000e_link_read_params = qemu.kvm.e1000e_link_read_params ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 941, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), autodetect, speed, force_spd, force_dplx, rx_fctl, tx_fctl)
}
probe qemu.kvm.simpletrace.e1000e_link_set_ext_params = qemu.kvm.e1000e_link_set_ext_params ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 942, gettimeofday_ns(), 24 + 8 + 8, pid(), asd_check, speed_select_bypass)
}
probe qemu.kvm.simpletrace.e1000e_link_status = qemu.kvm.e1000e_link_status ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 943, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), link_up, full_dplx, speed, asdv)
}
probe qemu.kvm.simpletrace.e1000e_link_status_changed = qemu.kvm.e1000e_link_status_changed ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 944, gettimeofday_ns(), 24 + 8, pid(), status)
}
probe qemu.kvm.simpletrace.e1000e_wrn_regs_write_ro = qemu.kvm.e1000e_wrn_regs_write_ro ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 945, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), index, size, val)
}
probe qemu.kvm.simpletrace.e1000e_wrn_regs_write_unknown = qemu.kvm.e1000e_wrn_regs_write_unknown ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 946, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), index, size, val)
}
probe qemu.kvm.simpletrace.e1000e_wrn_regs_read_unknown = qemu.kvm.e1000e_wrn_regs_read_unknown ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 947, gettimeofday_ns(), 24 + 8 + 8, pid(), index, size)
}
probe qemu.kvm.simpletrace.e1000e_wrn_regs_read_trivial = qemu.kvm.e1000e_wrn_regs_read_trivial ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 948, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.e1000e_wrn_regs_write_trivial = qemu.kvm.e1000e_wrn_regs_write_trivial ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 949, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.e1000e_wrn_no_ts_support = qemu.kvm.e1000e_wrn_no_ts_support ?
{
    printf("%8b%8b%8b%4b%4b", 1, 950, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_wrn_no_snap_support = qemu.kvm.e1000e_wrn_no_snap_support ?
{
    printf("%8b%8b%8b%4b%4b", 1, 951, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_wrn_iscsi_filtering_not_supported = qemu.kvm.e1000e_wrn_iscsi_filtering_not_supported ?
{
    printf("%8b%8b%8b%4b%4b", 1, 952, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_wrn_nfsw_filtering_not_supported = qemu.kvm.e1000e_wrn_nfsw_filtering_not_supported ?
{
    printf("%8b%8b%8b%4b%4b", 1, 953, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_wrn_nfsr_filtering_not_supported = qemu.kvm.e1000e_wrn_nfsr_filtering_not_supported ?
{
    printf("%8b%8b%8b%4b%4b", 1, 954, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_tx_disabled = qemu.kvm.e1000e_tx_disabled ?
{
    printf("%8b%8b%8b%4b%4b", 1, 955, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_tx_descr = qemu.kvm.e1000e_tx_descr ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 956, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, lower, upper)
}
probe qemu.kvm.simpletrace.e1000e_ring_free_space = qemu.kvm.e1000e_ring_free_space ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 957, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), ridx, rdlen, rdh, rdt)
}
probe qemu.kvm.simpletrace.e1000e_rx_can_recv_rings_full = qemu.kvm.e1000e_rx_can_recv_rings_full ?
{
    printf("%8b%8b%8b%4b%4b", 1, 958, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_rx_can_recv = qemu.kvm.e1000e_rx_can_recv ?
{
    printf("%8b%8b%8b%4b%4b", 1, 959, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_rx_has_buffers = qemu.kvm.e1000e_rx_has_buffers ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 960, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), ridx, free_desc, total_size, desc_buf_size)
}
probe qemu.kvm.simpletrace.e1000e_rx_null_descriptor = qemu.kvm.e1000e_rx_null_descriptor ?
{
    printf("%8b%8b%8b%4b%4b", 1, 961, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_rx_flt_vlan_mismatch = qemu.kvm.e1000e_rx_flt_vlan_mismatch ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 962, gettimeofday_ns(), 24 + 8, pid(), vid)
}
probe qemu.kvm.simpletrace.e1000e_rx_flt_vlan_match = qemu.kvm.e1000e_rx_flt_vlan_match ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 963, gettimeofday_ns(), 24 + 8, pid(), vid)
}
probe qemu.kvm.simpletrace.e1000e_rx_desc_ps_read = qemu.kvm.e1000e_rx_desc_ps_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 964, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), a0, a1, a2, a3)
}
probe qemu.kvm.simpletrace.e1000e_rx_desc_ps_write = qemu.kvm.e1000e_rx_desc_ps_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 965, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), a0, a1, a2, a3)
}
probe qemu.kvm.simpletrace.e1000e_rx_desc_buff_sizes = qemu.kvm.e1000e_rx_desc_buff_sizes ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 966, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), b0, b1, b2, b3)
}
probe qemu.kvm.simpletrace.e1000e_rx_desc_len = qemu.kvm.e1000e_rx_desc_len ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 967, gettimeofday_ns(), 24 + 8, pid(), rx_desc_len)
}
probe qemu.kvm.simpletrace.e1000e_rx_desc_buff_write = qemu.kvm.e1000e_rx_desc_buff_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 968, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), idx, addr, offset, source, len)
}
probe qemu.kvm.simpletrace.e1000e_rx_descr = qemu.kvm.e1000e_rx_descr ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 969, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), ridx, base, len)
}
probe qemu.kvm.simpletrace.e1000e_rx_set_rctl = qemu.kvm.e1000e_rx_set_rctl ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 970, gettimeofday_ns(), 24 + 8, pid(), rctl)
}
probe qemu.kvm.simpletrace.e1000e_rx_receive_iov = qemu.kvm.e1000e_rx_receive_iov ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 971, gettimeofday_ns(), 24 + 8, pid(), iovcnt)
}
probe qemu.kvm.simpletrace.e1000e_rx_flt_dropped = qemu.kvm.e1000e_rx_flt_dropped ?
{
    printf("%8b%8b%8b%4b%4b", 1, 972, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_rx_written_to_guest = qemu.kvm.e1000e_rx_written_to_guest ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 973, gettimeofday_ns(), 24 + 8, pid(), causes)
}
probe qemu.kvm.simpletrace.e1000e_rx_not_written_to_guest = qemu.kvm.e1000e_rx_not_written_to_guest ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 974, gettimeofday_ns(), 24 + 8, pid(), causes)
}
probe qemu.kvm.simpletrace.e1000e_rx_interrupt_set = qemu.kvm.e1000e_rx_interrupt_set ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 975, gettimeofday_ns(), 24 + 8, pid(), causes)
}
probe qemu.kvm.simpletrace.e1000e_rx_interrupt_delayed = qemu.kvm.e1000e_rx_interrupt_delayed ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 976, gettimeofday_ns(), 24 + 8, pid(), causes)
}
probe qemu.kvm.simpletrace.e1000e_rx_set_cso = qemu.kvm.e1000e_rx_set_cso ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 977, gettimeofday_ns(), 24 + 8, pid(), cso_state)
}
probe qemu.kvm.simpletrace.e1000e_rx_set_rdt = qemu.kvm.e1000e_rx_set_rdt ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 978, gettimeofday_ns(), 24 + 8 + 8, pid(), queue_idx, val)
}
probe qemu.kvm.simpletrace.e1000e_rx_set_rfctl = qemu.kvm.e1000e_rx_set_rfctl ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 979, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.e1000e_rx_start_recv = qemu.kvm.e1000e_rx_start_recv ?
{
    printf("%8b%8b%8b%4b%4b", 1, 980, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_rx_rss_started = qemu.kvm.e1000e_rx_rss_started ?
{
    printf("%8b%8b%8b%4b%4b", 1, 981, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_rx_rss_disabled = qemu.kvm.e1000e_rx_rss_disabled ?
{
    printf("%8b%8b%8b%4b%4b", 1, 982, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_rx_rss_type = qemu.kvm.e1000e_rx_rss_type ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 983, gettimeofday_ns(), 24 + 8, pid(), type)
}
probe qemu.kvm.simpletrace.e1000e_rx_rss_ip4 = qemu.kvm.e1000e_rx_rss_ip4 ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 984, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), isfragment, istcp, mrqc, tcpipv4_enabled, ipv4_enabled)
}
probe qemu.kvm.simpletrace.e1000e_rx_rss_ip6_rfctl = qemu.kvm.e1000e_rx_rss_ip6_rfctl ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 985, gettimeofday_ns(), 24 + 8, pid(), rfctl)
}
probe qemu.kvm.simpletrace.e1000e_rx_rss_ip6 = qemu.kvm.e1000e_rx_rss_ip6 ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b%8b%8b%8b", 1, 986, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), ex_dis, new_ex_dis, istcp, has_ext_headers, ex_dst_valid, ex_src_valid, mrqc, tcpipv6_enabled, ipv6ex_enabled, ipv6_enabled)
}
probe qemu.kvm.simpletrace.e1000e_rx_rss_dispatched_to_queue = qemu.kvm.e1000e_rx_rss_dispatched_to_queue ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 987, gettimeofday_ns(), 24 + 8, pid(), queue_idx)
}
probe qemu.kvm.simpletrace.e1000e_rx_metadata_protocols = qemu.kvm.e1000e_rx_metadata_protocols ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 988, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), isip4, isip6, isudp, istcp)
}
probe qemu.kvm.simpletrace.e1000e_rx_metadata_vlan = qemu.kvm.e1000e_rx_metadata_vlan ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 989, gettimeofday_ns(), 24 + 8, pid(), vlan_tag)
}
probe qemu.kvm.simpletrace.e1000e_rx_metadata_rss = qemu.kvm.e1000e_rx_metadata_rss ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 990, gettimeofday_ns(), 24 + 8 + 8, pid(), rss, mrq)
}
probe qemu.kvm.simpletrace.e1000e_rx_metadata_ip_id = qemu.kvm.e1000e_rx_metadata_ip_id ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 991, gettimeofday_ns(), 24 + 8, pid(), ip_id)
}
probe qemu.kvm.simpletrace.e1000e_rx_metadata_ack = qemu.kvm.e1000e_rx_metadata_ack ?
{
    printf("%8b%8b%8b%4b%4b", 1, 992, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_rx_metadata_pkt_type = qemu.kvm.e1000e_rx_metadata_pkt_type ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 993, gettimeofday_ns(), 24 + 8, pid(), pkt_type)
}
probe qemu.kvm.simpletrace.e1000e_rx_metadata_no_virthdr = qemu.kvm.e1000e_rx_metadata_no_virthdr ?
{
    printf("%8b%8b%8b%4b%4b", 1, 994, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_rx_metadata_virthdr_no_csum_info = qemu.kvm.e1000e_rx_metadata_virthdr_no_csum_info ?
{
    printf("%8b%8b%8b%4b%4b", 1, 995, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_rx_metadata_l3_cso_disabled = qemu.kvm.e1000e_rx_metadata_l3_cso_disabled ?
{
    printf("%8b%8b%8b%4b%4b", 1, 996, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_rx_metadata_l4_cso_disabled = qemu.kvm.e1000e_rx_metadata_l4_cso_disabled ?
{
    printf("%8b%8b%8b%4b%4b", 1, 997, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_rx_metadata_l3_csum_validation_failed = qemu.kvm.e1000e_rx_metadata_l3_csum_validation_failed ?
{
    printf("%8b%8b%8b%4b%4b", 1, 998, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_rx_metadata_l4_csum_validation_failed = qemu.kvm.e1000e_rx_metadata_l4_csum_validation_failed ?
{
    printf("%8b%8b%8b%4b%4b", 1, 999, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_rx_metadata_status_flags = qemu.kvm.e1000e_rx_metadata_status_flags ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1000, gettimeofday_ns(), 24 + 8, pid(), status_flags)
}
probe qemu.kvm.simpletrace.e1000e_rx_metadata_ipv6_sum_disabled = qemu.kvm.e1000e_rx_metadata_ipv6_sum_disabled ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1001, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_rx_metadata_ipv6_filtering_disabled = qemu.kvm.e1000e_rx_metadata_ipv6_filtering_disabled ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1002, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_vlan_vet = qemu.kvm.e1000e_vlan_vet ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1003, gettimeofday_ns(), 24 + 8, pid(), vet)
}
probe qemu.kvm.simpletrace.e1000e_irq_msi_notify = qemu.kvm.e1000e_irq_msi_notify ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1004, gettimeofday_ns(), 24 + 8, pid(), cause)
}
probe qemu.kvm.simpletrace.e1000e_irq_throttling_no_pending_interrupts = qemu.kvm.e1000e_irq_throttling_no_pending_interrupts ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1005, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_irq_msi_notify_postponed = qemu.kvm.e1000e_irq_msi_notify_postponed ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1006, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_irq_legacy_notify_postponed = qemu.kvm.e1000e_irq_legacy_notify_postponed ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1007, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_irq_throttling_no_pending_vec = qemu.kvm.e1000e_irq_throttling_no_pending_vec ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1008, gettimeofday_ns(), 24 + 8, pid(), idx)
}
probe qemu.kvm.simpletrace.e1000e_irq_msix_notify_postponed_vec = qemu.kvm.e1000e_irq_msix_notify_postponed_vec ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1009, gettimeofday_ns(), 24 + 8, pid(), idx)
}
probe qemu.kvm.simpletrace.e1000e_irq_legacy_notify = qemu.kvm.e1000e_irq_legacy_notify ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1010, gettimeofday_ns(), 24 + 8, pid(), level)
}
probe qemu.kvm.simpletrace.e1000e_irq_msix_notify_vec = qemu.kvm.e1000e_irq_msix_notify_vec ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1011, gettimeofday_ns(), 24 + 8, pid(), vector)
}
probe qemu.kvm.simpletrace.e1000e_irq_postponed_by_xitr = qemu.kvm.e1000e_irq_postponed_by_xitr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1012, gettimeofday_ns(), 24 + 8, pid(), reg)
}
probe qemu.kvm.simpletrace.e1000e_irq_clear_ims = qemu.kvm.e1000e_irq_clear_ims ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1013, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bits, old_ims, new_ims)
}
probe qemu.kvm.simpletrace.e1000e_irq_set_ims = qemu.kvm.e1000e_irq_set_ims ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1014, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bits, old_ims, new_ims)
}
probe qemu.kvm.simpletrace.e1000e_irq_fix_icr_asserted = qemu.kvm.e1000e_irq_fix_icr_asserted ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1015, gettimeofday_ns(), 24 + 8, pid(), new_val)
}
probe qemu.kvm.simpletrace.e1000e_irq_add_msi_other = qemu.kvm.e1000e_irq_add_msi_other ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1016, gettimeofday_ns(), 24 + 8, pid(), new_val)
}
probe qemu.kvm.simpletrace.e1000e_irq_pending_interrupts = qemu.kvm.e1000e_irq_pending_interrupts ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1017, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), pending, icr, ims)
}
probe qemu.kvm.simpletrace.e1000e_irq_set_cause_entry = qemu.kvm.e1000e_irq_set_cause_entry ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1018, gettimeofday_ns(), 24 + 8 + 8, pid(), val, icr)
}
probe qemu.kvm.simpletrace.e1000e_irq_set_cause_exit = qemu.kvm.e1000e_irq_set_cause_exit ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1019, gettimeofday_ns(), 24 + 8 + 8, pid(), val, icr)
}
probe qemu.kvm.simpletrace.e1000e_irq_icr_write = qemu.kvm.e1000e_irq_icr_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1020, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bits, old_icr, new_icr)
}
probe qemu.kvm.simpletrace.e1000e_irq_write_ics = qemu.kvm.e1000e_irq_write_ics ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1021, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.e1000e_irq_icr_process_iame = qemu.kvm.e1000e_irq_icr_process_iame ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1022, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_irq_read_ics = qemu.kvm.e1000e_irq_read_ics ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1023, gettimeofday_ns(), 24 + 8, pid(), ics)
}
probe qemu.kvm.simpletrace.e1000e_irq_read_ims = qemu.kvm.e1000e_irq_read_ims ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1024, gettimeofday_ns(), 24 + 8, pid(), ims)
}
probe qemu.kvm.simpletrace.e1000e_irq_icr_read_entry = qemu.kvm.e1000e_irq_icr_read_entry ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1025, gettimeofday_ns(), 24 + 8, pid(), icr)
}
probe qemu.kvm.simpletrace.e1000e_irq_icr_read_exit = qemu.kvm.e1000e_irq_icr_read_exit ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1026, gettimeofday_ns(), 24 + 8, pid(), icr)
}
probe qemu.kvm.simpletrace.e1000e_irq_icr_clear_zero_ims = qemu.kvm.e1000e_irq_icr_clear_zero_ims ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1027, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_irq_icr_clear_iame = qemu.kvm.e1000e_irq_icr_clear_iame ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1028, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_irq_iam_clear_eiame = qemu.kvm.e1000e_irq_iam_clear_eiame ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1029, gettimeofday_ns(), 24 + 8 + 8, pid(), iam, cause)
}
probe qemu.kvm.simpletrace.e1000e_irq_icr_clear_eiac = qemu.kvm.e1000e_irq_icr_clear_eiac ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1030, gettimeofday_ns(), 24 + 8 + 8, pid(), icr, eiac)
}
probe qemu.kvm.simpletrace.e1000e_irq_ims_clear_set_imc = qemu.kvm.e1000e_irq_ims_clear_set_imc ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1031, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.e1000e_irq_fire_delayed_interrupts = qemu.kvm.e1000e_irq_fire_delayed_interrupts ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1032, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_irq_rearm_timer = qemu.kvm.e1000e_irq_rearm_timer ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1033, gettimeofday_ns(), 24 + 8 + 8, pid(), reg, delay_ns)
}
probe qemu.kvm.simpletrace.e1000e_irq_throttling_timer = qemu.kvm.e1000e_irq_throttling_timer ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1034, gettimeofday_ns(), 24 + 8, pid(), reg)
}
probe qemu.kvm.simpletrace.e1000e_irq_rdtr_fpd_running = qemu.kvm.e1000e_irq_rdtr_fpd_running ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1035, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_irq_rdtr_fpd_not_running = qemu.kvm.e1000e_irq_rdtr_fpd_not_running ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1036, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_irq_tidv_fpd_running = qemu.kvm.e1000e_irq_tidv_fpd_running ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1037, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_irq_tidv_fpd_not_running = qemu.kvm.e1000e_irq_tidv_fpd_not_running ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1038, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_irq_eitr_set = qemu.kvm.e1000e_irq_eitr_set ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1039, gettimeofday_ns(), 24 + 8 + 8, pid(), eitr_num, val)
}
probe qemu.kvm.simpletrace.e1000e_irq_itr_set = qemu.kvm.e1000e_irq_itr_set ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1040, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.e1000e_irq_fire_all_timers = qemu.kvm.e1000e_irq_fire_all_timers ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1041, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.e1000e_irq_adding_delayed_causes = qemu.kvm.e1000e_irq_adding_delayed_causes ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1042, gettimeofday_ns(), 24 + 8 + 8, pid(), val, icr)
}
probe qemu.kvm.simpletrace.e1000e_irq_msix_pending_clearing = qemu.kvm.e1000e_irq_msix_pending_clearing ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1043, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cause, int_cfg, vec)
}
probe qemu.kvm.simpletrace.e1000e_wrn_msix_vec_wrong = qemu.kvm.e1000e_wrn_msix_vec_wrong ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1044, gettimeofday_ns(), 24 + 8 + 8, pid(), cause, cfg)
}
probe qemu.kvm.simpletrace.e1000e_wrn_msix_invalid = qemu.kvm.e1000e_wrn_msix_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1045, gettimeofday_ns(), 24 + 8 + 8, pid(), cause, cfg)
}
probe qemu.kvm.simpletrace.e1000e_mac_set_permanent = qemu.kvm.e1000e_mac_set_permanent ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1046, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), b0, b1, b2, b3, b4, b5)
}
probe qemu.kvm.simpletrace.e1000e_mac_set_sw = qemu.kvm.e1000e_mac_set_sw ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1047, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), b0, b1, b2, b3, b4, b5)
}
probe qemu.kvm.simpletrace.e1000e_cb_pci_realize = qemu.kvm.e1000e_cb_pci_realize ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1048, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_cb_pci_uninit = qemu.kvm.e1000e_cb_pci_uninit ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1049, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_cb_qdev_reset = qemu.kvm.e1000e_cb_qdev_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1050, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_cb_pre_save = qemu.kvm.e1000e_cb_pre_save ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1051, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_cb_post_load = qemu.kvm.e1000e_cb_post_load ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1052, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_io_write_addr = qemu.kvm.e1000e_io_write_addr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1053, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.e1000e_io_write_data = qemu.kvm.e1000e_io_write_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1054, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.e1000e_io_read_addr = qemu.kvm.e1000e_io_read_addr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1055, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.e1000e_io_read_data = qemu.kvm.e1000e_io_read_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1056, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.e1000e_wrn_io_write_unknown = qemu.kvm.e1000e_wrn_io_write_unknown ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1057, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.e1000e_wrn_io_read_unknown = qemu.kvm.e1000e_wrn_io_read_unknown ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1058, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.e1000e_wrn_io_addr_undefined = qemu.kvm.e1000e_wrn_io_addr_undefined ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1059, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.e1000e_wrn_io_addr_flash = qemu.kvm.e1000e_wrn_io_addr_flash ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1060, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.e1000e_wrn_io_addr_unknown = qemu.kvm.e1000e_wrn_io_addr_unknown ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1061, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.e1000e_msi_init_fail = qemu.kvm.e1000e_msi_init_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1062, gettimeofday_ns(), 24 + 8, pid(), res)
}
probe qemu.kvm.simpletrace.e1000e_msix_init_fail = qemu.kvm.e1000e_msix_init_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1063, gettimeofday_ns(), 24 + 8, pid(), res)
}
probe qemu.kvm.simpletrace.e1000e_msix_use_vector_fail = qemu.kvm.e1000e_msix_use_vector_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1064, gettimeofday_ns(), 24 + 8 + 8, pid(), vec, res)
}
probe qemu.kvm.simpletrace.e1000e_cfg_support_virtio = qemu.kvm.e1000e_cfg_support_virtio ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1065, gettimeofday_ns(), 24 + 8, pid(), support)
}
probe qemu.kvm.simpletrace.e1000e_vm_state_running = qemu.kvm.e1000e_vm_state_running ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1066, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.e1000e_vm_state_stopped = qemu.kvm.e1000e_vm_state_stopped ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1067, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.spapr_vlan_get_rx_bd_from_pool_found = qemu.kvm.spapr_vlan_get_rx_bd_from_pool_found ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1068, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), pool, count, rx_bufs)
}
probe qemu.kvm.simpletrace.spapr_vlan_get_rx_bd_from_page = qemu.kvm.spapr_vlan_get_rx_bd_from_page ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1069, gettimeofday_ns(), 24 + 8 + 8, pid(), buf_ptr, bd)
}
probe qemu.kvm.simpletrace.spapr_vlan_get_rx_bd_from_page_found = qemu.kvm.spapr_vlan_get_rx_bd_from_page_found ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1070, gettimeofday_ns(), 24 + 8 + 8, pid(), use_buf_ptr, rx_bufs)
}
probe qemu.kvm.simpletrace.spapr_vlan_receive = qemu.kvm.spapr_vlan_receive ?
{
    try {
        argid_str = id ? user_string_n(id, 512) : "<null>"
    } catch {}
    argid_len = strlen(argid_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 1071, gettimeofday_ns(), 24 + 4 + argid_len + 8, pid(), argid_len, argid_len, argid_str, rx_bufs)
}
probe qemu.kvm.simpletrace.spapr_vlan_receive_dma_completed = qemu.kvm.spapr_vlan_receive_dma_completed ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1072, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.spapr_vlan_receive_wrote = qemu.kvm.spapr_vlan_receive_wrote ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1073, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), ptr, hi, lo)
}
probe qemu.kvm.simpletrace.spapr_vlan_add_rxbuf_to_pool_create = qemu.kvm.spapr_vlan_add_rxbuf_to_pool_create ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1074, gettimeofday_ns(), 24 + 8 + 8, pid(), pool, len)
}
probe qemu.kvm.simpletrace.spapr_vlan_add_rxbuf_to_pool = qemu.kvm.spapr_vlan_add_rxbuf_to_pool ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1075, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), pool, len, count)
}
probe qemu.kvm.simpletrace.spapr_vlan_add_rxbuf_to_page = qemu.kvm.spapr_vlan_add_rxbuf_to_page ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1076, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), ptr, rx_bufs, bd)
}
probe qemu.kvm.simpletrace.spapr_vlan_h_add_logical_lan_buffer = qemu.kvm.spapr_vlan_h_add_logical_lan_buffer ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1077, gettimeofday_ns(), 24 + 8 + 8, pid(), reg, buf)
}
probe qemu.kvm.simpletrace.spapr_vlan_h_send_logical_lan = qemu.kvm.spapr_vlan_h_send_logical_lan ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1078, gettimeofday_ns(), 24 + 8 + 8, pid(), reg, continue_token)
}
probe qemu.kvm.simpletrace.spapr_vlan_h_send_logical_lan_rxbufs = qemu.kvm.spapr_vlan_h_send_logical_lan_rxbufs ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1079, gettimeofday_ns(), 24 + 8, pid(), rx_bufs)
}
probe qemu.kvm.simpletrace.spapr_vlan_h_send_logical_lan_buf_desc = qemu.kvm.spapr_vlan_h_send_logical_lan_buf_desc ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1080, gettimeofday_ns(), 24 + 8, pid(), buf)
}
probe qemu.kvm.simpletrace.spapr_vlan_h_send_logical_lan_total = qemu.kvm.spapr_vlan_h_send_logical_lan_total ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1081, gettimeofday_ns(), 24 + 8 + 8, pid(), nbufs, total_len)
}
probe qemu.kvm.simpletrace.sungem_tx_checksum = qemu.kvm.sungem_tx_checksum ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1082, gettimeofday_ns(), 24 + 8 + 8, pid(), start, off)
}
probe qemu.kvm.simpletrace.sungem_tx_checksum_oob = qemu.kvm.sungem_tx_checksum_oob ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1083, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sungem_tx_unfinished = qemu.kvm.sungem_tx_unfinished ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1084, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sungem_tx_overflow = qemu.kvm.sungem_tx_overflow ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1085, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sungem_tx_finished = qemu.kvm.sungem_tx_finished ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1086, gettimeofday_ns(), 24 + 8, pid(), size)
}
probe qemu.kvm.simpletrace.sungem_tx_kick = qemu.kvm.sungem_tx_kick ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1087, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sungem_tx_disabled = qemu.kvm.sungem_tx_disabled ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1088, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sungem_tx_process = qemu.kvm.sungem_tx_process ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1089, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), comp, kick, size)
}
probe qemu.kvm.simpletrace.sungem_tx_desc = qemu.kvm.sungem_tx_desc ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1090, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), comp, control, buffer)
}
probe qemu.kvm.simpletrace.sungem_tx_reset = qemu.kvm.sungem_tx_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1091, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sungem_rx_mac_disabled = qemu.kvm.sungem_rx_mac_disabled ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1092, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sungem_rx_txdma_disabled = qemu.kvm.sungem_rx_txdma_disabled ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1093, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sungem_rx_check = qemu.kvm.sungem_rx_check ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1094, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), full, kick, done)
}
probe qemu.kvm.simpletrace.sungem_rx_mac_check = qemu.kvm.sungem_rx_mac_check ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1095, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), mac0, mac1, mac2)
}
probe qemu.kvm.simpletrace.sungem_rx_mac_multicast = qemu.kvm.sungem_rx_mac_multicast ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1096, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sungem_rx_mac_compare = qemu.kvm.sungem_rx_mac_compare ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1097, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), mac0, mac1, mac2)
}
probe qemu.kvm.simpletrace.sungem_rx_packet = qemu.kvm.sungem_rx_packet ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1098, gettimeofday_ns(), 24 + 8, pid(), size)
}
probe qemu.kvm.simpletrace.sungem_rx_disabled = qemu.kvm.sungem_rx_disabled ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1099, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sungem_rx_bad_frame_size = qemu.kvm.sungem_rx_bad_frame_size ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1100, gettimeofday_ns(), 24 + 8, pid(), size)
}
probe qemu.kvm.simpletrace.sungem_rx_unmatched = qemu.kvm.sungem_rx_unmatched ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1101, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sungem_rx_process = qemu.kvm.sungem_rx_process ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1102, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), done, kick, size)
}
probe qemu.kvm.simpletrace.sungem_rx_ringfull = qemu.kvm.sungem_rx_ringfull ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1103, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sungem_rx_desc = qemu.kvm.sungem_rx_desc ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1104, gettimeofday_ns(), 24 + 8 + 8, pid(), control, buffer)
}
probe qemu.kvm.simpletrace.sungem_rx_reset = qemu.kvm.sungem_rx_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1105, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sungem_rx_kick = qemu.kvm.sungem_rx_kick ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1106, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.sungem_reset = qemu.kvm.sungem_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1107, gettimeofday_ns(), 24 + 8, pid(), pci_reset)
}
probe qemu.kvm.simpletrace.sungem_mii_write = qemu.kvm.sungem_mii_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1108, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), phy_addr, reg_addr, val)
}
probe qemu.kvm.simpletrace.sungem_mii_read = qemu.kvm.sungem_mii_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1109, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), phy_addr, reg_addr, val)
}
probe qemu.kvm.simpletrace.sungem_mii_invalid_sof = qemu.kvm.sungem_mii_invalid_sof ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1110, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.sungem_mii_invalid_op = qemu.kvm.sungem_mii_invalid_op ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1111, gettimeofday_ns(), 24 + 8, pid(), op)
}
probe qemu.kvm.simpletrace.sungem_mmio_greg_write = qemu.kvm.sungem_mmio_greg_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1112, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sungem_mmio_greg_read = qemu.kvm.sungem_mmio_greg_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1113, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sungem_mmio_txdma_write = qemu.kvm.sungem_mmio_txdma_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1114, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sungem_mmio_txdma_read = qemu.kvm.sungem_mmio_txdma_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1115, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sungem_mmio_rxdma_write = qemu.kvm.sungem_mmio_rxdma_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1116, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sungem_mmio_rxdma_read = qemu.kvm.sungem_mmio_rxdma_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1117, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sungem_mmio_mac_write = qemu.kvm.sungem_mmio_mac_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1118, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sungem_mmio_mac_read = qemu.kvm.sungem_mmio_mac_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1119, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sungem_mmio_mif_write = qemu.kvm.sungem_mmio_mif_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1120, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sungem_mmio_mif_read = qemu.kvm.sungem_mmio_mif_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1121, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sungem_mmio_pcs_write = qemu.kvm.sungem_mmio_pcs_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1122, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sungem_mmio_pcs_read = qemu.kvm.sungem_mmio_pcs_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1123, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sunhme_seb_write = qemu.kvm.sunhme_seb_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1124, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.sunhme_seb_read = qemu.kvm.sunhme_seb_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1125, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.sunhme_etx_write = qemu.kvm.sunhme_etx_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1126, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.sunhme_etx_read = qemu.kvm.sunhme_etx_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1127, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.sunhme_erx_write = qemu.kvm.sunhme_erx_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1128, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.sunhme_erx_read = qemu.kvm.sunhme_erx_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1129, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.sunhme_mac_write = qemu.kvm.sunhme_mac_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1130, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.sunhme_mac_read = qemu.kvm.sunhme_mac_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1131, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.sunhme_mii_write = qemu.kvm.sunhme_mii_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1132, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.sunhme_mii_read = qemu.kvm.sunhme_mii_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1133, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.sunhme_mif_write = qemu.kvm.sunhme_mif_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1134, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.sunhme_mif_read = qemu.kvm.sunhme_mif_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1135, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.sunhme_tx_desc = qemu.kvm.sunhme_tx_desc ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1136, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), buffer, status, cr, nr)
}
probe qemu.kvm.simpletrace.sunhme_tx_xsum_add = qemu.kvm.sunhme_tx_xsum_add ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1137, gettimeofday_ns(), 24 + 8 + 8, pid(), offset, len)
}
probe qemu.kvm.simpletrace.sunhme_tx_xsum_stuff = qemu.kvm.sunhme_tx_xsum_stuff ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1138, gettimeofday_ns(), 24 + 8 + 8, pid(), xsum, offset)
}
probe qemu.kvm.simpletrace.sunhme_tx_done = qemu.kvm.sunhme_tx_done ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1139, gettimeofday_ns(), 24 + 8, pid(), len)
}
probe qemu.kvm.simpletrace.sunhme_rx_incoming = qemu.kvm.sunhme_rx_incoming ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1140, gettimeofday_ns(), 24 + 8, pid(), len)
}
probe qemu.kvm.simpletrace.sunhme_rx_filter_destmac = qemu.kvm.sunhme_rx_filter_destmac ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1141, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), b0, b1, b2, b3, b4, b5)
}
probe qemu.kvm.simpletrace.sunhme_rx_filter_local_match = qemu.kvm.sunhme_rx_filter_local_match ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1142, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sunhme_rx_filter_bcast_match = qemu.kvm.sunhme_rx_filter_bcast_match ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1143, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sunhme_rx_filter_hash_nomatch = qemu.kvm.sunhme_rx_filter_hash_nomatch ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1144, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sunhme_rx_filter_hash_match = qemu.kvm.sunhme_rx_filter_hash_match ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1145, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sunhme_rx_filter_promisc_match = qemu.kvm.sunhme_rx_filter_promisc_match ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1146, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sunhme_rx_filter_reject = qemu.kvm.sunhme_rx_filter_reject ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1147, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sunhme_rx_filter_accept = qemu.kvm.sunhme_rx_filter_accept ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1148, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sunhme_rx_desc = qemu.kvm.sunhme_rx_desc ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1149, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), addr, offset, status, len, cr, nr)
}
probe qemu.kvm.simpletrace.sunhme_rx_xsum_calc = qemu.kvm.sunhme_rx_xsum_calc ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1150, gettimeofday_ns(), 24 + 8, pid(), xsum)
}
probe qemu.kvm.simpletrace.create_ah_cache_hit = qemu.kvm.create_ah_cache_hit ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1151, gettimeofday_ns(), 24 + 8 + 8, pid(), subnet, net_id)
}
probe qemu.kvm.simpletrace.create_ah_cache_miss = qemu.kvm.create_ah_cache_miss ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1152, gettimeofday_ns(), 24 + 8 + 8, pid(), subnet, net_id)
}
probe qemu.kvm.simpletrace.pvrdma_regs_read = qemu.kvm.pvrdma_regs_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1153, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.pvrdma_regs_write = qemu.kvm.pvrdma_regs_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1154, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.vhost_commit = qemu.kvm.vhost_commit ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1155, gettimeofday_ns(), 24 + 8 + 8, pid(), started, changed)
}
probe qemu.kvm.simpletrace.vhost_region_add_section = qemu.kvm.vhost_region_add_section ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 1156, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, gpa, size, host)
}
probe qemu.kvm.simpletrace.vhost_region_add_section_merge = qemu.kvm.vhost_region_add_section_merge ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 1157, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, new_size, gpa, owr)
}
probe qemu.kvm.simpletrace.vhost_region_add_section_aligned = qemu.kvm.vhost_region_add_section_aligned ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 1158, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, gpa, size, host)
}
probe qemu.kvm.simpletrace.vhost_section = qemu.kvm.vhost_section ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 1159, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, r)
}
probe qemu.kvm.simpletrace.vhost_user_postcopy_end_entry = qemu.kvm.vhost_user_postcopy_end_entry ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1160, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.vhost_user_postcopy_end_exit = qemu.kvm.vhost_user_postcopy_end_exit ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1161, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.vhost_user_postcopy_fault_handler = qemu.kvm.vhost_user_postcopy_fault_handler ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 1162, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8, pid(), argname_len, argname_len, argname_str, fault_address, nregions)
}
probe qemu.kvm.simpletrace.vhost_user_postcopy_fault_handler_loop = qemu.kvm.vhost_user_postcopy_fault_handler_loop ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1163, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), i, client_base, size)
}
probe qemu.kvm.simpletrace.vhost_user_postcopy_fault_handler_found = qemu.kvm.vhost_user_postcopy_fault_handler_found ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1164, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), i, region_offset, rb_offset)
}
probe qemu.kvm.simpletrace.vhost_user_postcopy_listen = qemu.kvm.vhost_user_postcopy_listen ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1165, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.vhost_user_set_mem_table_postcopy = qemu.kvm.vhost_user_set_mem_table_postcopy ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1166, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), client_addr, qhva, reply_i, region_i)
}
probe qemu.kvm.simpletrace.vhost_user_set_mem_table_withfd = qemu.kvm.vhost_user_set_mem_table_withfd ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%8b%8b%8b", 1, 1167, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8 + 8 + 8 + 8, pid(), index, argname_len, argname_len, argname_str, memory_size, guest_phys_addr, userspace_addr, offset)
}
probe qemu.kvm.simpletrace.vhost_user_postcopy_waker = qemu.kvm.vhost_user_postcopy_waker ?
{
    try {
        argrb_str = rb ? user_string_n(rb, 512) : "<null>"
    } catch {}
    argrb_len = strlen(argrb_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 1168, gettimeofday_ns(), 24 + 4 + argrb_len + 8, pid(), argrb_len, argrb_len, argrb_str, rb_offset)
}
probe qemu.kvm.simpletrace.vhost_user_postcopy_waker_found = qemu.kvm.vhost_user_postcopy_waker_found ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1169, gettimeofday_ns(), 24 + 8, pid(), client_addr)
}
probe qemu.kvm.simpletrace.vhost_user_postcopy_waker_nomatch = qemu.kvm.vhost_user_postcopy_waker_nomatch ?
{
    try {
        argrb_str = rb ? user_string_n(rb, 512) : "<null>"
    } catch {}
    argrb_len = strlen(argrb_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 1170, gettimeofday_ns(), 24 + 4 + argrb_len + 8, pid(), argrb_len, argrb_len, argrb_str, rb_offset)
}
probe qemu.kvm.simpletrace.virtqueue_alloc_element = qemu.kvm.virtqueue_alloc_element ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1171, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), elem, sz, in_num, out_num)
}
probe qemu.kvm.simpletrace.virtqueue_fill = qemu.kvm.virtqueue_fill ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1172, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), vq, elem, len, idx)
}
probe qemu.kvm.simpletrace.virtqueue_flush = qemu.kvm.virtqueue_flush ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1173, gettimeofday_ns(), 24 + 8 + 8, pid(), vq, count)
}
probe qemu.kvm.simpletrace.virtqueue_pop = qemu.kvm.virtqueue_pop ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1174, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), vq, elem, in_num, out_num)
}
probe qemu.kvm.simpletrace.virtio_queue_notify = qemu.kvm.virtio_queue_notify ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1175, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), vdev, n, vq)
}
probe qemu.kvm.simpletrace.virtio_notify_irqfd = qemu.kvm.virtio_notify_irqfd ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1176, gettimeofday_ns(), 24 + 8 + 8, pid(), vdev, vq)
}
probe qemu.kvm.simpletrace.virtio_notify = qemu.kvm.virtio_notify ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1177, gettimeofday_ns(), 24 + 8 + 8, pid(), vdev, vq)
}
probe qemu.kvm.simpletrace.virtio_set_status = qemu.kvm.virtio_set_status ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1178, gettimeofday_ns(), 24 + 8 + 8, pid(), vdev, val)
}
probe qemu.kvm.simpletrace.virtio_rng_guest_not_ready = qemu.kvm.virtio_rng_guest_not_ready ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1179, gettimeofday_ns(), 24 + 8, pid(), rng)
}
probe qemu.kvm.simpletrace.virtio_rng_cpu_is_stopped = qemu.kvm.virtio_rng_cpu_is_stopped ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1180, gettimeofday_ns(), 24 + 8 + 8, pid(), rng, size)
}
probe qemu.kvm.simpletrace.virtio_rng_popped = qemu.kvm.virtio_rng_popped ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1181, gettimeofday_ns(), 24 + 8, pid(), rng)
}
probe qemu.kvm.simpletrace.virtio_rng_pushed = qemu.kvm.virtio_rng_pushed ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1182, gettimeofday_ns(), 24 + 8 + 8, pid(), rng, len)
}
probe qemu.kvm.simpletrace.virtio_rng_request = qemu.kvm.virtio_rng_request ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1183, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), rng, size, quota)
}
probe qemu.kvm.simpletrace.virtio_rng_vm_state_change = qemu.kvm.virtio_rng_vm_state_change ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1184, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), rng, running, state)
}
probe qemu.kvm.simpletrace.virtio_balloon_bad_addr = qemu.kvm.virtio_balloon_bad_addr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1185, gettimeofday_ns(), 24 + 8, pid(), gpa)
}
probe qemu.kvm.simpletrace.virtio_balloon_handle_output = qemu.kvm.virtio_balloon_handle_output ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 1186, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, gpa)
}
probe qemu.kvm.simpletrace.virtio_balloon_get_config = qemu.kvm.virtio_balloon_get_config ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1187, gettimeofday_ns(), 24 + 8 + 8, pid(), num_pages, actual)
}
probe qemu.kvm.simpletrace.virtio_balloon_set_config = qemu.kvm.virtio_balloon_set_config ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1188, gettimeofday_ns(), 24 + 8 + 8, pid(), actual, oldactual)
}
probe qemu.kvm.simpletrace.virtio_balloon_to_target = qemu.kvm.virtio_balloon_to_target ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1189, gettimeofday_ns(), 24 + 8 + 8, pid(), target, num_pages)
}
probe qemu.kvm.simpletrace.cs4231_mem_readl_dreg = qemu.kvm.cs4231_mem_readl_dreg ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1190, gettimeofday_ns(), 24 + 8 + 8, pid(), reg, ret)
}
probe qemu.kvm.simpletrace.cs4231_mem_readl_reg = qemu.kvm.cs4231_mem_readl_reg ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1191, gettimeofday_ns(), 24 + 8 + 8, pid(), reg, ret)
}
probe qemu.kvm.simpletrace.cs4231_mem_writel_reg = qemu.kvm.cs4231_mem_writel_reg ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1192, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), reg, old, val)
}
probe qemu.kvm.simpletrace.cs4231_mem_writel_dreg = qemu.kvm.cs4231_mem_writel_dreg ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1193, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), reg, old, val)
}
probe qemu.kvm.simpletrace.milkymist_ac97_memory_read = qemu.kvm.milkymist_ac97_memory_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1194, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.milkymist_ac97_memory_write = qemu.kvm.milkymist_ac97_memory_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1195, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.milkymist_ac97_pulse_irq_crrequest = qemu.kvm.milkymist_ac97_pulse_irq_crrequest ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1196, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.milkymist_ac97_pulse_irq_crreply = qemu.kvm.milkymist_ac97_pulse_irq_crreply ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1197, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.milkymist_ac97_pulse_irq_dmaw = qemu.kvm.milkymist_ac97_pulse_irq_dmaw ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1198, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.milkymist_ac97_pulse_irq_dmar = qemu.kvm.milkymist_ac97_pulse_irq_dmar ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1199, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.milkymist_ac97_in_cb = qemu.kvm.milkymist_ac97_in_cb ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1200, gettimeofday_ns(), 24 + 8 + 8, pid(), avail, remaining)
}
probe qemu.kvm.simpletrace.milkymist_ac97_in_cb_transferred = qemu.kvm.milkymist_ac97_in_cb_transferred ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1201, gettimeofday_ns(), 24 + 8, pid(), transferred)
}
probe qemu.kvm.simpletrace.milkymist_ac97_out_cb = qemu.kvm.milkymist_ac97_out_cb ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1202, gettimeofday_ns(), 24 + 8 + 8, pid(), free, remaining)
}
probe qemu.kvm.simpletrace.milkymist_ac97_out_cb_transferred = qemu.kvm.milkymist_ac97_out_cb_transferred ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1203, gettimeofday_ns(), 24 + 8, pid(), transferred)
}
probe qemu.kvm.simpletrace.ecc_mem_writel_mer = qemu.kvm.ecc_mem_writel_mer ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1204, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.ecc_mem_writel_mdr = qemu.kvm.ecc_mem_writel_mdr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1205, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.ecc_mem_writel_mfsr = qemu.kvm.ecc_mem_writel_mfsr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1206, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.ecc_mem_writel_vcr = qemu.kvm.ecc_mem_writel_vcr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1207, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.ecc_mem_writel_dr = qemu.kvm.ecc_mem_writel_dr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1208, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.ecc_mem_writel_ecr0 = qemu.kvm.ecc_mem_writel_ecr0 ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1209, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.ecc_mem_writel_ecr1 = qemu.kvm.ecc_mem_writel_ecr1 ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1210, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.ecc_mem_readl_mer = qemu.kvm.ecc_mem_readl_mer ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1211, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.ecc_mem_readl_mdr = qemu.kvm.ecc_mem_readl_mdr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1212, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.ecc_mem_readl_mfsr = qemu.kvm.ecc_mem_readl_mfsr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1213, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.ecc_mem_readl_vcr = qemu.kvm.ecc_mem_readl_vcr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1214, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.ecc_mem_readl_mfar0 = qemu.kvm.ecc_mem_readl_mfar0 ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1215, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.ecc_mem_readl_mfar1 = qemu.kvm.ecc_mem_readl_mfar1 ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1216, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.ecc_mem_readl_dr = qemu.kvm.ecc_mem_readl_dr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1217, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.ecc_mem_readl_ecr0 = qemu.kvm.ecc_mem_readl_ecr0 ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1218, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.ecc_mem_readl_ecr1 = qemu.kvm.ecc_mem_readl_ecr1 ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1219, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.ecc_diag_mem_writeb = qemu.kvm.ecc_diag_mem_writeb ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1220, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.ecc_diag_mem_readb = qemu.kvm.ecc_diag_mem_readb ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1221, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, ret)
}
probe qemu.kvm.simpletrace.slavio_misc_update_irq_raise = qemu.kvm.slavio_misc_update_irq_raise ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1222, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.slavio_misc_update_irq_lower = qemu.kvm.slavio_misc_update_irq_lower ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1223, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.slavio_set_power_fail = qemu.kvm.slavio_set_power_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1224, gettimeofday_ns(), 24 + 8 + 8, pid(), power_failing, config)
}
probe qemu.kvm.simpletrace.slavio_cfg_mem_writeb = qemu.kvm.slavio_cfg_mem_writeb ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1225, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.slavio_cfg_mem_readb = qemu.kvm.slavio_cfg_mem_readb ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1226, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.slavio_diag_mem_writeb = qemu.kvm.slavio_diag_mem_writeb ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1227, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.slavio_diag_mem_readb = qemu.kvm.slavio_diag_mem_readb ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1228, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.slavio_mdm_mem_writeb = qemu.kvm.slavio_mdm_mem_writeb ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1229, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.slavio_mdm_mem_readb = qemu.kvm.slavio_mdm_mem_readb ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1230, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.slavio_aux1_mem_writeb = qemu.kvm.slavio_aux1_mem_writeb ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1231, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.slavio_aux1_mem_readb = qemu.kvm.slavio_aux1_mem_readb ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1232, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.slavio_aux2_mem_writeb = qemu.kvm.slavio_aux2_mem_writeb ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1233, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.slavio_aux2_mem_readb = qemu.kvm.slavio_aux2_mem_readb ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1234, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.apc_mem_writeb = qemu.kvm.apc_mem_writeb ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1235, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.apc_mem_readb = qemu.kvm.apc_mem_readb ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1236, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.slavio_sysctrl_mem_writel = qemu.kvm.slavio_sysctrl_mem_writel ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1237, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.slavio_sysctrl_mem_readl = qemu.kvm.slavio_sysctrl_mem_readl ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1238, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.slavio_led_mem_writew = qemu.kvm.slavio_led_mem_writew ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1239, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.slavio_led_mem_readw = qemu.kvm.slavio_led_mem_readw ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1240, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.milkymist_hpdmc_memory_read = qemu.kvm.milkymist_hpdmc_memory_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1241, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.milkymist_hpdmc_memory_write = qemu.kvm.milkymist_hpdmc_memory_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1242, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.milkymist_pfpu_memory_read = qemu.kvm.milkymist_pfpu_memory_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1243, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.milkymist_pfpu_memory_write = qemu.kvm.milkymist_pfpu_memory_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1244, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.milkymist_pfpu_vectout = qemu.kvm.milkymist_pfpu_vectout ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1245, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), a, b, dma_ptr)
}
probe qemu.kvm.simpletrace.milkymist_pfpu_pulse_irq = qemu.kvm.milkymist_pfpu_pulse_irq ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1246, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.aspeed_scu_write = qemu.kvm.aspeed_scu_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1247, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, size, data)
}
probe qemu.kvm.simpletrace.mps2_scc_read = qemu.kvm.mps2_scc_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1248, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, data, size)
}
probe qemu.kvm.simpletrace.mps2_scc_write = qemu.kvm.mps2_scc_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1249, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, data, size)
}
probe qemu.kvm.simpletrace.mps2_scc_reset = qemu.kvm.mps2_scc_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1250, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.mps2_scc_leds = qemu.kvm.mps2_scc_leds ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b%8b", 1, 1251, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), led7, led6, led5, led4, led3, led2, led1, led0)
}
probe qemu.kvm.simpletrace.mps2_scc_cfg_write = qemu.kvm.mps2_scc_cfg_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1252, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), function_, device, value)
}
probe qemu.kvm.simpletrace.mps2_scc_cfg_read = qemu.kvm.mps2_scc_cfg_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1253, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), function_, device, value)
}
probe qemu.kvm.simpletrace.mps2_fpgaio_read = qemu.kvm.mps2_fpgaio_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1254, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, data, size)
}
probe qemu.kvm.simpletrace.mps2_fpgaio_write = qemu.kvm.mps2_fpgaio_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1255, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, data, size)
}
probe qemu.kvm.simpletrace.mps2_fpgaio_reset = qemu.kvm.mps2_fpgaio_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1256, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.mps2_fpgaio_leds = qemu.kvm.mps2_fpgaio_leds ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1257, gettimeofday_ns(), 24 + 8 + 8, pid(), led1, led0)
}
probe qemu.kvm.simpletrace.msf2_sysreg_write = qemu.kvm.msf2_sysreg_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1258, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, val, prev)
}
probe qemu.kvm.simpletrace.msf2_sysreg_read = qemu.kvm.msf2_sysreg_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1259, gettimeofday_ns(), 24 + 8 + 8, pid(), offset, val)
}
probe qemu.kvm.simpletrace.msf2_sysreg_write_pll_status = qemu.kvm.msf2_sysreg_write_pll_status ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1260, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.imx7_gpr_read = qemu.kvm.imx7_gpr_read ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1261, gettimeofday_ns(), 24 + 8, pid(), offset)
}
probe qemu.kvm.simpletrace.imx7_gpr_write = qemu.kvm.imx7_gpr_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1262, gettimeofday_ns(), 24 + 8 + 8, pid(), offset, value)
}
probe qemu.kvm.simpletrace.mos6522_set_counter = qemu.kvm.mos6522_set_counter ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1263, gettimeofday_ns(), 24 + 8 + 8, pid(), index, val)
}
probe qemu.kvm.simpletrace.mos6522_get_next_irq_time = qemu.kvm.mos6522_get_next_irq_time ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1264, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), latch, d, delta)
}
probe qemu.kvm.simpletrace.mos6522_set_sr_int = qemu.kvm.mos6522_set_sr_int ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1265, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.mos6522_write = qemu.kvm.mos6522_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1266, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.mos6522_read = qemu.kvm.mos6522_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1267, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.tz_ppc_reset = qemu.kvm.tz_ppc_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1268, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.tz_ppc_cfg_nonsec = qemu.kvm.tz_ppc_cfg_nonsec ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1269, gettimeofday_ns(), 24 + 8 + 8, pid(), n, level)
}
probe qemu.kvm.simpletrace.tz_ppc_cfg_ap = qemu.kvm.tz_ppc_cfg_ap ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1270, gettimeofday_ns(), 24 + 8 + 8, pid(), n, level)
}
probe qemu.kvm.simpletrace.tz_ppc_cfg_sec_resp = qemu.kvm.tz_ppc_cfg_sec_resp ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1271, gettimeofday_ns(), 24 + 8, pid(), level)
}
probe qemu.kvm.simpletrace.tz_ppc_irq_enable = qemu.kvm.tz_ppc_irq_enable ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1272, gettimeofday_ns(), 24 + 8, pid(), level)
}
probe qemu.kvm.simpletrace.tz_ppc_irq_clear = qemu.kvm.tz_ppc_irq_clear ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1273, gettimeofday_ns(), 24 + 8, pid(), level)
}
probe qemu.kvm.simpletrace.tz_ppc_update_irq = qemu.kvm.tz_ppc_update_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1274, gettimeofday_ns(), 24 + 8, pid(), level)
}
probe qemu.kvm.simpletrace.tz_ppc_read_blocked = qemu.kvm.tz_ppc_read_blocked ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1275, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), n, offset, secure, user)
}
probe qemu.kvm.simpletrace.tz_ppc_write_blocked = qemu.kvm.tz_ppc_write_blocked ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1276, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), n, offset, secure, user)
}
probe qemu.kvm.simpletrace.iotkit_secctl_s_read = qemu.kvm.iotkit_secctl_s_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1277, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, data, size)
}
probe qemu.kvm.simpletrace.iotkit_secctl_s_write = qemu.kvm.iotkit_secctl_s_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1278, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, data, size)
}
probe qemu.kvm.simpletrace.iotkit_secctl_ns_read = qemu.kvm.iotkit_secctl_ns_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1279, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, data, size)
}
probe qemu.kvm.simpletrace.iotkit_secctl_ns_write = qemu.kvm.iotkit_secctl_ns_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1280, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, data, size)
}
probe qemu.kvm.simpletrace.iotkit_secctl_reset = qemu.kvm.iotkit_secctl_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1281, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.cuda_delay_set_sr_int = qemu.kvm.cuda_delay_set_sr_int ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1282, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.cuda_data_send = qemu.kvm.cuda_data_send ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1283, gettimeofday_ns(), 24 + 8, pid(), data)
}
probe qemu.kvm.simpletrace.cuda_data_recv = qemu.kvm.cuda_data_recv ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1284, gettimeofday_ns(), 24 + 8, pid(), data)
}
probe qemu.kvm.simpletrace.cuda_receive_packet_cmd = qemu.kvm.cuda_receive_packet_cmd ?
{
    try {
        argcmd_str = cmd ? user_string_n(cmd, 512) : "<null>"
    } catch {}
    argcmd_len = strlen(argcmd_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 1285, gettimeofday_ns(), 24 + 4 + argcmd_len, pid(), argcmd_len, argcmd_len, argcmd_str)
}
probe qemu.kvm.simpletrace.cuda_packet_receive = qemu.kvm.cuda_packet_receive ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1286, gettimeofday_ns(), 24 + 8, pid(), len)
}
probe qemu.kvm.simpletrace.cuda_packet_receive_data = qemu.kvm.cuda_packet_receive_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1287, gettimeofday_ns(), 24 + 8 + 8, pid(), i, data)
}
probe qemu.kvm.simpletrace.cuda_packet_send = qemu.kvm.cuda_packet_send ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1288, gettimeofday_ns(), 24 + 8, pid(), len)
}
probe qemu.kvm.simpletrace.cuda_packet_send_data = qemu.kvm.cuda_packet_send_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1289, gettimeofday_ns(), 24 + 8 + 8, pid(), i, data)
}
probe qemu.kvm.simpletrace.usb_packet_state_change = qemu.kvm.usb_packet_state_change ?
{
    try {
        argport_str = port ? user_string_n(port, 512) : "<null>"
    } catch {}
    argport_len = strlen(argport_str)
    try {
        argo_str = o ? user_string_n(o, 512) : "<null>"
    } catch {}
    argo_len = strlen(argo_str)
    try {
        argn_str = n ? user_string_n(n, 512) : "<null>"
    } catch {}
    argn_len = strlen(argn_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%8b%4b%.*s%4b%.*s", 1, 1290, gettimeofday_ns(), 24 + 8 + 4 + argport_len + 8 + 8 + 4 + argo_len + 4 + argn_len, pid(), bus, argport_len, argport_len, argport_str, ep, p, argo_len, argo_len, argo_str, argn_len, argn_len, argn_str)
}
probe qemu.kvm.simpletrace.usb_packet_state_fault = qemu.kvm.usb_packet_state_fault ?
{
    try {
        argport_str = port ? user_string_n(port, 512) : "<null>"
    } catch {}
    argport_len = strlen(argport_str)
    try {
        argo_str = o ? user_string_n(o, 512) : "<null>"
    } catch {}
    argo_len = strlen(argo_str)
    try {
        argn_str = n ? user_string_n(n, 512) : "<null>"
    } catch {}
    argn_len = strlen(argn_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%8b%4b%.*s%4b%.*s", 1, 1291, gettimeofday_ns(), 24 + 8 + 4 + argport_len + 8 + 8 + 4 + argo_len + 4 + argn_len, pid(), bus, argport_len, argport_len, argport_str, ep, p, argo_len, argo_len, argo_str, argn_len, argn_len, argn_str)
}
probe qemu.kvm.simpletrace.usb_port_claim = qemu.kvm.usb_port_claim ?
{
    try {
        argport_str = port ? user_string_n(port, 512) : "<null>"
    } catch {}
    argport_len = strlen(argport_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 1292, gettimeofday_ns(), 24 + 8 + 4 + argport_len, pid(), bus, argport_len, argport_len, argport_str)
}
probe qemu.kvm.simpletrace.usb_port_attach = qemu.kvm.usb_port_attach ?
{
    try {
        argport_str = port ? user_string_n(port, 512) : "<null>"
    } catch {}
    argport_len = strlen(argport_str)
    try {
        argdevspeed_str = devspeed ? user_string_n(devspeed, 512) : "<null>"
    } catch {}
    argdevspeed_len = strlen(argdevspeed_str)
    try {
        argportspeed_str = portspeed ? user_string_n(portspeed, 512) : "<null>"
    } catch {}
    argportspeed_len = strlen(argportspeed_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%4b%.*s%4b%.*s", 1, 1293, gettimeofday_ns(), 24 + 8 + 4 + argport_len + 4 + argdevspeed_len + 4 + argportspeed_len, pid(), bus, argport_len, argport_len, argport_str, argdevspeed_len, argdevspeed_len, argdevspeed_str, argportspeed_len, argportspeed_len, argportspeed_str)
}
probe qemu.kvm.simpletrace.usb_port_detach = qemu.kvm.usb_port_detach ?
{
    try {
        argport_str = port ? user_string_n(port, 512) : "<null>"
    } catch {}
    argport_len = strlen(argport_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 1294, gettimeofday_ns(), 24 + 8 + 4 + argport_len, pid(), bus, argport_len, argport_len, argport_str)
}
probe qemu.kvm.simpletrace.usb_port_release = qemu.kvm.usb_port_release ?
{
    try {
        argport_str = port ? user_string_n(port, 512) : "<null>"
    } catch {}
    argport_len = strlen(argport_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 1295, gettimeofday_ns(), 24 + 8 + 4 + argport_len, pid(), bus, argport_len, argport_len, argport_str)
}
probe qemu.kvm.simpletrace.usb_ohci_iso_td_read_failed = qemu.kvm.usb_ohci_iso_td_read_failed ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1296, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.usb_ohci_iso_td_head = qemu.kvm.usb_ohci_iso_td_head ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b%8b%8b%8b", 1, 1297, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), head, tail, flags, bp, next_, be, framenum, startframe, framecount, rel_frame_num)
}
probe qemu.kvm.simpletrace.usb_ohci_iso_td_head_offset = qemu.kvm.usb_ohci_iso_td_head_offset ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b%8b", 1, 1298, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), o0, o1, o2, o3, o4, o5, o6, o7)
}
probe qemu.kvm.simpletrace.usb_ohci_iso_td_relative_frame_number_neg = qemu.kvm.usb_ohci_iso_td_relative_frame_number_neg ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1299, gettimeofday_ns(), 24 + 8, pid(), rel)
}
probe qemu.kvm.simpletrace.usb_ohci_iso_td_relative_frame_number_big = qemu.kvm.usb_ohci_iso_td_relative_frame_number_big ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1300, gettimeofday_ns(), 24 + 8 + 8, pid(), rel, count)
}
probe qemu.kvm.simpletrace.usb_ohci_iso_td_bad_direction = qemu.kvm.usb_ohci_iso_td_bad_direction ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1301, gettimeofday_ns(), 24 + 8, pid(), dir)
}
probe qemu.kvm.simpletrace.usb_ohci_iso_td_bad_bp_be = qemu.kvm.usb_ohci_iso_td_bad_bp_be ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1302, gettimeofday_ns(), 24 + 8 + 8, pid(), bp, be)
}
probe qemu.kvm.simpletrace.usb_ohci_iso_td_bad_cc_not_accessed = qemu.kvm.usb_ohci_iso_td_bad_cc_not_accessed ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1303, gettimeofday_ns(), 24 + 8 + 8, pid(), start, next_)
}
probe qemu.kvm.simpletrace.usb_ohci_iso_td_bad_cc_overrun = qemu.kvm.usb_ohci_iso_td_bad_cc_overrun ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1304, gettimeofday_ns(), 24 + 8 + 8, pid(), start, next_)
}
probe qemu.kvm.simpletrace.usb_ohci_iso_td_so = qemu.kvm.usb_ohci_iso_td_so ?
{
    try {
        argstr_str = str ? user_string_n(str, 512) : "<null>"
    } catch {}
    argstr_len = strlen(argstr_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%4b%.*s%8b%8b", 1, 1305, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 4 + argstr_len + 8 + 8, pid(), so, eo, s, e, argstr_len, argstr_len, argstr_str, len, ret)
}
probe qemu.kvm.simpletrace.usb_ohci_iso_td_data_overrun = qemu.kvm.usb_ohci_iso_td_data_overrun ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1306, gettimeofday_ns(), 24 + 8 + 8, pid(), ret, len)
}
probe qemu.kvm.simpletrace.usb_ohci_iso_td_data_underrun = qemu.kvm.usb_ohci_iso_td_data_underrun ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1307, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.usb_ohci_iso_td_nak = qemu.kvm.usb_ohci_iso_td_nak ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1308, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.usb_ohci_iso_td_bad_response = qemu.kvm.usb_ohci_iso_td_bad_response ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1309, gettimeofday_ns(), 24 + 8, pid(), ret)
}
probe qemu.kvm.simpletrace.usb_ohci_port_attach = qemu.kvm.usb_ohci_port_attach ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1310, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.usb_ohci_port_detach = qemu.kvm.usb_ohci_port_detach ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1311, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.usb_ohci_port_wakeup = qemu.kvm.usb_ohci_port_wakeup ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1312, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.usb_ohci_port_suspend = qemu.kvm.usb_ohci_port_suspend ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1313, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.usb_ohci_port_reset = qemu.kvm.usb_ohci_port_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1314, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.usb_ohci_remote_wakeup = qemu.kvm.usb_ohci_remote_wakeup ?
{
    try {
        args_str = s ? user_string_n(s, 512) : "<null>"
    } catch {}
    args_len = strlen(args_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 1315, gettimeofday_ns(), 24 + 4 + args_len, pid(), args_len, args_len, args_str)
}
probe qemu.kvm.simpletrace.usb_ohci_reset = qemu.kvm.usb_ohci_reset ?
{
    try {
        args_str = s ? user_string_n(s, 512) : "<null>"
    } catch {}
    args_len = strlen(args_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 1316, gettimeofday_ns(), 24 + 4 + args_len, pid(), args_len, args_len, args_str)
}
probe qemu.kvm.simpletrace.usb_ohci_start = qemu.kvm.usb_ohci_start ?
{
    try {
        args_str = s ? user_string_n(s, 512) : "<null>"
    } catch {}
    args_len = strlen(args_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 1317, gettimeofday_ns(), 24 + 4 + args_len, pid(), args_len, args_len, args_str)
}
probe qemu.kvm.simpletrace.usb_ohci_resume = qemu.kvm.usb_ohci_resume ?
{
    try {
        args_str = s ? user_string_n(s, 512) : "<null>"
    } catch {}
    args_len = strlen(args_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 1318, gettimeofday_ns(), 24 + 4 + args_len, pid(), args_len, args_len, args_str)
}
probe qemu.kvm.simpletrace.usb_ohci_stop = qemu.kvm.usb_ohci_stop ?
{
    try {
        args_str = s ? user_string_n(s, 512) : "<null>"
    } catch {}
    args_len = strlen(args_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 1319, gettimeofday_ns(), 24 + 4 + args_len, pid(), args_len, args_len, args_str)
}
probe qemu.kvm.simpletrace.usb_ohci_exit = qemu.kvm.usb_ohci_exit ?
{
    try {
        args_str = s ? user_string_n(s, 512) : "<null>"
    } catch {}
    args_len = strlen(args_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 1320, gettimeofday_ns(), 24 + 4 + args_len, pid(), args_len, args_len, args_str)
}
probe qemu.kvm.simpletrace.usb_ohci_set_ctl = qemu.kvm.usb_ohci_set_ctl ?
{
    try {
        args_str = s ? user_string_n(s, 512) : "<null>"
    } catch {}
    args_len = strlen(args_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 1321, gettimeofday_ns(), 24 + 4 + args_len + 8, pid(), args_len, args_len, args_str, new_state)
}
probe qemu.kvm.simpletrace.usb_ohci_td_underrun = qemu.kvm.usb_ohci_td_underrun ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1322, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_ohci_td_dev_error = qemu.kvm.usb_ohci_td_dev_error ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1323, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_ohci_td_nak = qemu.kvm.usb_ohci_td_nak ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1324, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_ohci_td_stall = qemu.kvm.usb_ohci_td_stall ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1325, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_ohci_td_babble = qemu.kvm.usb_ohci_td_babble ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1326, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_ohci_td_bad_device_response = qemu.kvm.usb_ohci_td_bad_device_response ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1327, gettimeofday_ns(), 24 + 8, pid(), rc)
}
probe qemu.kvm.simpletrace.usb_ohci_td_read_error = qemu.kvm.usb_ohci_td_read_error ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1328, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.usb_ohci_td_bad_direction = qemu.kvm.usb_ohci_td_bad_direction ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1329, gettimeofday_ns(), 24 + 8, pid(), dir)
}
probe qemu.kvm.simpletrace.usb_ohci_td_skip_async = qemu.kvm.usb_ohci_td_skip_async ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1330, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_ohci_td_pkt_hdr = qemu.kvm.usb_ohci_td_pkt_hdr ?
{
    try {
        args_str = s ? user_string_n(s, 512) : "<null>"
    } catch {}
    args_len = strlen(args_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%4b%.*s%8b%8b%8b", 1, 1331, gettimeofday_ns(), 24 + 8 + 8 + 8 + 4 + args_len + 8 + 8 + 8, pid(), addr, pktlen, len, args_len, args_len, args_str, flag_r, cbp, be)
}
probe qemu.kvm.simpletrace.usb_ohci_td_pkt_short = qemu.kvm.usb_ohci_td_pkt_short ?
{
    try {
        argdir_str = dir ? user_string_n(dir, 512) : "<null>"
    } catch {}
    argdir_len = strlen(argdir_str)
    try {
        argbuf_str = buf ? user_string_n(buf, 512) : "<null>"
    } catch {}
    argbuf_len = strlen(argbuf_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 1332, gettimeofday_ns(), 24 + 4 + argdir_len + 4 + argbuf_len, pid(), argdir_len, argdir_len, argdir_str, argbuf_len, argbuf_len, argbuf_str)
}
probe qemu.kvm.simpletrace.usb_ohci_td_pkt_full = qemu.kvm.usb_ohci_td_pkt_full ?
{
    try {
        argdir_str = dir ? user_string_n(dir, 512) : "<null>"
    } catch {}
    argdir_len = strlen(argdir_str)
    try {
        argbuf_str = buf ? user_string_n(buf, 512) : "<null>"
    } catch {}
    argbuf_len = strlen(argbuf_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 1333, gettimeofday_ns(), 24 + 4 + argdir_len + 4 + argbuf_len, pid(), argdir_len, argdir_len, argdir_str, argbuf_len, argbuf_len, argbuf_str)
}
probe qemu.kvm.simpletrace.usb_ohci_td_too_many_pending = qemu.kvm.usb_ohci_td_too_many_pending ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1334, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_ohci_td_packet_status = qemu.kvm.usb_ohci_td_packet_status ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1335, gettimeofday_ns(), 24 + 8, pid(), status)
}
probe qemu.kvm.simpletrace.usb_ohci_ed_read_error = qemu.kvm.usb_ohci_ed_read_error ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1336, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.usb_ohci_ed_pkt = qemu.kvm.usb_ohci_ed_pkt ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1337, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), cur, h, c, head, tail, next_)
}
probe qemu.kvm.simpletrace.usb_ohci_ed_pkt_flags = qemu.kvm.usb_ohci_ed_pkt_flags ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b", 1, 1338, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), fa, en, d, s, k, f, mps)
}
probe qemu.kvm.simpletrace.usb_ohci_hcca_read_error = qemu.kvm.usb_ohci_hcca_read_error ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1339, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.usb_ohci_mem_read_unaligned = qemu.kvm.usb_ohci_mem_read_unaligned ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1340, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.usb_ohci_mem_read_bad_offset = qemu.kvm.usb_ohci_mem_read_bad_offset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1341, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.usb_ohci_mem_write_unaligned = qemu.kvm.usb_ohci_mem_write_unaligned ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1342, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.usb_ohci_mem_write_bad_offset = qemu.kvm.usb_ohci_mem_write_bad_offset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1343, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.usb_ohci_process_lists = qemu.kvm.usb_ohci_process_lists ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1344, gettimeofday_ns(), 24 + 8 + 8, pid(), head, cur)
}
probe qemu.kvm.simpletrace.usb_ohci_set_frame_interval = qemu.kvm.usb_ohci_set_frame_interval ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 1345, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8, pid(), argname_len, argname_len, argname_str, fi_x, fi_u)
}
probe qemu.kvm.simpletrace.usb_ohci_hub_power_up = qemu.kvm.usb_ohci_hub_power_up ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1346, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_ohci_hub_power_down = qemu.kvm.usb_ohci_hub_power_down ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1347, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_ohci_init_time = qemu.kvm.usb_ohci_init_time ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1348, gettimeofday_ns(), 24 + 8 + 8, pid(), frametime, bittime)
}
probe qemu.kvm.simpletrace.usb_ohci_die = qemu.kvm.usb_ohci_die ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1349, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_ohci_async_complete = qemu.kvm.usb_ohci_async_complete ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1350, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_ehci_reset = qemu.kvm.usb_ehci_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1351, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_ehci_unrealize = qemu.kvm.usb_ehci_unrealize ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1352, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_ehci_opreg_read = qemu.kvm.usb_ehci_opreg_read ?
{
    try {
        argstr_str = str ? user_string_n(str, 512) : "<null>"
    } catch {}
    argstr_len = strlen(argstr_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 1353, gettimeofday_ns(), 24 + 8 + 4 + argstr_len + 8, pid(), addr, argstr_len, argstr_len, argstr_str, val)
}
probe qemu.kvm.simpletrace.usb_ehci_opreg_write = qemu.kvm.usb_ehci_opreg_write ?
{
    try {
        argstr_str = str ? user_string_n(str, 512) : "<null>"
    } catch {}
    argstr_len = strlen(argstr_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 1354, gettimeofday_ns(), 24 + 8 + 4 + argstr_len + 8, pid(), addr, argstr_len, argstr_len, argstr_str, val)
}
probe qemu.kvm.simpletrace.usb_ehci_opreg_change = qemu.kvm.usb_ehci_opreg_change ?
{
    try {
        argstr_str = str ? user_string_n(str, 512) : "<null>"
    } catch {}
    argstr_len = strlen(argstr_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%8b", 1, 1355, gettimeofday_ns(), 24 + 8 + 4 + argstr_len + 8 + 8, pid(), addr, argstr_len, argstr_len, argstr_str, new, old)
}
probe qemu.kvm.simpletrace.usb_ehci_portsc_read = qemu.kvm.usb_ehci_portsc_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1356, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, port, val)
}
probe qemu.kvm.simpletrace.usb_ehci_portsc_write = qemu.kvm.usb_ehci_portsc_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1357, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, port, val)
}
probe qemu.kvm.simpletrace.usb_ehci_portsc_change = qemu.kvm.usb_ehci_portsc_change ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1358, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), addr, port, new, old)
}
probe qemu.kvm.simpletrace.usb_ehci_usbsts = qemu.kvm.usb_ehci_usbsts ?
{
    try {
        argsts_str = sts ? user_string_n(sts, 512) : "<null>"
    } catch {}
    argsts_len = strlen(argsts_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 1359, gettimeofday_ns(), 24 + 4 + argsts_len + 8, pid(), argsts_len, argsts_len, argsts_str, state)
}
probe qemu.kvm.simpletrace.usb_ehci_state = qemu.kvm.usb_ehci_state ?
{
    try {
        argschedule_str = schedule ? user_string_n(schedule, 512) : "<null>"
    } catch {}
    argschedule_len = strlen(argschedule_str)
    try {
        argstate_str = state ? user_string_n(state, 512) : "<null>"
    } catch {}
    argstate_len = strlen(argstate_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 1360, gettimeofday_ns(), 24 + 4 + argschedule_len + 4 + argstate_len, pid(), argschedule_len, argschedule_len, argschedule_str, argstate_len, argstate_len, argstate_str)
}
probe qemu.kvm.simpletrace.usb_ehci_qh_ptrs = qemu.kvm.usb_ehci_qh_ptrs ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1361, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), q, addr, nxt, c_qtd, n_qtd, a_qtd)
}
probe qemu.kvm.simpletrace.usb_ehci_qh_fields = qemu.kvm.usb_ehci_qh_fields ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1362, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), addr, rl, mplen, eps, ep, devaddr)
}
probe qemu.kvm.simpletrace.usb_ehci_qh_bits = qemu.kvm.usb_ehci_qh_bits ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1363, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), addr, c, h, dtc, i)
}
probe qemu.kvm.simpletrace.usb_ehci_qtd_ptrs = qemu.kvm.usb_ehci_qtd_ptrs ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1364, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), q, addr, nxt, altnext)
}
probe qemu.kvm.simpletrace.usb_ehci_qtd_fields = qemu.kvm.usb_ehci_qtd_fields ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1365, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), addr, tbytes, cpage, cerr, pid)
}
probe qemu.kvm.simpletrace.usb_ehci_qtd_bits = qemu.kvm.usb_ehci_qtd_bits ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1366, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), addr, ioc, active, halt, babble, xacterr)
}
probe qemu.kvm.simpletrace.usb_ehci_itd = qemu.kvm.usb_ehci_itd ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1367, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), addr, nxt, mplen, mult, ep, devaddr)
}
probe qemu.kvm.simpletrace.usb_ehci_sitd = qemu.kvm.usb_ehci_sitd ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1368, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, nxt, active)
}
probe qemu.kvm.simpletrace.usb_ehci_port_attach = qemu.kvm.usb_ehci_port_attach ?
{
    try {
        argowner_str = owner ? user_string_n(owner, 512) : "<null>"
    } catch {}
    argowner_len = strlen(argowner_str)
    try {
        argdevice_str = device ? user_string_n(device, 512) : "<null>"
    } catch {}
    argdevice_len = strlen(argdevice_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%4b%.*s", 1, 1369, gettimeofday_ns(), 24 + 8 + 4 + argowner_len + 4 + argdevice_len, pid(), port, argowner_len, argowner_len, argowner_str, argdevice_len, argdevice_len, argdevice_str)
}
probe qemu.kvm.simpletrace.usb_ehci_port_detach = qemu.kvm.usb_ehci_port_detach ?
{
    try {
        argowner_str = owner ? user_string_n(owner, 512) : "<null>"
    } catch {}
    argowner_len = strlen(argowner_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 1370, gettimeofday_ns(), 24 + 8 + 4 + argowner_len, pid(), port, argowner_len, argowner_len, argowner_str)
}
probe qemu.kvm.simpletrace.usb_ehci_port_reset = qemu.kvm.usb_ehci_port_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1371, gettimeofday_ns(), 24 + 8 + 8, pid(), port, enable)
}
probe qemu.kvm.simpletrace.usb_ehci_port_suspend = qemu.kvm.usb_ehci_port_suspend ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1372, gettimeofday_ns(), 24 + 8, pid(), port)
}
probe qemu.kvm.simpletrace.usb_ehci_port_wakeup = qemu.kvm.usb_ehci_port_wakeup ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1373, gettimeofday_ns(), 24 + 8, pid(), port)
}
probe qemu.kvm.simpletrace.usb_ehci_port_resume = qemu.kvm.usb_ehci_port_resume ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1374, gettimeofday_ns(), 24 + 8, pid(), port)
}
probe qemu.kvm.simpletrace.usb_ehci_queue_action = qemu.kvm.usb_ehci_queue_action ?
{
    try {
        argaction_str = action ? user_string_n(action, 512) : "<null>"
    } catch {}
    argaction_len = strlen(argaction_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 1375, gettimeofday_ns(), 24 + 8 + 4 + argaction_len, pid(), q, argaction_len, argaction_len, argaction_str)
}
probe qemu.kvm.simpletrace.usb_ehci_packet_action = qemu.kvm.usb_ehci_packet_action ?
{
    try {
        argaction_str = action ? user_string_n(action, 512) : "<null>"
    } catch {}
    argaction_len = strlen(argaction_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 1376, gettimeofday_ns(), 24 + 8 + 8 + 4 + argaction_len, pid(), q, p, argaction_len, argaction_len, argaction_str)
}
probe qemu.kvm.simpletrace.usb_ehci_irq = qemu.kvm.usb_ehci_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1377, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), level, frindex, sts, mask)
}
probe qemu.kvm.simpletrace.usb_ehci_guest_bug = qemu.kvm.usb_ehci_guest_bug ?
{
    try {
        argreason_str = reason ? user_string_n(reason, 512) : "<null>"
    } catch {}
    argreason_len = strlen(argreason_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 1378, gettimeofday_ns(), 24 + 4 + argreason_len, pid(), argreason_len, argreason_len, argreason_str)
}
probe qemu.kvm.simpletrace.usb_ehci_doorbell_ring = qemu.kvm.usb_ehci_doorbell_ring ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1379, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_ehci_doorbell_ack = qemu.kvm.usb_ehci_doorbell_ack ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1380, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_ehci_dma_error = qemu.kvm.usb_ehci_dma_error ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1381, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_uhci_reset = qemu.kvm.usb_uhci_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1382, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_uhci_exit = qemu.kvm.usb_uhci_exit ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1383, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_uhci_schedule_start = qemu.kvm.usb_uhci_schedule_start ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1384, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_uhci_schedule_stop = qemu.kvm.usb_uhci_schedule_stop ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1385, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_uhci_frame_start = qemu.kvm.usb_uhci_frame_start ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1386, gettimeofday_ns(), 24 + 8, pid(), num)
}
probe qemu.kvm.simpletrace.usb_uhci_frame_stop_bandwidth = qemu.kvm.usb_uhci_frame_stop_bandwidth ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1387, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_uhci_frame_loop_stop_idle = qemu.kvm.usb_uhci_frame_loop_stop_idle ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1388, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_uhci_frame_loop_continue = qemu.kvm.usb_uhci_frame_loop_continue ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1389, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_uhci_mmio_readw = qemu.kvm.usb_uhci_mmio_readw ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1390, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.usb_uhci_mmio_writew = qemu.kvm.usb_uhci_mmio_writew ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1391, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.usb_uhci_queue_add = qemu.kvm.usb_uhci_queue_add ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1392, gettimeofday_ns(), 24 + 8, pid(), token)
}
probe qemu.kvm.simpletrace.usb_uhci_queue_del = qemu.kvm.usb_uhci_queue_del ?
{
    try {
        argreason_str = reason ? user_string_n(reason, 512) : "<null>"
    } catch {}
    argreason_len = strlen(argreason_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 1393, gettimeofday_ns(), 24 + 8 + 4 + argreason_len, pid(), token, argreason_len, argreason_len, argreason_str)
}
probe qemu.kvm.simpletrace.usb_uhci_packet_add = qemu.kvm.usb_uhci_packet_add ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1394, gettimeofday_ns(), 24 + 8 + 8, pid(), token, addr)
}
probe qemu.kvm.simpletrace.usb_uhci_packet_link_async = qemu.kvm.usb_uhci_packet_link_async ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1395, gettimeofday_ns(), 24 + 8 + 8, pid(), token, addr)
}
probe qemu.kvm.simpletrace.usb_uhci_packet_unlink_async = qemu.kvm.usb_uhci_packet_unlink_async ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1396, gettimeofday_ns(), 24 + 8 + 8, pid(), token, addr)
}
probe qemu.kvm.simpletrace.usb_uhci_packet_cancel = qemu.kvm.usb_uhci_packet_cancel ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1397, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), token, addr, done)
}
probe qemu.kvm.simpletrace.usb_uhci_packet_complete_success = qemu.kvm.usb_uhci_packet_complete_success ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1398, gettimeofday_ns(), 24 + 8 + 8, pid(), token, addr)
}
probe qemu.kvm.simpletrace.usb_uhci_packet_complete_shortxfer = qemu.kvm.usb_uhci_packet_complete_shortxfer ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1399, gettimeofday_ns(), 24 + 8 + 8, pid(), token, addr)
}
probe qemu.kvm.simpletrace.usb_uhci_packet_complete_stall = qemu.kvm.usb_uhci_packet_complete_stall ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1400, gettimeofday_ns(), 24 + 8 + 8, pid(), token, addr)
}
probe qemu.kvm.simpletrace.usb_uhci_packet_complete_babble = qemu.kvm.usb_uhci_packet_complete_babble ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1401, gettimeofday_ns(), 24 + 8 + 8, pid(), token, addr)
}
probe qemu.kvm.simpletrace.usb_uhci_packet_complete_error = qemu.kvm.usb_uhci_packet_complete_error ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1402, gettimeofday_ns(), 24 + 8 + 8, pid(), token, addr)
}
probe qemu.kvm.simpletrace.usb_uhci_packet_del = qemu.kvm.usb_uhci_packet_del ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1403, gettimeofday_ns(), 24 + 8 + 8, pid(), token, addr)
}
probe qemu.kvm.simpletrace.usb_uhci_qh_load = qemu.kvm.usb_uhci_qh_load ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1404, gettimeofday_ns(), 24 + 8, pid(), qh)
}
probe qemu.kvm.simpletrace.usb_uhci_td_load = qemu.kvm.usb_uhci_td_load ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1405, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), qh, td, ctrl, token)
}
probe qemu.kvm.simpletrace.usb_uhci_td_queue = qemu.kvm.usb_uhci_td_queue ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1406, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), td, ctrl, token)
}
probe qemu.kvm.simpletrace.usb_uhci_td_nextqh = qemu.kvm.usb_uhci_td_nextqh ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1407, gettimeofday_ns(), 24 + 8 + 8, pid(), qh, td)
}
probe qemu.kvm.simpletrace.usb_uhci_td_async = qemu.kvm.usb_uhci_td_async ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1408, gettimeofday_ns(), 24 + 8 + 8, pid(), qh, td)
}
probe qemu.kvm.simpletrace.usb_uhci_td_complete = qemu.kvm.usb_uhci_td_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1409, gettimeofday_ns(), 24 + 8 + 8, pid(), qh, td)
}
probe qemu.kvm.simpletrace.usb_xhci_reset = qemu.kvm.usb_xhci_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1410, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_xhci_exit = qemu.kvm.usb_xhci_exit ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1411, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_xhci_run = qemu.kvm.usb_xhci_run ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1412, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_xhci_stop = qemu.kvm.usb_xhci_stop ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1413, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_xhci_cap_read = qemu.kvm.usb_xhci_cap_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1414, gettimeofday_ns(), 24 + 8 + 8, pid(), off, val)
}
probe qemu.kvm.simpletrace.usb_xhci_oper_read = qemu.kvm.usb_xhci_oper_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1415, gettimeofday_ns(), 24 + 8 + 8, pid(), off, val)
}
probe qemu.kvm.simpletrace.usb_xhci_port_read = qemu.kvm.usb_xhci_port_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1416, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), port, off, val)
}
probe qemu.kvm.simpletrace.usb_xhci_runtime_read = qemu.kvm.usb_xhci_runtime_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1417, gettimeofday_ns(), 24 + 8 + 8, pid(), off, val)
}
probe qemu.kvm.simpletrace.usb_xhci_doorbell_read = qemu.kvm.usb_xhci_doorbell_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1418, gettimeofday_ns(), 24 + 8 + 8, pid(), off, val)
}
probe qemu.kvm.simpletrace.usb_xhci_oper_write = qemu.kvm.usb_xhci_oper_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1419, gettimeofday_ns(), 24 + 8 + 8, pid(), off, val)
}
probe qemu.kvm.simpletrace.usb_xhci_port_write = qemu.kvm.usb_xhci_port_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1420, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), port, off, val)
}
probe qemu.kvm.simpletrace.usb_xhci_runtime_write = qemu.kvm.usb_xhci_runtime_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1421, gettimeofday_ns(), 24 + 8 + 8, pid(), off, val)
}
probe qemu.kvm.simpletrace.usb_xhci_doorbell_write = qemu.kvm.usb_xhci_doorbell_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1422, gettimeofday_ns(), 24 + 8 + 8, pid(), off, val)
}
probe qemu.kvm.simpletrace.usb_xhci_irq_intx = qemu.kvm.usb_xhci_irq_intx ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1423, gettimeofday_ns(), 24 + 8, pid(), level)
}
probe qemu.kvm.simpletrace.usb_xhci_irq_msi = qemu.kvm.usb_xhci_irq_msi ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1424, gettimeofday_ns(), 24 + 8, pid(), nr)
}
probe qemu.kvm.simpletrace.usb_xhci_irq_msix = qemu.kvm.usb_xhci_irq_msix ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1425, gettimeofday_ns(), 24 + 8, pid(), nr)
}
probe qemu.kvm.simpletrace.usb_xhci_irq_msix_use = qemu.kvm.usb_xhci_irq_msix_use ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1426, gettimeofday_ns(), 24 + 8, pid(), nr)
}
probe qemu.kvm.simpletrace.usb_xhci_irq_msix_unuse = qemu.kvm.usb_xhci_irq_msix_unuse ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1427, gettimeofday_ns(), 24 + 8, pid(), nr)
}
probe qemu.kvm.simpletrace.usb_xhci_queue_event = qemu.kvm.usb_xhci_queue_event ?
{
    try {
        argtrb_str = trb ? user_string_n(trb, 512) : "<null>"
    } catch {}
    argtrb_len = strlen(argtrb_str)
    try {
        argevt_str = evt ? user_string_n(evt, 512) : "<null>"
    } catch {}
    argevt_len = strlen(argevt_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s%4b%.*s%8b%8b%8b", 1, 1428, gettimeofday_ns(), 24 + 8 + 8 + 4 + argtrb_len + 4 + argevt_len + 8 + 8 + 8, pid(), vector, idx, argtrb_len, argtrb_len, argtrb_str, argevt_len, argevt_len, argevt_str, param, status, control)
}
probe qemu.kvm.simpletrace.usb_xhci_fetch_trb = qemu.kvm.usb_xhci_fetch_trb ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%8b%8b", 1, 1429, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8 + 8 + 8, pid(), addr, argname_len, argname_len, argname_str, param, status, control)
}
probe qemu.kvm.simpletrace.usb_xhci_port_reset = qemu.kvm.usb_xhci_port_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1430, gettimeofday_ns(), 24 + 8 + 8, pid(), port, warm)
}
probe qemu.kvm.simpletrace.usb_xhci_port_link = qemu.kvm.usb_xhci_port_link ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1431, gettimeofday_ns(), 24 + 8 + 8, pid(), port, pls)
}
probe qemu.kvm.simpletrace.usb_xhci_port_notify = qemu.kvm.usb_xhci_port_notify ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1432, gettimeofday_ns(), 24 + 8 + 8, pid(), port, pls)
}
probe qemu.kvm.simpletrace.usb_xhci_slot_enable = qemu.kvm.usb_xhci_slot_enable ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1433, gettimeofday_ns(), 24 + 8, pid(), slotid)
}
probe qemu.kvm.simpletrace.usb_xhci_slot_disable = qemu.kvm.usb_xhci_slot_disable ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1434, gettimeofday_ns(), 24 + 8, pid(), slotid)
}
probe qemu.kvm.simpletrace.usb_xhci_slot_address = qemu.kvm.usb_xhci_slot_address ?
{
    try {
        argport_str = port ? user_string_n(port, 512) : "<null>"
    } catch {}
    argport_len = strlen(argport_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 1435, gettimeofday_ns(), 24 + 8 + 4 + argport_len, pid(), slotid, argport_len, argport_len, argport_str)
}
probe qemu.kvm.simpletrace.usb_xhci_slot_configure = qemu.kvm.usb_xhci_slot_configure ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1436, gettimeofday_ns(), 24 + 8, pid(), slotid)
}
probe qemu.kvm.simpletrace.usb_xhci_slot_evaluate = qemu.kvm.usb_xhci_slot_evaluate ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1437, gettimeofday_ns(), 24 + 8, pid(), slotid)
}
probe qemu.kvm.simpletrace.usb_xhci_slot_reset = qemu.kvm.usb_xhci_slot_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1438, gettimeofday_ns(), 24 + 8, pid(), slotid)
}
probe qemu.kvm.simpletrace.usb_xhci_ep_enable = qemu.kvm.usb_xhci_ep_enable ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1439, gettimeofday_ns(), 24 + 8 + 8, pid(), slotid, epid)
}
probe qemu.kvm.simpletrace.usb_xhci_ep_disable = qemu.kvm.usb_xhci_ep_disable ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1440, gettimeofday_ns(), 24 + 8 + 8, pid(), slotid, epid)
}
probe qemu.kvm.simpletrace.usb_xhci_ep_set_dequeue = qemu.kvm.usb_xhci_ep_set_dequeue ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1441, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), slotid, epid, streamid, param)
}
probe qemu.kvm.simpletrace.usb_xhci_ep_kick = qemu.kvm.usb_xhci_ep_kick ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1442, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), slotid, epid, streamid)
}
probe qemu.kvm.simpletrace.usb_xhci_ep_stop = qemu.kvm.usb_xhci_ep_stop ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1443, gettimeofday_ns(), 24 + 8 + 8, pid(), slotid, epid)
}
probe qemu.kvm.simpletrace.usb_xhci_ep_reset = qemu.kvm.usb_xhci_ep_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1444, gettimeofday_ns(), 24 + 8 + 8, pid(), slotid, epid)
}
probe qemu.kvm.simpletrace.usb_xhci_ep_state = qemu.kvm.usb_xhci_ep_state ?
{
    try {
        argos_str = os ? user_string_n(os, 512) : "<null>"
    } catch {}
    argos_len = strlen(argos_str)
    try {
        argns_str = ns ? user_string_n(ns, 512) : "<null>"
    } catch {}
    argns_len = strlen(argns_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s%4b%.*s", 1, 1445, gettimeofday_ns(), 24 + 8 + 8 + 4 + argos_len + 4 + argns_len, pid(), slotid, epid, argos_len, argos_len, argos_str, argns_len, argns_len, argns_str)
}
probe qemu.kvm.simpletrace.usb_xhci_xfer_start = qemu.kvm.usb_xhci_xfer_start ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1446, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), xfer, slotid, epid, streamid)
}
probe qemu.kvm.simpletrace.usb_xhci_xfer_async = qemu.kvm.usb_xhci_xfer_async ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1447, gettimeofday_ns(), 24 + 8, pid(), xfer)
}
probe qemu.kvm.simpletrace.usb_xhci_xfer_nak = qemu.kvm.usb_xhci_xfer_nak ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1448, gettimeofday_ns(), 24 + 8, pid(), xfer)
}
probe qemu.kvm.simpletrace.usb_xhci_xfer_retry = qemu.kvm.usb_xhci_xfer_retry ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1449, gettimeofday_ns(), 24 + 8, pid(), xfer)
}
probe qemu.kvm.simpletrace.usb_xhci_xfer_success = qemu.kvm.usb_xhci_xfer_success ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1450, gettimeofday_ns(), 24 + 8 + 8, pid(), xfer, bytes)
}
probe qemu.kvm.simpletrace.usb_xhci_xfer_error = qemu.kvm.usb_xhci_xfer_error ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1451, gettimeofday_ns(), 24 + 8 + 8, pid(), xfer, ret)
}
probe qemu.kvm.simpletrace.usb_xhci_unimplemented = qemu.kvm.usb_xhci_unimplemented ?
{
    try {
        argitem_str = item ? user_string_n(item, 512) : "<null>"
    } catch {}
    argitem_len = strlen(argitem_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 1452, gettimeofday_ns(), 24 + 4 + argitem_len + 8, pid(), argitem_len, argitem_len, argitem_str, nr)
}
probe qemu.kvm.simpletrace.usb_xhci_enforced_limit = qemu.kvm.usb_xhci_enforced_limit ?
{
    try {
        argitem_str = item ? user_string_n(item, 512) : "<null>"
    } catch {}
    argitem_len = strlen(argitem_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 1453, gettimeofday_ns(), 24 + 4 + argitem_len, pid(), argitem_len, argitem_len, argitem_str)
}
probe qemu.kvm.simpletrace.usb_desc_device = qemu.kvm.usb_desc_device ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1454, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, len, ret)
}
probe qemu.kvm.simpletrace.usb_desc_device_qualifier = qemu.kvm.usb_desc_device_qualifier ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1455, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, len, ret)
}
probe qemu.kvm.simpletrace.usb_desc_config = qemu.kvm.usb_desc_config ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1456, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), addr, index, len, ret)
}
probe qemu.kvm.simpletrace.usb_desc_other_speed_config = qemu.kvm.usb_desc_other_speed_config ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1457, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), addr, index, len, ret)
}
probe qemu.kvm.simpletrace.usb_desc_string = qemu.kvm.usb_desc_string ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1458, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), addr, index, len, ret)
}
probe qemu.kvm.simpletrace.usb_desc_bos = qemu.kvm.usb_desc_bos ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1459, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, len, ret)
}
probe qemu.kvm.simpletrace.usb_desc_msos = qemu.kvm.usb_desc_msos ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1460, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), addr, index, len, ret)
}
probe qemu.kvm.simpletrace.usb_set_addr = qemu.kvm.usb_set_addr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1461, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.usb_set_config = qemu.kvm.usb_set_config ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1462, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, config, ret)
}
probe qemu.kvm.simpletrace.usb_set_interface = qemu.kvm.usb_set_interface ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1463, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), addr, iface, alt, ret)
}
probe qemu.kvm.simpletrace.usb_clear_device_feature = qemu.kvm.usb_clear_device_feature ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1464, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, feature, ret)
}
probe qemu.kvm.simpletrace.usb_set_device_feature = qemu.kvm.usb_set_device_feature ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1465, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, feature, ret)
}
probe qemu.kvm.simpletrace.usb_hub_reset = qemu.kvm.usb_hub_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1466, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.usb_hub_control = qemu.kvm.usb_hub_control ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1467, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), addr, request, value, index, length)
}
probe qemu.kvm.simpletrace.usb_hub_get_port_status = qemu.kvm.usb_hub_get_port_status ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1468, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), addr, nr, status, changed)
}
probe qemu.kvm.simpletrace.usb_hub_set_port_feature = qemu.kvm.usb_hub_set_port_feature ?
{
    try {
        argf_str = f ? user_string_n(f, 512) : "<null>"
    } catch {}
    argf_len = strlen(argf_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 1469, gettimeofday_ns(), 24 + 8 + 8 + 4 + argf_len, pid(), addr, nr, argf_len, argf_len, argf_str)
}
probe qemu.kvm.simpletrace.usb_hub_clear_port_feature = qemu.kvm.usb_hub_clear_port_feature ?
{
    try {
        argf_str = f ? user_string_n(f, 512) : "<null>"
    } catch {}
    argf_len = strlen(argf_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 1470, gettimeofday_ns(), 24 + 8 + 8 + 4 + argf_len, pid(), addr, nr, argf_len, argf_len, argf_str)
}
probe qemu.kvm.simpletrace.usb_hub_attach = qemu.kvm.usb_hub_attach ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1471, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, nr)
}
probe qemu.kvm.simpletrace.usb_hub_detach = qemu.kvm.usb_hub_detach ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1472, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, nr)
}
probe qemu.kvm.simpletrace.usb_hub_status_report = qemu.kvm.usb_hub_status_report ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1473, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, status)
}
probe qemu.kvm.simpletrace.usb_uas_reset = qemu.kvm.usb_uas_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1474, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.usb_uas_command = qemu.kvm.usb_uas_command ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1475, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), addr, tag, lun, lun64_1, lun64_2)
}
probe qemu.kvm.simpletrace.usb_uas_response = qemu.kvm.usb_uas_response ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1476, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, tag, code)
}
probe qemu.kvm.simpletrace.usb_uas_sense = qemu.kvm.usb_uas_sense ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1477, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, tag, status)
}
probe qemu.kvm.simpletrace.usb_uas_read_ready = qemu.kvm.usb_uas_read_ready ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1478, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, tag)
}
probe qemu.kvm.simpletrace.usb_uas_write_ready = qemu.kvm.usb_uas_write_ready ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1479, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, tag)
}
probe qemu.kvm.simpletrace.usb_uas_xfer_data = qemu.kvm.usb_uas_xfer_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b", 1, 1480, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), addr, tag, copy, uoff, usize, soff, ssize)
}
probe qemu.kvm.simpletrace.usb_uas_scsi_data = qemu.kvm.usb_uas_scsi_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1481, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, tag, bytes)
}
probe qemu.kvm.simpletrace.usb_uas_scsi_complete = qemu.kvm.usb_uas_scsi_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1482, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), addr, tag, status, resid)
}
probe qemu.kvm.simpletrace.usb_uas_tmf_abort_task = qemu.kvm.usb_uas_tmf_abort_task ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1483, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, tag, task_tag)
}
probe qemu.kvm.simpletrace.usb_uas_tmf_logical_unit_reset = qemu.kvm.usb_uas_tmf_logical_unit_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1484, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, tag, lun)
}
probe qemu.kvm.simpletrace.usb_uas_tmf_unsupported = qemu.kvm.usb_uas_tmf_unsupported ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1485, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, tag, function_)
}
probe qemu.kvm.simpletrace.usb_mtp_reset = qemu.kvm.usb_mtp_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1486, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.usb_mtp_command = qemu.kvm.usb_mtp_command ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b%8b", 1, 1487, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), dev, code, trans, arg0, arg1, arg2, arg3, arg4)
}
probe qemu.kvm.simpletrace.usb_mtp_success = qemu.kvm.usb_mtp_success ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1488, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), dev, trans, arg0, arg1)
}
probe qemu.kvm.simpletrace.usb_mtp_error = qemu.kvm.usb_mtp_error ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1489, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), dev, code, trans, arg0, arg1)
}
probe qemu.kvm.simpletrace.usb_mtp_data_in = qemu.kvm.usb_mtp_data_in ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1490, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), dev, trans, len)
}
probe qemu.kvm.simpletrace.usb_mtp_xfer = qemu.kvm.usb_mtp_xfer ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1491, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), dev, ep, dlen, plen)
}
probe qemu.kvm.simpletrace.usb_mtp_nak = qemu.kvm.usb_mtp_nak ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1492, gettimeofday_ns(), 24 + 8 + 8, pid(), dev, ep)
}
probe qemu.kvm.simpletrace.usb_mtp_stall = qemu.kvm.usb_mtp_stall ?
{
    try {
        argreason_str = reason ? user_string_n(reason, 512) : "<null>"
    } catch {}
    argreason_len = strlen(argreason_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 1493, gettimeofday_ns(), 24 + 8 + 4 + argreason_len, pid(), dev, argreason_len, argreason_len, argreason_str)
}
probe qemu.kvm.simpletrace.usb_mtp_op_get_device_info = qemu.kvm.usb_mtp_op_get_device_info ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1494, gettimeofday_ns(), 24 + 8, pid(), dev)
}
probe qemu.kvm.simpletrace.usb_mtp_op_open_session = qemu.kvm.usb_mtp_op_open_session ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1495, gettimeofday_ns(), 24 + 8, pid(), dev)
}
probe qemu.kvm.simpletrace.usb_mtp_op_close_session = qemu.kvm.usb_mtp_op_close_session ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1496, gettimeofday_ns(), 24 + 8, pid(), dev)
}
probe qemu.kvm.simpletrace.usb_mtp_op_get_storage_ids = qemu.kvm.usb_mtp_op_get_storage_ids ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1497, gettimeofday_ns(), 24 + 8, pid(), dev)
}
probe qemu.kvm.simpletrace.usb_mtp_op_get_storage_info = qemu.kvm.usb_mtp_op_get_storage_info ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1498, gettimeofday_ns(), 24 + 8, pid(), dev)
}
probe qemu.kvm.simpletrace.usb_mtp_op_get_num_objects = qemu.kvm.usb_mtp_op_get_num_objects ?
{
    try {
        argpath_str = path ? user_string_n(path, 512) : "<null>"
    } catch {}
    argpath_len = strlen(argpath_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 1499, gettimeofday_ns(), 24 + 8 + 8 + 4 + argpath_len, pid(), dev, handle, argpath_len, argpath_len, argpath_str)
}
probe qemu.kvm.simpletrace.usb_mtp_op_get_object_handles = qemu.kvm.usb_mtp_op_get_object_handles ?
{
    try {
        argpath_str = path ? user_string_n(path, 512) : "<null>"
    } catch {}
    argpath_len = strlen(argpath_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 1500, gettimeofday_ns(), 24 + 8 + 8 + 4 + argpath_len, pid(), dev, handle, argpath_len, argpath_len, argpath_str)
}
probe qemu.kvm.simpletrace.usb_mtp_op_get_object_info = qemu.kvm.usb_mtp_op_get_object_info ?
{
    try {
        argpath_str = path ? user_string_n(path, 512) : "<null>"
    } catch {}
    argpath_len = strlen(argpath_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 1501, gettimeofday_ns(), 24 + 8 + 8 + 4 + argpath_len, pid(), dev, handle, argpath_len, argpath_len, argpath_str)
}
probe qemu.kvm.simpletrace.usb_mtp_op_get_object = qemu.kvm.usb_mtp_op_get_object ?
{
    try {
        argpath_str = path ? user_string_n(path, 512) : "<null>"
    } catch {}
    argpath_len = strlen(argpath_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 1502, gettimeofday_ns(), 24 + 8 + 8 + 4 + argpath_len, pid(), dev, handle, argpath_len, argpath_len, argpath_str)
}
probe qemu.kvm.simpletrace.usb_mtp_op_get_partial_object = qemu.kvm.usb_mtp_op_get_partial_object ?
{
    try {
        argpath_str = path ? user_string_n(path, 512) : "<null>"
    } catch {}
    argpath_len = strlen(argpath_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s%8b%8b", 1, 1503, gettimeofday_ns(), 24 + 8 + 8 + 4 + argpath_len + 8 + 8, pid(), dev, handle, argpath_len, argpath_len, argpath_str, offset, length)
}
probe qemu.kvm.simpletrace.usb_mtp_op_unknown = qemu.kvm.usb_mtp_op_unknown ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1504, gettimeofday_ns(), 24 + 8 + 8, pid(), dev, code)
}
probe qemu.kvm.simpletrace.usb_mtp_object_alloc = qemu.kvm.usb_mtp_object_alloc ?
{
    try {
        argpath_str = path ? user_string_n(path, 512) : "<null>"
    } catch {}
    argpath_len = strlen(argpath_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 1505, gettimeofday_ns(), 24 + 8 + 8 + 4 + argpath_len, pid(), dev, handle, argpath_len, argpath_len, argpath_str)
}
probe qemu.kvm.simpletrace.usb_mtp_object_free = qemu.kvm.usb_mtp_object_free ?
{
    try {
        argpath_str = path ? user_string_n(path, 512) : "<null>"
    } catch {}
    argpath_len = strlen(argpath_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 1506, gettimeofday_ns(), 24 + 8 + 8 + 4 + argpath_len, pid(), dev, handle, argpath_len, argpath_len, argpath_str)
}
probe qemu.kvm.simpletrace.usb_mtp_add_child = qemu.kvm.usb_mtp_add_child ?
{
    try {
        argpath_str = path ? user_string_n(path, 512) : "<null>"
    } catch {}
    argpath_len = strlen(argpath_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 1507, gettimeofday_ns(), 24 + 8 + 8 + 4 + argpath_len, pid(), dev, handle, argpath_len, argpath_len, argpath_str)
}
probe qemu.kvm.simpletrace.usb_mtp_inotify_event = qemu.kvm.usb_mtp_inotify_event ?
{
    try {
        argpath_str = path ? user_string_n(path, 512) : "<null>"
    } catch {}
    argpath_len = strlen(argpath_str)
    try {
        args_str = s ? user_string_n(s, 512) : "<null>"
    } catch {}
    args_len = strlen(args_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%4b%.*s", 1, 1508, gettimeofday_ns(), 24 + 8 + 4 + argpath_len + 8 + 4 + args_len, pid(), dev, argpath_len, argpath_len, argpath_str, mask, args_len, args_len, args_str)
}
probe qemu.kvm.simpletrace.usb_host_open_started = qemu.kvm.usb_host_open_started ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1509, gettimeofday_ns(), 24 + 8 + 8, pid(), bus, addr)
}
probe qemu.kvm.simpletrace.usb_host_open_success = qemu.kvm.usb_host_open_success ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1510, gettimeofday_ns(), 24 + 8 + 8, pid(), bus, addr)
}
probe qemu.kvm.simpletrace.usb_host_open_failure = qemu.kvm.usb_host_open_failure ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1511, gettimeofday_ns(), 24 + 8 + 8, pid(), bus, addr)
}
probe qemu.kvm.simpletrace.usb_host_close = qemu.kvm.usb_host_close ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1512, gettimeofday_ns(), 24 + 8 + 8, pid(), bus, addr)
}
probe qemu.kvm.simpletrace.usb_host_attach_kernel = qemu.kvm.usb_host_attach_kernel ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1513, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bus, addr, interface)
}
probe qemu.kvm.simpletrace.usb_host_detach_kernel = qemu.kvm.usb_host_detach_kernel ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1514, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bus, addr, interface)
}
probe qemu.kvm.simpletrace.usb_host_set_address = qemu.kvm.usb_host_set_address ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1515, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bus, addr, config)
}
probe qemu.kvm.simpletrace.usb_host_set_config = qemu.kvm.usb_host_set_config ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1516, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bus, addr, config)
}
probe qemu.kvm.simpletrace.usb_host_set_interface = qemu.kvm.usb_host_set_interface ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1517, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), bus, addr, interface, alt)
}
probe qemu.kvm.simpletrace.usb_host_claim_interface = qemu.kvm.usb_host_claim_interface ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1518, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), bus, addr, config, interface)
}
probe qemu.kvm.simpletrace.usb_host_release_interface = qemu.kvm.usb_host_release_interface ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1519, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bus, addr, interface)
}
probe qemu.kvm.simpletrace.usb_host_req_control = qemu.kvm.usb_host_req_control ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1520, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), bus, addr, p, req, value, index)
}
probe qemu.kvm.simpletrace.usb_host_req_data = qemu.kvm.usb_host_req_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1521, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), bus, addr, p, in_, ep, size)
}
probe qemu.kvm.simpletrace.usb_host_req_complete = qemu.kvm.usb_host_req_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1522, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), bus, addr, p, status, length)
}
probe qemu.kvm.simpletrace.usb_host_req_emulated = qemu.kvm.usb_host_req_emulated ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1523, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), bus, addr, p, status)
}
probe qemu.kvm.simpletrace.usb_host_req_canceled = qemu.kvm.usb_host_req_canceled ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1524, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bus, addr, p)
}
probe qemu.kvm.simpletrace.usb_host_iso_start = qemu.kvm.usb_host_iso_start ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1525, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bus, addr, ep)
}
probe qemu.kvm.simpletrace.usb_host_iso_stop = qemu.kvm.usb_host_iso_stop ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1526, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bus, addr, ep)
}
probe qemu.kvm.simpletrace.usb_host_iso_out_of_bufs = qemu.kvm.usb_host_iso_out_of_bufs ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1527, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bus, addr, ep)
}
probe qemu.kvm.simpletrace.usb_host_reset = qemu.kvm.usb_host_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1528, gettimeofday_ns(), 24 + 8 + 8, pid(), bus, addr)
}
probe qemu.kvm.simpletrace.usb_host_auto_scan_enabled = qemu.kvm.usb_host_auto_scan_enabled ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1529, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_host_auto_scan_disabled = qemu.kvm.usb_host_auto_scan_disabled ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1530, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.usb_host_parse_config = qemu.kvm.usb_host_parse_config ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1531, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), bus, addr, value, active)
}
probe qemu.kvm.simpletrace.usb_host_parse_interface = qemu.kvm.usb_host_parse_interface ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1532, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), bus, addr, num, alt, active)
}
probe qemu.kvm.simpletrace.usb_host_parse_endpoint = qemu.kvm.usb_host_parse_endpoint ?
{
    try {
        argdir_str = dir ? user_string_n(dir, 512) : "<null>"
    } catch {}
    argdir_len = strlen(argdir_str)
    try {
        argtype_str = type ? user_string_n(type, 512) : "<null>"
    } catch {}
    argtype_len = strlen(argtype_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%4b%.*s%4b%.*s%8b", 1, 1533, gettimeofday_ns(), 24 + 8 + 8 + 8 + 4 + argdir_len + 4 + argtype_len + 8, pid(), bus, addr, ep, argdir_len, argdir_len, argdir_str, argtype_len, argtype_len, argtype_str, active)
}
probe qemu.kvm.simpletrace.usb_host_parse_error = qemu.kvm.usb_host_parse_error ?
{
    try {
        argerrmsg_str = errmsg ? user_string_n(errmsg, 512) : "<null>"
    } catch {}
    argerrmsg_len = strlen(argerrmsg_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 1534, gettimeofday_ns(), 24 + 8 + 8 + 4 + argerrmsg_len, pid(), bus, addr, argerrmsg_len, argerrmsg_len, argerrmsg_str)
}
probe qemu.kvm.simpletrace.scsi_req_alloc = qemu.kvm.scsi_req_alloc ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1535, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), target, lun, tag)
}
probe qemu.kvm.simpletrace.scsi_req_cancel = qemu.kvm.scsi_req_cancel ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1536, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), target, lun, tag)
}
probe qemu.kvm.simpletrace.scsi_req_data = qemu.kvm.scsi_req_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1537, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), target, lun, tag, len)
}
probe qemu.kvm.simpletrace.scsi_req_data_canceled = qemu.kvm.scsi_req_data_canceled ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1538, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), target, lun, tag, len)
}
probe qemu.kvm.simpletrace.scsi_req_dequeue = qemu.kvm.scsi_req_dequeue ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1539, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), target, lun, tag)
}
probe qemu.kvm.simpletrace.scsi_req_continue = qemu.kvm.scsi_req_continue ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1540, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), target, lun, tag)
}
probe qemu.kvm.simpletrace.scsi_req_continue_canceled = qemu.kvm.scsi_req_continue_canceled ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1541, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), target, lun, tag)
}
probe qemu.kvm.simpletrace.scsi_req_parsed = qemu.kvm.scsi_req_parsed ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1542, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), target, lun, tag, cmd, mode, xfer)
}
probe qemu.kvm.simpletrace.scsi_req_parsed_lba = qemu.kvm.scsi_req_parsed_lba ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1543, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), target, lun, tag, cmd, lba)
}
probe qemu.kvm.simpletrace.scsi_req_parse_bad = qemu.kvm.scsi_req_parse_bad ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1544, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), target, lun, tag, cmd)
}
probe qemu.kvm.simpletrace.scsi_req_build_sense = qemu.kvm.scsi_req_build_sense ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1545, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), target, lun, tag, key, asc, ascq)
}
probe qemu.kvm.simpletrace.scsi_device_set_ua = qemu.kvm.scsi_device_set_ua ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1546, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), target, lun, key, asc, ascq)
}
probe qemu.kvm.simpletrace.scsi_report_luns = qemu.kvm.scsi_report_luns ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1547, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), target, lun, tag)
}
probe qemu.kvm.simpletrace.scsi_inquiry = qemu.kvm.scsi_inquiry ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1548, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), target, lun, tag, cdb1, cdb2)
}
probe qemu.kvm.simpletrace.scsi_test_unit_ready = qemu.kvm.scsi_test_unit_ready ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1549, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), target, lun, tag)
}
probe qemu.kvm.simpletrace.scsi_request_sense = qemu.kvm.scsi_request_sense ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1550, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), target, lun, tag)
}
probe qemu.kvm.simpletrace.mptsas_command_complete = qemu.kvm.mptsas_command_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1551, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), dev, ctx, status, resid)
}
probe qemu.kvm.simpletrace.mptsas_diag_read = qemu.kvm.mptsas_diag_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1552, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), dev, addr, val)
}
probe qemu.kvm.simpletrace.mptsas_diag_write = qemu.kvm.mptsas_diag_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1553, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), dev, addr, val)
}
probe qemu.kvm.simpletrace.mptsas_irq_intx = qemu.kvm.mptsas_irq_intx ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1554, gettimeofday_ns(), 24 + 8 + 8, pid(), dev, level)
}
probe qemu.kvm.simpletrace.mptsas_irq_msi = qemu.kvm.mptsas_irq_msi ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1555, gettimeofday_ns(), 24 + 8, pid(), dev)
}
probe qemu.kvm.simpletrace.mptsas_mmio_read = qemu.kvm.mptsas_mmio_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1556, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), dev, addr, val)
}
probe qemu.kvm.simpletrace.mptsas_mmio_unhandled_read = qemu.kvm.mptsas_mmio_unhandled_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1557, gettimeofday_ns(), 24 + 8 + 8, pid(), dev, addr)
}
probe qemu.kvm.simpletrace.mptsas_mmio_unhandled_write = qemu.kvm.mptsas_mmio_unhandled_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1558, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), dev, addr, val)
}
probe qemu.kvm.simpletrace.mptsas_mmio_write = qemu.kvm.mptsas_mmio_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1559, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), dev, addr, val)
}
probe qemu.kvm.simpletrace.mptsas_process_message = qemu.kvm.mptsas_process_message ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1560, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), dev, msg, ctx)
}
probe qemu.kvm.simpletrace.mptsas_process_scsi_io_request = qemu.kvm.mptsas_process_scsi_io_request ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1561, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), dev, bus, target, lun, len)
}
probe qemu.kvm.simpletrace.mptsas_reset = qemu.kvm.mptsas_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1562, gettimeofday_ns(), 24 + 8, pid(), dev)
}
probe qemu.kvm.simpletrace.mptsas_scsi_overflow = qemu.kvm.mptsas_scsi_overflow ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1563, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), dev, ctx, req, found)
}
probe qemu.kvm.simpletrace.mptsas_sgl_overflow = qemu.kvm.mptsas_sgl_overflow ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1564, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), dev, ctx, req, found)
}
probe qemu.kvm.simpletrace.mptsas_unhandled_cmd = qemu.kvm.mptsas_unhandled_cmd ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1565, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), dev, ctx, msg_cmd)
}
probe qemu.kvm.simpletrace.mptsas_unhandled_doorbell_cmd = qemu.kvm.mptsas_unhandled_doorbell_cmd ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1566, gettimeofday_ns(), 24 + 8 + 8, pid(), dev, cmd)
}
probe qemu.kvm.simpletrace.mptsas_config_sas_device = qemu.kvm.mptsas_config_sas_device ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1567, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), dev, address, port, phy_handle, dev_handle, page)
}
probe qemu.kvm.simpletrace.mptsas_config_sas_phy = qemu.kvm.mptsas_config_sas_phy ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1568, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), dev, address, port, phy_handle, dev_handle, page)
}
probe qemu.kvm.simpletrace.megasas_init_firmware = qemu.kvm.megasas_init_firmware ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1569, gettimeofday_ns(), 24 + 8, pid(), pa)
}
probe qemu.kvm.simpletrace.megasas_init_queue = qemu.kvm.megasas_init_queue ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1570, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), queue_pa, queue_len, head, tail, flags)
}
probe qemu.kvm.simpletrace.megasas_initq_map_failed = qemu.kvm.megasas_initq_map_failed ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1571, gettimeofday_ns(), 24 + 8, pid(), frame)
}
probe qemu.kvm.simpletrace.megasas_initq_mapped = qemu.kvm.megasas_initq_mapped ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1572, gettimeofday_ns(), 24 + 8, pid(), pa)
}
probe qemu.kvm.simpletrace.megasas_initq_mismatch = qemu.kvm.megasas_initq_mismatch ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1573, gettimeofday_ns(), 24 + 8 + 8, pid(), queue_len, fw_cmds)
}
probe qemu.kvm.simpletrace.megasas_qf_mapped = qemu.kvm.megasas_qf_mapped ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1574, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.megasas_qf_new = qemu.kvm.megasas_qf_new ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1575, gettimeofday_ns(), 24 + 8 + 8, pid(), index, frame)
}
probe qemu.kvm.simpletrace.megasas_qf_busy = qemu.kvm.megasas_qf_busy ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1576, gettimeofday_ns(), 24 + 8, pid(), pa)
}
probe qemu.kvm.simpletrace.megasas_qf_enqueue = qemu.kvm.megasas_qf_enqueue ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1577, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), index, count, context, head, tail, busy)
}
probe qemu.kvm.simpletrace.megasas_qf_update = qemu.kvm.megasas_qf_update ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1578, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), head, tail, busy)
}
probe qemu.kvm.simpletrace.megasas_qf_map_failed = qemu.kvm.megasas_qf_map_failed ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1579, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, frame)
}
probe qemu.kvm.simpletrace.megasas_qf_complete_noirq = qemu.kvm.megasas_qf_complete_noirq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1580, gettimeofday_ns(), 24 + 8, pid(), context)
}
probe qemu.kvm.simpletrace.megasas_qf_complete = qemu.kvm.megasas_qf_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1581, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), context, head, tail, busy)
}
probe qemu.kvm.simpletrace.megasas_frame_busy = qemu.kvm.megasas_frame_busy ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1582, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.megasas_unhandled_frame_cmd = qemu.kvm.megasas_unhandled_frame_cmd ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1583, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, frame_cmd)
}
probe qemu.kvm.simpletrace.megasas_handle_scsi = qemu.kvm.megasas_handle_scsi ?
{
    try {
        argframe_str = frame ? user_string_n(frame, 512) : "<null>"
    } catch {}
    argframe_len = strlen(argframe_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b%8b%8b", 1, 1584, gettimeofday_ns(), 24 + 4 + argframe_len + 8 + 8 + 8 + 8 + 8, pid(), argframe_len, argframe_len, argframe_str, bus, dev, lun, sdev, size)
}
probe qemu.kvm.simpletrace.megasas_scsi_target_not_present = qemu.kvm.megasas_scsi_target_not_present ?
{
    try {
        argframe_str = frame ? user_string_n(frame, 512) : "<null>"
    } catch {}
    argframe_len = strlen(argframe_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 1585, gettimeofday_ns(), 24 + 4 + argframe_len + 8 + 8 + 8, pid(), argframe_len, argframe_len, argframe_str, bus, dev, lun)
}
probe qemu.kvm.simpletrace.megasas_scsi_invalid_cdb_len = qemu.kvm.megasas_scsi_invalid_cdb_len ?
{
    try {
        argframe_str = frame ? user_string_n(frame, 512) : "<null>"
    } catch {}
    argframe_len = strlen(argframe_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b%8b", 1, 1586, gettimeofday_ns(), 24 + 4 + argframe_len + 8 + 8 + 8 + 8, pid(), argframe_len, argframe_len, argframe_str, bus, dev, lun, len)
}
probe qemu.kvm.simpletrace.megasas_iov_read_overflow = qemu.kvm.megasas_iov_read_overflow ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1587, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cmd, bytes, len)
}
probe qemu.kvm.simpletrace.megasas_iov_write_overflow = qemu.kvm.megasas_iov_write_overflow ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1588, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cmd, bytes, len)
}
probe qemu.kvm.simpletrace.megasas_iov_read_underflow = qemu.kvm.megasas_iov_read_underflow ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1589, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cmd, bytes, len)
}
probe qemu.kvm.simpletrace.megasas_iov_write_underflow = qemu.kvm.megasas_iov_write_underflow ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1590, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cmd, bytes, len)
}
probe qemu.kvm.simpletrace.megasas_scsi_req_alloc_failed = qemu.kvm.megasas_scsi_req_alloc_failed ?
{
    try {
        argframe_str = frame ? user_string_n(frame, 512) : "<null>"
    } catch {}
    argframe_len = strlen(argframe_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 1591, gettimeofday_ns(), 24 + 4 + argframe_len + 8 + 8, pid(), argframe_len, argframe_len, argframe_str, dev, lun)
}
probe qemu.kvm.simpletrace.megasas_scsi_read_start = qemu.kvm.megasas_scsi_read_start ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1592, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, len)
}
probe qemu.kvm.simpletrace.megasas_scsi_write_start = qemu.kvm.megasas_scsi_write_start ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1593, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, len)
}
probe qemu.kvm.simpletrace.megasas_scsi_nodata = qemu.kvm.megasas_scsi_nodata ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1594, gettimeofday_ns(), 24 + 8, pid(), cmd)
}
probe qemu.kvm.simpletrace.megasas_scsi_complete = qemu.kvm.megasas_scsi_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1595, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), cmd, status, len, xfer)
}
probe qemu.kvm.simpletrace.megasas_command_complete = qemu.kvm.megasas_command_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1596, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cmd, status, resid)
}
probe qemu.kvm.simpletrace.megasas_handle_io = qemu.kvm.megasas_handle_io ?
{
    try {
        argframe_str = frame ? user_string_n(frame, 512) : "<null>"
    } catch {}
    argframe_len = strlen(argframe_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%8b%8b%8b", 1, 1597, gettimeofday_ns(), 24 + 8 + 4 + argframe_len + 8 + 8 + 8 + 8, pid(), cmd, argframe_len, argframe_len, argframe_str, dev, lun, lba, count)
}
probe qemu.kvm.simpletrace.megasas_io_target_not_present = qemu.kvm.megasas_io_target_not_present ?
{
    try {
        argframe_str = frame ? user_string_n(frame, 512) : "<null>"
    } catch {}
    argframe_len = strlen(argframe_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%8b", 1, 1598, gettimeofday_ns(), 24 + 8 + 4 + argframe_len + 8 + 8, pid(), cmd, argframe_len, argframe_len, argframe_str, dev, lun)
}
probe qemu.kvm.simpletrace.megasas_io_read_start = qemu.kvm.megasas_io_read_start ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1599, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), cmd, lba, count, len)
}
probe qemu.kvm.simpletrace.megasas_io_write_start = qemu.kvm.megasas_io_write_start ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1600, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), cmd, lba, count, len)
}
probe qemu.kvm.simpletrace.megasas_io_complete = qemu.kvm.megasas_io_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1601, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, len)
}
probe qemu.kvm.simpletrace.megasas_iovec_sgl_overflow = qemu.kvm.megasas_iovec_sgl_overflow ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1602, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cmd, index, limit_)
}
probe qemu.kvm.simpletrace.megasas_iovec_sgl_underflow = qemu.kvm.megasas_iovec_sgl_underflow ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1603, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, index)
}
probe qemu.kvm.simpletrace.megasas_iovec_sgl_invalid = qemu.kvm.megasas_iovec_sgl_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1604, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), cmd, index, pa, len)
}
probe qemu.kvm.simpletrace.megasas_iovec_overflow = qemu.kvm.megasas_iovec_overflow ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1605, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cmd, len, limit_)
}
probe qemu.kvm.simpletrace.megasas_iovec_underflow = qemu.kvm.megasas_iovec_underflow ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1606, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cmd, len, limit_)
}
probe qemu.kvm.simpletrace.megasas_handle_dcmd = qemu.kvm.megasas_handle_dcmd ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1607, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, opcode)
}
probe qemu.kvm.simpletrace.megasas_finish_dcmd = qemu.kvm.megasas_finish_dcmd ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1608, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, size)
}
probe qemu.kvm.simpletrace.megasas_dcmd_req_alloc_failed = qemu.kvm.megasas_dcmd_req_alloc_failed ?
{
    try {
        argdesc_str = desc ? user_string_n(desc, 512) : "<null>"
    } catch {}
    argdesc_len = strlen(argdesc_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 1609, gettimeofday_ns(), 24 + 8 + 4 + argdesc_len, pid(), cmd, argdesc_len, argdesc_len, argdesc_str)
}
probe qemu.kvm.simpletrace.megasas_dcmd_internal_submit = qemu.kvm.megasas_dcmd_internal_submit ?
{
    try {
        argdesc_str = desc ? user_string_n(desc, 512) : "<null>"
    } catch {}
    argdesc_len = strlen(argdesc_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 1610, gettimeofday_ns(), 24 + 8 + 4 + argdesc_len + 8, pid(), cmd, argdesc_len, argdesc_len, argdesc_str, dev)
}
probe qemu.kvm.simpletrace.megasas_dcmd_internal_finish = qemu.kvm.megasas_dcmd_internal_finish ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1611, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cmd, opcode, lun)
}
probe qemu.kvm.simpletrace.megasas_dcmd_internal_invalid = qemu.kvm.megasas_dcmd_internal_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1612, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, opcode)
}
probe qemu.kvm.simpletrace.megasas_dcmd_unhandled = qemu.kvm.megasas_dcmd_unhandled ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1613, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cmd, opcode, len)
}
probe qemu.kvm.simpletrace.megasas_dcmd_zero_sge = qemu.kvm.megasas_dcmd_zero_sge ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1614, gettimeofday_ns(), 24 + 8, pid(), cmd)
}
probe qemu.kvm.simpletrace.megasas_dcmd_invalid_sge = qemu.kvm.megasas_dcmd_invalid_sge ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1615, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, count)
}
probe qemu.kvm.simpletrace.megasas_dcmd_invalid_xfer_len = qemu.kvm.megasas_dcmd_invalid_xfer_len ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1616, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cmd, size, max)
}
probe qemu.kvm.simpletrace.megasas_dcmd_enter = qemu.kvm.megasas_dcmd_enter ?
{
    try {
        argdcmd_str = dcmd ? user_string_n(dcmd, 512) : "<null>"
    } catch {}
    argdcmd_len = strlen(argdcmd_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 1617, gettimeofday_ns(), 24 + 8 + 4 + argdcmd_len + 8, pid(), cmd, argdcmd_len, argdcmd_len, argdcmd_str, len)
}
probe qemu.kvm.simpletrace.megasas_dcmd_dummy = qemu.kvm.megasas_dcmd_dummy ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1618, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, size)
}
probe qemu.kvm.simpletrace.megasas_dcmd_set_fw_time = qemu.kvm.megasas_dcmd_set_fw_time ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1619, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, time)
}
probe qemu.kvm.simpletrace.megasas_dcmd_pd_get_list = qemu.kvm.megasas_dcmd_pd_get_list ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1620, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), cmd, num, max, offset)
}
probe qemu.kvm.simpletrace.megasas_dcmd_ld_get_list = qemu.kvm.megasas_dcmd_ld_get_list ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1621, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cmd, num, max)
}
probe qemu.kvm.simpletrace.megasas_dcmd_ld_get_info = qemu.kvm.megasas_dcmd_ld_get_info ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1622, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, ld_id)
}
probe qemu.kvm.simpletrace.megasas_dcmd_ld_list_query = qemu.kvm.megasas_dcmd_ld_list_query ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1623, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, flags)
}
probe qemu.kvm.simpletrace.megasas_dcmd_pd_get_info = qemu.kvm.megasas_dcmd_pd_get_info ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1624, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, pd_id)
}
probe qemu.kvm.simpletrace.megasas_dcmd_pd_list_query = qemu.kvm.megasas_dcmd_pd_list_query ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1625, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, flags)
}
probe qemu.kvm.simpletrace.megasas_dcmd_reset_ld = qemu.kvm.megasas_dcmd_reset_ld ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1626, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, target_id)
}
probe qemu.kvm.simpletrace.megasas_dcmd_unsupported = qemu.kvm.megasas_dcmd_unsupported ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1627, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, size)
}
probe qemu.kvm.simpletrace.megasas_abort_frame = qemu.kvm.megasas_abort_frame ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1628, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, abort_cmd)
}
probe qemu.kvm.simpletrace.megasas_abort_no_cmd = qemu.kvm.megasas_abort_no_cmd ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1629, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, context)
}
probe qemu.kvm.simpletrace.megasas_abort_invalid_context = qemu.kvm.megasas_abort_invalid_context ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1630, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cmd, context, abort_cmd)
}
probe qemu.kvm.simpletrace.megasas_reset = qemu.kvm.megasas_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1631, gettimeofday_ns(), 24 + 8, pid(), fw_state)
}
probe qemu.kvm.simpletrace.megasas_init = qemu.kvm.megasas_init ?
{
    try {
        argmode_str = mode ? user_string_n(mode, 512) : "<null>"
    } catch {}
    argmode_len = strlen(argmode_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 1632, gettimeofday_ns(), 24 + 8 + 8 + 4 + argmode_len, pid(), sges, cmds, argmode_len, argmode_len, argmode_str)
}
probe qemu.kvm.simpletrace.megasas_msix_raise = qemu.kvm.megasas_msix_raise ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1633, gettimeofday_ns(), 24 + 8, pid(), vector)
}
probe qemu.kvm.simpletrace.megasas_msi_raise = qemu.kvm.megasas_msi_raise ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1634, gettimeofday_ns(), 24 + 8, pid(), vector)
}
probe qemu.kvm.simpletrace.megasas_irq_lower = qemu.kvm.megasas_irq_lower ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1635, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.megasas_irq_raise = qemu.kvm.megasas_irq_raise ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1636, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.megasas_intr_enabled = qemu.kvm.megasas_intr_enabled ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1637, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.megasas_intr_disabled = qemu.kvm.megasas_intr_disabled ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1638, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.megasas_msix_enabled = qemu.kvm.megasas_msix_enabled ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1639, gettimeofday_ns(), 24 + 8, pid(), vector)
}
probe qemu.kvm.simpletrace.megasas_msi_enabled = qemu.kvm.megasas_msi_enabled ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1640, gettimeofday_ns(), 24 + 8, pid(), vector)
}
probe qemu.kvm.simpletrace.megasas_mmio_readl = qemu.kvm.megasas_mmio_readl ?
{
    try {
        argreg_str = reg ? user_string_n(reg, 512) : "<null>"
    } catch {}
    argreg_len = strlen(argreg_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 1641, gettimeofday_ns(), 24 + 4 + argreg_len + 8, pid(), argreg_len, argreg_len, argreg_str, val)
}
probe qemu.kvm.simpletrace.megasas_mmio_invalid_readl = qemu.kvm.megasas_mmio_invalid_readl ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1642, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.megasas_mmio_writel = qemu.kvm.megasas_mmio_writel ?
{
    try {
        argreg_str = reg ? user_string_n(reg, 512) : "<null>"
    } catch {}
    argreg_len = strlen(argreg_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 1643, gettimeofday_ns(), 24 + 4 + argreg_len + 8, pid(), argreg_len, argreg_len, argreg_str, val)
}
probe qemu.kvm.simpletrace.megasas_mmio_invalid_writel = qemu.kvm.megasas_mmio_invalid_writel ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1644, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.pvscsi_ring_init_data = qemu.kvm.pvscsi_ring_init_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1645, gettimeofday_ns(), 24 + 8 + 8, pid(), txr_len_log2, rxr_len_log2)
}
probe qemu.kvm.simpletrace.pvscsi_ring_init_msg = qemu.kvm.pvscsi_ring_init_msg ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1646, gettimeofday_ns(), 24 + 8, pid(), len_log2)
}
probe qemu.kvm.simpletrace.pvscsi_ring_flush_cmp = qemu.kvm.pvscsi_ring_flush_cmp ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1647, gettimeofday_ns(), 24 + 8, pid(), filled_cmp_ptr)
}
probe qemu.kvm.simpletrace.pvscsi_ring_flush_msg = qemu.kvm.pvscsi_ring_flush_msg ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1648, gettimeofday_ns(), 24 + 8, pid(), filled_cmp_ptr)
}
probe qemu.kvm.simpletrace.pvscsi_update_irq_level = qemu.kvm.pvscsi_update_irq_level ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1649, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), raise, mask, status)
}
probe qemu.kvm.simpletrace.pvscsi_update_irq_msi = qemu.kvm.pvscsi_update_irq_msi ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1650, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.pvscsi_cmp_ring_put = qemu.kvm.pvscsi_cmp_ring_put ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1651, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.pvscsi_msg_ring_put = qemu.kvm.pvscsi_msg_ring_put ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1652, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.pvscsi_complete_request = qemu.kvm.pvscsi_complete_request ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1653, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), context, len, sense_key)
}
probe qemu.kvm.simpletrace.pvscsi_get_sg_list = qemu.kvm.pvscsi_get_sg_list ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1654, gettimeofday_ns(), 24 + 8 + 8, pid(), nsg, size)
}
probe qemu.kvm.simpletrace.pvscsi_get_next_sg_elem = qemu.kvm.pvscsi_get_next_sg_elem ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1655, gettimeofday_ns(), 24 + 8, pid(), flags)
}
probe qemu.kvm.simpletrace.pvscsi_command_complete_not_found = qemu.kvm.pvscsi_command_complete_not_found ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1656, gettimeofday_ns(), 24 + 8, pid(), tag)
}
probe qemu.kvm.simpletrace.pvscsi_command_complete_data_run = qemu.kvm.pvscsi_command_complete_data_run ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1657, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.pvscsi_command_complete_sense_len = qemu.kvm.pvscsi_command_complete_sense_len ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1658, gettimeofday_ns(), 24 + 8, pid(), len)
}
probe qemu.kvm.simpletrace.pvscsi_convert_sglist = qemu.kvm.pvscsi_convert_sglist ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1659, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), context, addr, resid)
}
probe qemu.kvm.simpletrace.pvscsi_process_req_descr = qemu.kvm.pvscsi_process_req_descr ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1660, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, ctx)
}
probe qemu.kvm.simpletrace.pvscsi_process_req_descr_unknown_device = qemu.kvm.pvscsi_process_req_descr_unknown_device ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1661, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.pvscsi_process_req_descr_invalid_dir = qemu.kvm.pvscsi_process_req_descr_invalid_dir ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1662, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.pvscsi_process_io = qemu.kvm.pvscsi_process_io ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1663, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.pvscsi_on_cmd_noimpl = qemu.kvm.pvscsi_on_cmd_noimpl ?
{
    try {
        argcmd_str = cmd ? user_string_n(cmd, 512) : "<null>"
    } catch {}
    argcmd_len = strlen(argcmd_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 1664, gettimeofday_ns(), 24 + 4 + argcmd_len, pid(), argcmd_len, argcmd_len, argcmd_str)
}
probe qemu.kvm.simpletrace.pvscsi_on_cmd_reset_dev = qemu.kvm.pvscsi_on_cmd_reset_dev ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1665, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), tgt, lun, dev)
}
probe qemu.kvm.simpletrace.pvscsi_on_cmd_arrived = qemu.kvm.pvscsi_on_cmd_arrived ?
{
    try {
        argcmd_str = cmd ? user_string_n(cmd, 512) : "<null>"
    } catch {}
    argcmd_len = strlen(argcmd_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 1666, gettimeofday_ns(), 24 + 4 + argcmd_len, pid(), argcmd_len, argcmd_len, argcmd_str)
}
probe qemu.kvm.simpletrace.pvscsi_on_cmd_abort = qemu.kvm.pvscsi_on_cmd_abort ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1667, gettimeofday_ns(), 24 + 8 + 8, pid(), ctx, tgt)
}
probe qemu.kvm.simpletrace.pvscsi_on_cmd_unknown = qemu.kvm.pvscsi_on_cmd_unknown ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1668, gettimeofday_ns(), 24 + 8, pid(), cmd_id)
}
probe qemu.kvm.simpletrace.pvscsi_on_cmd_unknown_data = qemu.kvm.pvscsi_on_cmd_unknown_data ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1669, gettimeofday_ns(), 24 + 8, pid(), data)
}
probe qemu.kvm.simpletrace.pvscsi_io_write = qemu.kvm.pvscsi_io_write ?
{
    try {
        argcmd_str = cmd ? user_string_n(cmd, 512) : "<null>"
    } catch {}
    argcmd_len = strlen(argcmd_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 1670, gettimeofday_ns(), 24 + 4 + argcmd_len + 8, pid(), argcmd_len, argcmd_len, argcmd_str, val)
}
probe qemu.kvm.simpletrace.pvscsi_io_write_unknown = qemu.kvm.pvscsi_io_write_unknown ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1671, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, sz, val)
}
probe qemu.kvm.simpletrace.pvscsi_io_read = qemu.kvm.pvscsi_io_read ?
{
    try {
        argcmd_str = cmd ? user_string_n(cmd, 512) : "<null>"
    } catch {}
    argcmd_len = strlen(argcmd_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 1672, gettimeofday_ns(), 24 + 4 + argcmd_len + 8, pid(), argcmd_len, argcmd_len, argcmd_str, status)
}
probe qemu.kvm.simpletrace.pvscsi_io_read_unknown = qemu.kvm.pvscsi_io_read_unknown ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1673, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, sz)
}
probe qemu.kvm.simpletrace.pvscsi_init_msi_fail = qemu.kvm.pvscsi_init_msi_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1674, gettimeofday_ns(), 24 + 8, pid(), res)
}
probe qemu.kvm.simpletrace.pvscsi_state = qemu.kvm.pvscsi_state ?
{
    try {
        argstate_str = state ? user_string_n(state, 512) : "<null>"
    } catch {}
    argstate_len = strlen(argstate_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 1675, gettimeofday_ns(), 24 + 4 + argstate_len, pid(), argstate_len, argstate_len, argstate_str)
}
probe qemu.kvm.simpletrace.pvscsi_tx_rings_ppn = qemu.kvm.pvscsi_tx_rings_ppn ?
{
    try {
        arglabel_str = label ? user_string_n(label, 512) : "<null>"
    } catch {}
    arglabel_len = strlen(arglabel_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 1676, gettimeofday_ns(), 24 + 4 + arglabel_len + 8, pid(), arglabel_len, arglabel_len, arglabel_str, ppn)
}
probe qemu.kvm.simpletrace.pvscsi_tx_rings_num_pages = qemu.kvm.pvscsi_tx_rings_num_pages ?
{
    try {
        arglabel_str = label ? user_string_n(label, 512) : "<null>"
    } catch {}
    arglabel_len = strlen(arglabel_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 1677, gettimeofday_ns(), 24 + 4 + arglabel_len + 8, pid(), arglabel_len, arglabel_len, arglabel_str, num)
}
probe qemu.kvm.simpletrace.esp_error_fifo_overrun = qemu.kvm.esp_error_fifo_overrun ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1678, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.esp_error_unhandled_command = qemu.kvm.esp_error_unhandled_command ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1679, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_error_invalid_write = qemu.kvm.esp_error_invalid_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1680, gettimeofday_ns(), 24 + 8 + 8, pid(), val, addr)
}
probe qemu.kvm.simpletrace.esp_raise_irq = qemu.kvm.esp_raise_irq ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1681, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.esp_lower_irq = qemu.kvm.esp_lower_irq ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1682, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.esp_dma_enable = qemu.kvm.esp_dma_enable ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1683, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.esp_dma_disable = qemu.kvm.esp_dma_disable ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1684, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.esp_get_cmd = qemu.kvm.esp_get_cmd ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1685, gettimeofday_ns(), 24 + 8 + 8, pid(), dmalen, target)
}
probe qemu.kvm.simpletrace.esp_do_busid_cmd = qemu.kvm.esp_do_busid_cmd ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1686, gettimeofday_ns(), 24 + 8, pid(), busid)
}
probe qemu.kvm.simpletrace.esp_handle_satn_stop = qemu.kvm.esp_handle_satn_stop ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1687, gettimeofday_ns(), 24 + 8, pid(), cmdlen)
}
probe qemu.kvm.simpletrace.esp_write_response = qemu.kvm.esp_write_response ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1688, gettimeofday_ns(), 24 + 8, pid(), status)
}
probe qemu.kvm.simpletrace.esp_do_dma = qemu.kvm.esp_do_dma ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1689, gettimeofday_ns(), 24 + 8 + 8, pid(), cmdlen, len)
}
probe qemu.kvm.simpletrace.esp_command_complete = qemu.kvm.esp_command_complete ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1690, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.esp_command_complete_unexpected = qemu.kvm.esp_command_complete_unexpected ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1691, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.esp_command_complete_fail = qemu.kvm.esp_command_complete_fail ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1692, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.esp_transfer_data = qemu.kvm.esp_transfer_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1693, gettimeofday_ns(), 24 + 8 + 8, pid(), dma_left, ti_size)
}
probe qemu.kvm.simpletrace.esp_handle_ti = qemu.kvm.esp_handle_ti ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1694, gettimeofday_ns(), 24 + 8, pid(), minlen)
}
probe qemu.kvm.simpletrace.esp_handle_ti_cmd = qemu.kvm.esp_handle_ti_cmd ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1695, gettimeofday_ns(), 24 + 8, pid(), cmdlen)
}
probe qemu.kvm.simpletrace.esp_mem_readb = qemu.kvm.esp_mem_readb ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1696, gettimeofday_ns(), 24 + 8 + 8, pid(), saddr, reg)
}
probe qemu.kvm.simpletrace.esp_mem_writeb = qemu.kvm.esp_mem_writeb ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1697, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), saddr, reg, val)
}
probe qemu.kvm.simpletrace.esp_mem_writeb_cmd_nop = qemu.kvm.esp_mem_writeb_cmd_nop ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1698, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_mem_writeb_cmd_flush = qemu.kvm.esp_mem_writeb_cmd_flush ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1699, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_mem_writeb_cmd_reset = qemu.kvm.esp_mem_writeb_cmd_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1700, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_mem_writeb_cmd_bus_reset = qemu.kvm.esp_mem_writeb_cmd_bus_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1701, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_mem_writeb_cmd_iccs = qemu.kvm.esp_mem_writeb_cmd_iccs ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1702, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_mem_writeb_cmd_msgacc = qemu.kvm.esp_mem_writeb_cmd_msgacc ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1703, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_mem_writeb_cmd_pad = qemu.kvm.esp_mem_writeb_cmd_pad ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1704, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_mem_writeb_cmd_satn = qemu.kvm.esp_mem_writeb_cmd_satn ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1705, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_mem_writeb_cmd_rstatn = qemu.kvm.esp_mem_writeb_cmd_rstatn ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1706, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_mem_writeb_cmd_sel = qemu.kvm.esp_mem_writeb_cmd_sel ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1707, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_mem_writeb_cmd_selatn = qemu.kvm.esp_mem_writeb_cmd_selatn ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1708, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_mem_writeb_cmd_selatns = qemu.kvm.esp_mem_writeb_cmd_selatns ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1709, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_mem_writeb_cmd_ensel = qemu.kvm.esp_mem_writeb_cmd_ensel ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1710, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_mem_writeb_cmd_dissel = qemu.kvm.esp_mem_writeb_cmd_dissel ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1711, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_pci_error_invalid_dma_direction = qemu.kvm.esp_pci_error_invalid_dma_direction ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1712, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.esp_pci_error_invalid_read = qemu.kvm.esp_pci_error_invalid_read ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1713, gettimeofday_ns(), 24 + 8, pid(), reg)
}
probe qemu.kvm.simpletrace.esp_pci_error_invalid_write = qemu.kvm.esp_pci_error_invalid_write ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1714, gettimeofday_ns(), 24 + 8, pid(), reg)
}
probe qemu.kvm.simpletrace.esp_pci_error_invalid_write_dma = qemu.kvm.esp_pci_error_invalid_write_dma ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1715, gettimeofday_ns(), 24 + 8 + 8, pid(), val, addr)
}
probe qemu.kvm.simpletrace.esp_pci_dma_read = qemu.kvm.esp_pci_dma_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1716, gettimeofday_ns(), 24 + 8 + 8, pid(), saddr, reg)
}
probe qemu.kvm.simpletrace.esp_pci_dma_write = qemu.kvm.esp_pci_dma_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1717, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), saddr, reg, val)
}
probe qemu.kvm.simpletrace.esp_pci_dma_idle = qemu.kvm.esp_pci_dma_idle ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1718, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_pci_dma_blast = qemu.kvm.esp_pci_dma_blast ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1719, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_pci_dma_abort = qemu.kvm.esp_pci_dma_abort ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1720, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_pci_dma_start = qemu.kvm.esp_pci_dma_start ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1721, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.esp_pci_sbac_read = qemu.kvm.esp_pci_sbac_read ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1722, gettimeofday_ns(), 24 + 8, pid(), reg)
}
probe qemu.kvm.simpletrace.esp_pci_sbac_write = qemu.kvm.esp_pci_sbac_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1723, gettimeofday_ns(), 24 + 8 + 8, pid(), reg, val)
}
probe qemu.kvm.simpletrace.spapr_vscsi_send_rsp = qemu.kvm.spapr_vscsi_send_rsp ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1724, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), status, res_in, res_out)
}
probe qemu.kvm.simpletrace.spapr_vscsi_fetch_desc_no_data = qemu.kvm.spapr_vscsi_fetch_desc_no_data ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1725, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.spapr_vscsi_fetch_desc_direct = qemu.kvm.spapr_vscsi_fetch_desc_direct ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1726, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.spapr_vscsi_fetch_desc_indirect = qemu.kvm.spapr_vscsi_fetch_desc_indirect ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1727, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qtag, desc, local_desc)
}
probe qemu.kvm.simpletrace.spapr_vscsi_fetch_desc_out_of_range = qemu.kvm.spapr_vscsi_fetch_desc_out_of_range ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1728, gettimeofday_ns(), 24 + 8 + 8, pid(), desc, desc_offset)
}
probe qemu.kvm.simpletrace.spapr_vscsi_fetch_desc_dma_read_error = qemu.kvm.spapr_vscsi_fetch_desc_dma_read_error ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1729, gettimeofday_ns(), 24 + 8, pid(), rc)
}
probe qemu.kvm.simpletrace.spapr_vscsi_fetch_desc_indirect_seg_ext = qemu.kvm.spapr_vscsi_fetch_desc_indirect_seg_ext ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1730, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), qtag, n, desc, va, len)
}
probe qemu.kvm.simpletrace.spapr_vscsi_fetch_desc_out_of_desc = qemu.kvm.spapr_vscsi_fetch_desc_out_of_desc ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1731, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.spapr_vscsi_fetch_desc_out_of_desc_boundary = qemu.kvm.spapr_vscsi_fetch_desc_out_of_desc_boundary ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1732, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, desc, len)
}
probe qemu.kvm.simpletrace.spapr_vscsi_fetch_desc_done = qemu.kvm.spapr_vscsi_fetch_desc_done ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1733, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), desc_num, desc_offset, va, len)
}
probe qemu.kvm.simpletrace.spapr_vscsi_srp_indirect_data = qemu.kvm.spapr_vscsi_srp_indirect_data ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1734, gettimeofday_ns(), 24 + 8, pid(), len)
}
probe qemu.kvm.simpletrace.spapr_vscsi_srp_indirect_data_rw = qemu.kvm.spapr_vscsi_srp_indirect_data_rw ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1735, gettimeofday_ns(), 24 + 8 + 8, pid(), writing, rc)
}
probe qemu.kvm.simpletrace.spapr_vscsi_srp_indirect_data_buf = qemu.kvm.spapr_vscsi_srp_indirect_data_buf ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1736, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), a, b, c, d)
}
probe qemu.kvm.simpletrace.spapr_vscsi_srp_transfer_data = qemu.kvm.spapr_vscsi_srp_transfer_data ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1737, gettimeofday_ns(), 24 + 8, pid(), len)
}
probe qemu.kvm.simpletrace.spapr_vscsi_transfer_data = qemu.kvm.spapr_vscsi_transfer_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1738, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), tag, len, req)
}
probe qemu.kvm.simpletrace.spapr_vscsi_command_complete = qemu.kvm.spapr_vscsi_command_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1739, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), tag, status, req)
}
probe qemu.kvm.simpletrace.spapr_vscsi_command_complete_sense_data1 = qemu.kvm.spapr_vscsi_command_complete_sense_data1 ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b%8b%8b", 1, 1740, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), len, s0, s1, s2, s3, s4, s5, s6, s7)
}
probe qemu.kvm.simpletrace.spapr_vscsi_command_complete_sense_data2 = qemu.kvm.spapr_vscsi_command_complete_sense_data2 ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b%8b", 1, 1741, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), s8, s9, s10, s11, s12, s13, s14, s15)
}
probe qemu.kvm.simpletrace.spapr_vscsi_command_complete_status = qemu.kvm.spapr_vscsi_command_complete_status ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1742, gettimeofday_ns(), 24 + 8, pid(), status)
}
probe qemu.kvm.simpletrace.spapr_vscsi_save_request = qemu.kvm.spapr_vscsi_save_request ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1743, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qtag, desc, offset)
}
probe qemu.kvm.simpletrace.spapr_vscsi_load_request = qemu.kvm.spapr_vscsi_load_request ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1744, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qtag, desc, offset)
}
probe qemu.kvm.simpletrace.spapr_vscsi_process_login = qemu.kvm.spapr_vscsi_process_login ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1745, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.spapr_vscsi_queue_cmd_no_drive = qemu.kvm.spapr_vscsi_queue_cmd_no_drive ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1746, gettimeofday_ns(), 24 + 8, pid(), lun)
}
probe qemu.kvm.simpletrace.spapr_vscsi_queue_cmd = qemu.kvm.spapr_vscsi_queue_cmd ?
{
    try {
        argcmd_str = cmd ? user_string_n(cmd, 512) : "<null>"
    } catch {}
    argcmd_len = strlen(argcmd_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s%8b%8b", 1, 1747, gettimeofday_ns(), 24 + 8 + 8 + 4 + argcmd_len + 8 + 8, pid(), qtag, cdb, argcmd_len, argcmd_len, argcmd_str, lun, ret)
}
probe qemu.kvm.simpletrace.spapr_vscsi_do_crq = qemu.kvm.spapr_vscsi_do_crq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1748, gettimeofday_ns(), 24 + 8 + 8, pid(), c0, c1)
}
probe qemu.kvm.simpletrace.nvram_read = qemu.kvm.nvram_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1749, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, ret)
}
probe qemu.kvm.simpletrace.nvram_write = qemu.kvm.nvram_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1750, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, old, val)
}
probe qemu.kvm.simpletrace.fw_cfg_select = qemu.kvm.fw_cfg_select ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1751, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, key, ret)
}
probe qemu.kvm.simpletrace.fw_cfg_read = qemu.kvm.fw_cfg_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1752, gettimeofday_ns(), 24 + 8 + 8, pid(), s, ret)
}
probe qemu.kvm.simpletrace.fw_cfg_add_file = qemu.kvm.fw_cfg_add_file ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s%8b", 1, 1753, gettimeofday_ns(), 24 + 8 + 8 + 4 + argname_len + 8, pid(), s, index, argname_len, argname_len, argname_str, len)
}
probe qemu.kvm.simpletrace.jazz_led_read = qemu.kvm.jazz_led_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1754, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.jazz_led_write = qemu.kvm.jazz_led_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1755, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, new)
}
probe qemu.kvm.simpletrace.xenfb_mouse_event = qemu.kvm.xenfb_mouse_event ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1756, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), opaque, dx, dy, dz, button_state, abs_pointer_wanted)
}
probe qemu.kvm.simpletrace.xenfb_key_event = qemu.kvm.xenfb_key_event ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1757, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), opaque, scancode, button_state)
}
probe qemu.kvm.simpletrace.xenfb_input_connected = qemu.kvm.xenfb_input_connected ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1758, gettimeofday_ns(), 24 + 8 + 8, pid(), xendev, abs_pointer_wanted)
}
probe qemu.kvm.simpletrace.g364fb_read = qemu.kvm.g364fb_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1759, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.g364fb_write = qemu.kvm.g364fb_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1760, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, new)
}
probe qemu.kvm.simpletrace.milkymist_tmu2_memory_read = qemu.kvm.milkymist_tmu2_memory_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1761, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.milkymist_tmu2_memory_write = qemu.kvm.milkymist_tmu2_memory_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1762, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.milkymist_tmu2_start = qemu.kvm.milkymist_tmu2_start ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1763, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.milkymist_tmu2_pulse_irq = qemu.kvm.milkymist_tmu2_pulse_irq ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1764, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.milkymist_vgafb_memory_read = qemu.kvm.milkymist_vgafb_memory_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1765, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.milkymist_vgafb_memory_write = qemu.kvm.milkymist_vgafb_memory_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1766, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.vmware_value_read = qemu.kvm.vmware_value_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1767, gettimeofday_ns(), 24 + 8 + 8, pid(), index, value)
}
probe qemu.kvm.simpletrace.vmware_value_write = qemu.kvm.vmware_value_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1768, gettimeofday_ns(), 24 + 8 + 8, pid(), index, value)
}
probe qemu.kvm.simpletrace.vmware_palette_read = qemu.kvm.vmware_palette_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1769, gettimeofday_ns(), 24 + 8 + 8, pid(), index, value)
}
probe qemu.kvm.simpletrace.vmware_palette_write = qemu.kvm.vmware_palette_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1770, gettimeofday_ns(), 24 + 8 + 8, pid(), index, value)
}
probe qemu.kvm.simpletrace.vmware_scratch_read = qemu.kvm.vmware_scratch_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1771, gettimeofday_ns(), 24 + 8 + 8, pid(), index, value)
}
probe qemu.kvm.simpletrace.vmware_scratch_write = qemu.kvm.vmware_scratch_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1772, gettimeofday_ns(), 24 + 8 + 8, pid(), index, value)
}
probe qemu.kvm.simpletrace.vmware_setmode = qemu.kvm.vmware_setmode ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1773, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), w, h, bpp)
}
probe qemu.kvm.simpletrace.virtio_gpu_features = qemu.kvm.virtio_gpu_features ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1774, gettimeofday_ns(), 24 + 8, pid(), virgl)
}
probe qemu.kvm.simpletrace.virtio_gpu_cmd_get_display_info = qemu.kvm.virtio_gpu_cmd_get_display_info ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1775, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.virtio_gpu_cmd_set_scanout = qemu.kvm.virtio_gpu_cmd_set_scanout ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1776, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), id, res, w, h, x, y)
}
probe qemu.kvm.simpletrace.virtio_gpu_cmd_res_create_2d = qemu.kvm.virtio_gpu_cmd_res_create_2d ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1777, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), res, fmt, w, h)
}
probe qemu.kvm.simpletrace.virtio_gpu_cmd_res_create_3d = qemu.kvm.virtio_gpu_cmd_res_create_3d ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1778, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), res, fmt, w, h, d)
}
probe qemu.kvm.simpletrace.virtio_gpu_cmd_res_unref = qemu.kvm.virtio_gpu_cmd_res_unref ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1779, gettimeofday_ns(), 24 + 8, pid(), res)
}
probe qemu.kvm.simpletrace.virtio_gpu_cmd_res_back_attach = qemu.kvm.virtio_gpu_cmd_res_back_attach ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1780, gettimeofday_ns(), 24 + 8, pid(), res)
}
probe qemu.kvm.simpletrace.virtio_gpu_cmd_res_back_detach = qemu.kvm.virtio_gpu_cmd_res_back_detach ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1781, gettimeofday_ns(), 24 + 8, pid(), res)
}
probe qemu.kvm.simpletrace.virtio_gpu_cmd_res_xfer_toh_2d = qemu.kvm.virtio_gpu_cmd_res_xfer_toh_2d ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1782, gettimeofday_ns(), 24 + 8, pid(), res)
}
probe qemu.kvm.simpletrace.virtio_gpu_cmd_res_xfer_toh_3d = qemu.kvm.virtio_gpu_cmd_res_xfer_toh_3d ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1783, gettimeofday_ns(), 24 + 8, pid(), res)
}
probe qemu.kvm.simpletrace.virtio_gpu_cmd_res_xfer_fromh_3d = qemu.kvm.virtio_gpu_cmd_res_xfer_fromh_3d ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1784, gettimeofday_ns(), 24 + 8, pid(), res)
}
probe qemu.kvm.simpletrace.virtio_gpu_cmd_res_flush = qemu.kvm.virtio_gpu_cmd_res_flush ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1785, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), res, w, h, x, y)
}
probe qemu.kvm.simpletrace.virtio_gpu_cmd_ctx_create = qemu.kvm.virtio_gpu_cmd_ctx_create ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 1786, gettimeofday_ns(), 24 + 8 + 4 + argname_len, pid(), ctx, argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.virtio_gpu_cmd_ctx_destroy = qemu.kvm.virtio_gpu_cmd_ctx_destroy ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1787, gettimeofday_ns(), 24 + 8, pid(), ctx)
}
probe qemu.kvm.simpletrace.virtio_gpu_cmd_ctx_res_attach = qemu.kvm.virtio_gpu_cmd_ctx_res_attach ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1788, gettimeofday_ns(), 24 + 8 + 8, pid(), ctx, res)
}
probe qemu.kvm.simpletrace.virtio_gpu_cmd_ctx_res_detach = qemu.kvm.virtio_gpu_cmd_ctx_res_detach ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1789, gettimeofday_ns(), 24 + 8 + 8, pid(), ctx, res)
}
probe qemu.kvm.simpletrace.virtio_gpu_cmd_ctx_submit = qemu.kvm.virtio_gpu_cmd_ctx_submit ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1790, gettimeofday_ns(), 24 + 8 + 8, pid(), ctx, size)
}
probe qemu.kvm.simpletrace.virtio_gpu_update_cursor = qemu.kvm.virtio_gpu_update_cursor ?
{
    try {
        argtype_str = type ? user_string_n(type, 512) : "<null>"
    } catch {}
    argtype_len = strlen(argtype_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%4b%.*s%8b", 1, 1791, gettimeofday_ns(), 24 + 8 + 8 + 8 + 4 + argtype_len + 8, pid(), scanout, x, y, argtype_len, argtype_len, argtype_str, res)
}
probe qemu.kvm.simpletrace.virtio_gpu_fence_ctrl = qemu.kvm.virtio_gpu_fence_ctrl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1792, gettimeofday_ns(), 24 + 8 + 8, pid(), fence, type)
}
probe qemu.kvm.simpletrace.virtio_gpu_fence_resp = qemu.kvm.virtio_gpu_fence_resp ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1793, gettimeofday_ns(), 24 + 8, pid(), fence)
}
probe qemu.kvm.simpletrace.qxl_create_guest_primary = qemu.kvm.qxl_create_guest_primary ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1796, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), qid, width, height, mem, format, position)
}
probe qemu.kvm.simpletrace.qxl_create_guest_primary_rest = qemu.kvm.qxl_create_guest_primary_rest ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1797, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), qid, stride, type, flags)
}
probe qemu.kvm.simpletrace.qxl_destroy_primary = qemu.kvm.qxl_destroy_primary ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1798, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_enter_vga_mode = qemu.kvm.qxl_enter_vga_mode ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1799, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_exit_vga_mode = qemu.kvm.qxl_exit_vga_mode ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1800, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_hard_reset = qemu.kvm.qxl_hard_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1801, gettimeofday_ns(), 24 + 8 + 8, pid(), qid, loadvm)
}
probe qemu.kvm.simpletrace.qxl_interface_async_complete_io = qemu.kvm.qxl_interface_async_complete_io ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1802, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qid, current_async, cookie)
}
probe qemu.kvm.simpletrace.qxl_interface_attach_worker = qemu.kvm.qxl_interface_attach_worker ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1803, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_interface_get_init_info = qemu.kvm.qxl_interface_get_init_info ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1804, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_interface_set_compression_level = qemu.kvm.qxl_interface_set_compression_level ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1805, gettimeofday_ns(), 24 + 8 + 8, pid(), qid, level)
}
probe qemu.kvm.simpletrace.qxl_interface_update_area_complete = qemu.kvm.qxl_interface_update_area_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1806, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), qid, surface_id, dirty_left, dirty_right, dirty_top, dirty_bottom)
}
probe qemu.kvm.simpletrace.qxl_interface_update_area_complete_rest = qemu.kvm.qxl_interface_update_area_complete_rest ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1807, gettimeofday_ns(), 24 + 8 + 8, pid(), qid, num_updated_rects)
}
probe qemu.kvm.simpletrace.qxl_interface_update_area_complete_overflow = qemu.kvm.qxl_interface_update_area_complete_overflow ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1808, gettimeofday_ns(), 24 + 8 + 8, pid(), qid, max)
}
probe qemu.kvm.simpletrace.qxl_interface_update_area_complete_schedule_bh = qemu.kvm.qxl_interface_update_area_complete_schedule_bh ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1809, gettimeofday_ns(), 24 + 8 + 8, pid(), qid, num_dirty)
}
probe qemu.kvm.simpletrace.qxl_io_destroy_primary_ignored = qemu.kvm.qxl_io_destroy_primary_ignored ?
{
    try {
        argmode_str = mode ? user_string_n(mode, 512) : "<null>"
    } catch {}
    argmode_len = strlen(argmode_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 1810, gettimeofday_ns(), 24 + 8 + 4 + argmode_len, pid(), qid, argmode_len, argmode_len, argmode_str)
}
probe qemu.kvm.simpletrace.qxl_io_log = qemu.kvm.qxl_io_log ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1811, gettimeofday_ns(), 24 + 8 + 8, pid(), qid, log_buf)
}
probe qemu.kvm.simpletrace.qxl_io_read_unexpected = qemu.kvm.qxl_io_read_unexpected ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1812, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_io_unexpected_vga_mode = qemu.kvm.qxl_io_unexpected_vga_mode ?
{
    try {
        argdesc_str = desc ? user_string_n(desc, 512) : "<null>"
    } catch {}
    argdesc_len = strlen(argdesc_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%4b%.*s", 1, 1813, gettimeofday_ns(), 24 + 8 + 8 + 8 + 4 + argdesc_len, pid(), qid, addr, val, argdesc_len, argdesc_len, argdesc_str)
}
probe qemu.kvm.simpletrace.qxl_io_write = qemu.kvm.qxl_io_write ?
{
    try {
        argmode_str = mode ? user_string_n(mode, 512) : "<null>"
    } catch {}
    argmode_len = strlen(argmode_str)
    try {
        arganame_str = aname ? user_string_n(aname, 512) : "<null>"
    } catch {}
    arganame_len = strlen(arganame_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%4b%.*s%8b%8b%8b", 1, 1814, gettimeofday_ns(), 24 + 8 + 4 + argmode_len + 8 + 4 + arganame_len + 8 + 8 + 8, pid(), qid, argmode_len, argmode_len, argmode_str, addr, arganame_len, arganame_len, arganame_str, val, size, async)
}
probe qemu.kvm.simpletrace.qxl_memslot_add_guest = qemu.kvm.qxl_memslot_add_guest ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1815, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), qid, slot_id, guest_start, guest_end)
}
probe qemu.kvm.simpletrace.qxl_post_load = qemu.kvm.qxl_post_load ?
{
    try {
        argmode_str = mode ? user_string_n(mode, 512) : "<null>"
    } catch {}
    argmode_len = strlen(argmode_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 1816, gettimeofday_ns(), 24 + 8 + 4 + argmode_len, pid(), qid, argmode_len, argmode_len, argmode_str)
}
probe qemu.kvm.simpletrace.qxl_pre_load = qemu.kvm.qxl_pre_load ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1817, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_pre_save = qemu.kvm.qxl_pre_save ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1818, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_reset_surfaces = qemu.kvm.qxl_reset_surfaces ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1819, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_ring_command_check = qemu.kvm.qxl_ring_command_check ?
{
    try {
        argmode_str = mode ? user_string_n(mode, 512) : "<null>"
    } catch {}
    argmode_len = strlen(argmode_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 1820, gettimeofday_ns(), 24 + 8 + 4 + argmode_len, pid(), qid, argmode_len, argmode_len, argmode_str)
}
probe qemu.kvm.simpletrace.qxl_ring_command_get = qemu.kvm.qxl_ring_command_get ?
{
    try {
        argmode_str = mode ? user_string_n(mode, 512) : "<null>"
    } catch {}
    argmode_len = strlen(argmode_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 1821, gettimeofday_ns(), 24 + 8 + 4 + argmode_len, pid(), qid, argmode_len, argmode_len, argmode_str)
}
probe qemu.kvm.simpletrace.qxl_ring_command_req_notification = qemu.kvm.qxl_ring_command_req_notification ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1822, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_ring_cursor_check = qemu.kvm.qxl_ring_cursor_check ?
{
    try {
        argmode_str = mode ? user_string_n(mode, 512) : "<null>"
    } catch {}
    argmode_len = strlen(argmode_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 1823, gettimeofday_ns(), 24 + 8 + 4 + argmode_len, pid(), qid, argmode_len, argmode_len, argmode_str)
}
probe qemu.kvm.simpletrace.qxl_ring_cursor_get = qemu.kvm.qxl_ring_cursor_get ?
{
    try {
        argmode_str = mode ? user_string_n(mode, 512) : "<null>"
    } catch {}
    argmode_len = strlen(argmode_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 1824, gettimeofday_ns(), 24 + 8 + 4 + argmode_len, pid(), qid, argmode_len, argmode_len, argmode_str)
}
probe qemu.kvm.simpletrace.qxl_ring_cursor_req_notification = qemu.kvm.qxl_ring_cursor_req_notification ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1825, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_ring_res_push = qemu.kvm.qxl_ring_res_push ?
{
    try {
        argmode_str = mode ? user_string_n(mode, 512) : "<null>"
    } catch {}
    argmode_len = strlen(argmode_str)
    try {
        argnotify_str = notify ? user_string_n(notify, 512) : "<null>"
    } catch {}
    argnotify_len = strlen(argnotify_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%8b%8b%4b%.*s", 1, 1826, gettimeofday_ns(), 24 + 8 + 4 + argmode_len + 8 + 8 + 8 + 4 + argnotify_len, pid(), qid, argmode_len, argmode_len, argmode_str, surface_count, free_res, last_release, argnotify_len, argnotify_len, argnotify_str)
}
probe qemu.kvm.simpletrace.qxl_ring_res_push_rest = qemu.kvm.qxl_ring_res_push_rest ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1827, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), qid, ring_has, ring_size, prod, cons)
}
probe qemu.kvm.simpletrace.qxl_ring_res_put = qemu.kvm.qxl_ring_res_put ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1828, gettimeofday_ns(), 24 + 8 + 8, pid(), qid, free_res)
}
probe qemu.kvm.simpletrace.qxl_set_mode = qemu.kvm.qxl_set_mode ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1829, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), qid, modenr, x_res, y_res, bits, devmem)
}
probe qemu.kvm.simpletrace.qxl_soft_reset = qemu.kvm.qxl_soft_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1830, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_spice_destroy_surfaces_complete = qemu.kvm.qxl_spice_destroy_surfaces_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1831, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_spice_destroy_surfaces = qemu.kvm.qxl_spice_destroy_surfaces ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1832, gettimeofday_ns(), 24 + 8 + 8, pid(), qid, async)
}
probe qemu.kvm.simpletrace.qxl_spice_destroy_surface_wait_complete = qemu.kvm.qxl_spice_destroy_surface_wait_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1833, gettimeofday_ns(), 24 + 8 + 8, pid(), qid, id)
}
probe qemu.kvm.simpletrace.qxl_spice_destroy_surface_wait = qemu.kvm.qxl_spice_destroy_surface_wait ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1834, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qid, id, async)
}
probe qemu.kvm.simpletrace.qxl_spice_flush_surfaces_async = qemu.kvm.qxl_spice_flush_surfaces_async ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1835, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qid, surface_count, num_free_res)
}
probe qemu.kvm.simpletrace.qxl_spice_monitors_config = qemu.kvm.qxl_spice_monitors_config ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1836, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_spice_loadvm_commands = qemu.kvm.qxl_spice_loadvm_commands ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1837, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qid, ext, count)
}
probe qemu.kvm.simpletrace.qxl_spice_oom = qemu.kvm.qxl_spice_oom ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1838, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_spice_reset_cursor = qemu.kvm.qxl_spice_reset_cursor ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1839, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_spice_reset_image_cache = qemu.kvm.qxl_spice_reset_image_cache ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1840, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_spice_reset_memslots = qemu.kvm.qxl_spice_reset_memslots ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1841, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_spice_update_area = qemu.kvm.qxl_spice_update_area ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1842, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), qid, surface_id, left, right, top, bottom)
}
probe qemu.kvm.simpletrace.qxl_spice_update_area_rest = qemu.kvm.qxl_spice_update_area_rest ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1843, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qid, num_dirty_rects, clear_dirty_region)
}
probe qemu.kvm.simpletrace.qxl_surfaces_dirty = qemu.kvm.qxl_surfaces_dirty ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1844, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qid, offset, size)
}
probe qemu.kvm.simpletrace.qxl_send_events = qemu.kvm.qxl_send_events ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1845, gettimeofday_ns(), 24 + 8 + 8, pid(), qid, events)
}
probe qemu.kvm.simpletrace.qxl_send_events_vm_stopped = qemu.kvm.qxl_send_events_vm_stopped ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1846, gettimeofday_ns(), 24 + 8 + 8, pid(), qid, events)
}
probe qemu.kvm.simpletrace.qxl_set_guest_bug = qemu.kvm.qxl_set_guest_bug ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1847, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qxl_interrupt_client_monitors_config = qemu.kvm.qxl_interrupt_client_monitors_config ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1848, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qid, num_heads, heads)
}
probe qemu.kvm.simpletrace.qxl_client_monitors_config_unsupported_by_guest = qemu.kvm.qxl_client_monitors_config_unsupported_by_guest ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1849, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qid, int_mask, client_monitors_config)
}
probe qemu.kvm.simpletrace.qxl_client_monitors_config_unsupported_by_device = qemu.kvm.qxl_client_monitors_config_unsupported_by_device ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1850, gettimeofday_ns(), 24 + 8 + 8, pid(), qid, revision)
}
probe qemu.kvm.simpletrace.qxl_client_monitors_config_capped = qemu.kvm.qxl_client_monitors_config_capped ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1851, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qid, requested, limit_)
}
probe qemu.kvm.simpletrace.qxl_client_monitors_config_crc = qemu.kvm.qxl_client_monitors_config_crc ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1852, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qid, size, crc32)
}
probe qemu.kvm.simpletrace.qxl_set_client_capabilities_unsupported_by_revision = qemu.kvm.qxl_set_client_capabilities_unsupported_by_revision ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1853, gettimeofday_ns(), 24 + 8 + 8, pid(), qid, revision)
}
probe qemu.kvm.simpletrace.qxl_render_blit = qemu.kvm.qxl_render_blit ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1854, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), stride, left, right, top, bottom)
}
probe qemu.kvm.simpletrace.qxl_render_guest_primary_resized = qemu.kvm.qxl_render_guest_primary_resized ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1855, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), width, height, stride, bytes_pp, bits_pp)
}
probe qemu.kvm.simpletrace.qxl_render_update_area_done = qemu.kvm.qxl_render_update_area_done ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1856, gettimeofday_ns(), 24 + 8, pid(), cookie)
}
probe qemu.kvm.simpletrace.vga_std_read_io = qemu.kvm.vga_std_read_io ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1857, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.vga_std_write_io = qemu.kvm.vga_std_write_io ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1858, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.vga_vbe_read = qemu.kvm.vga_vbe_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1859, gettimeofday_ns(), 24 + 8 + 8, pid(), index, val)
}
probe qemu.kvm.simpletrace.vga_vbe_write = qemu.kvm.vga_vbe_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1860, gettimeofday_ns(), 24 + 8 + 8, pid(), index, val)
}
probe qemu.kvm.simpletrace.vga_cirrus_read_io = qemu.kvm.vga_cirrus_read_io ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1861, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.vga_cirrus_write_io = qemu.kvm.vga_cirrus_write_io ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1862, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.vga_cirrus_read_blt = qemu.kvm.vga_cirrus_read_blt ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1863, gettimeofday_ns(), 24 + 8 + 8, pid(), offset, val)
}
probe qemu.kvm.simpletrace.vga_cirrus_write_blt = qemu.kvm.vga_cirrus_write_blt ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1864, gettimeofday_ns(), 24 + 8 + 8, pid(), offset, val)
}
probe qemu.kvm.simpletrace.sii9022_read_reg = qemu.kvm.sii9022_read_reg ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1865, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sii9022_write_reg = qemu.kvm.sii9022_write_reg ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1866, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sii9022_switch_mode = qemu.kvm.sii9022_switch_mode ?
{
    try {
        argmode_str = mode ? user_string_n(mode, 512) : "<null>"
    } catch {}
    argmode_len = strlen(argmode_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 1867, gettimeofday_ns(), 24 + 4 + argmode_len, pid(), argmode_len, argmode_len, argmode_str)
}
probe qemu.kvm.simpletrace.adb_kbd_no_key = qemu.kvm.adb_kbd_no_key ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1868, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.adb_kbd_writereg = qemu.kvm.adb_kbd_writereg ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1869, gettimeofday_ns(), 24 + 8 + 8, pid(), reg, val)
}
probe qemu.kvm.simpletrace.adb_kbd_readreg = qemu.kvm.adb_kbd_readreg ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1870, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), reg, val0, val1)
}
probe qemu.kvm.simpletrace.adb_kbd_request_change_addr = qemu.kvm.adb_kbd_request_change_addr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1871, gettimeofday_ns(), 24 + 8, pid(), devaddr)
}
probe qemu.kvm.simpletrace.adb_kbd_request_change_addr_and_handler = qemu.kvm.adb_kbd_request_change_addr_and_handler ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1872, gettimeofday_ns(), 24 + 8 + 8, pid(), devaddr, handler)
}
probe qemu.kvm.simpletrace.adb_mouse_flush = qemu.kvm.adb_mouse_flush ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1873, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.adb_mouse_writereg = qemu.kvm.adb_mouse_writereg ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1874, gettimeofday_ns(), 24 + 8 + 8, pid(), reg, val)
}
probe qemu.kvm.simpletrace.adb_mouse_readreg = qemu.kvm.adb_mouse_readreg ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1875, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), reg, val0, val1)
}
probe qemu.kvm.simpletrace.adb_mouse_request_change_addr = qemu.kvm.adb_mouse_request_change_addr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1876, gettimeofday_ns(), 24 + 8, pid(), devaddr)
}
probe qemu.kvm.simpletrace.adb_mouse_request_change_addr_and_handler = qemu.kvm.adb_mouse_request_change_addr_and_handler ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1877, gettimeofday_ns(), 24 + 8 + 8, pid(), devaddr, handler)
}
probe qemu.kvm.simpletrace.ps2_put_keycode = qemu.kvm.ps2_put_keycode ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1878, gettimeofday_ns(), 24 + 8 + 8, pid(), opaque, keycode)
}
probe qemu.kvm.simpletrace.ps2_keyboard_event = qemu.kvm.ps2_keyboard_event ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1879, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), opaque, qcode, down, modifier, modifiers)
}
probe qemu.kvm.simpletrace.ps2_read_data = qemu.kvm.ps2_read_data ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1880, gettimeofday_ns(), 24 + 8, pid(), opaque)
}
probe qemu.kvm.simpletrace.ps2_set_ledstate = qemu.kvm.ps2_set_ledstate ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1881, gettimeofday_ns(), 24 + 8 + 8, pid(), s, ledstate)
}
probe qemu.kvm.simpletrace.ps2_reset_keyboard = qemu.kvm.ps2_reset_keyboard ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1882, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.ps2_write_keyboard = qemu.kvm.ps2_write_keyboard ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1883, gettimeofday_ns(), 24 + 8 + 8, pid(), opaque, val)
}
probe qemu.kvm.simpletrace.ps2_keyboard_set_translation = qemu.kvm.ps2_keyboard_set_translation ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1884, gettimeofday_ns(), 24 + 8 + 8, pid(), opaque, mode)
}
probe qemu.kvm.simpletrace.ps2_mouse_send_packet = qemu.kvm.ps2_mouse_send_packet ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 1885, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, dx1, dy1, dz1, b)
}
probe qemu.kvm.simpletrace.ps2_mouse_fake_event = qemu.kvm.ps2_mouse_fake_event ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1886, gettimeofday_ns(), 24 + 8, pid(), opaque)
}
probe qemu.kvm.simpletrace.ps2_write_mouse = qemu.kvm.ps2_write_mouse ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1887, gettimeofday_ns(), 24 + 8 + 8, pid(), opaque, val)
}
probe qemu.kvm.simpletrace.ps2_kbd_reset = qemu.kvm.ps2_kbd_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1888, gettimeofday_ns(), 24 + 8, pid(), opaque)
}
probe qemu.kvm.simpletrace.ps2_mouse_reset = qemu.kvm.ps2_mouse_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1889, gettimeofday_ns(), 24 + 8, pid(), opaque)
}
probe qemu.kvm.simpletrace.ps2_kbd_init = qemu.kvm.ps2_kbd_init ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1890, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.ps2_mouse_init = qemu.kvm.ps2_mouse_init ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1891, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.milkymist_softusb_memory_read = qemu.kvm.milkymist_softusb_memory_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1892, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.milkymist_softusb_memory_write = qemu.kvm.milkymist_softusb_memory_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1893, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.milkymist_softusb_mevt = qemu.kvm.milkymist_softusb_mevt ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1894, gettimeofday_ns(), 24 + 8, pid(), m)
}
probe qemu.kvm.simpletrace.milkymist_softusb_kevt = qemu.kvm.milkymist_softusb_kevt ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1895, gettimeofday_ns(), 24 + 8, pid(), m)
}
probe qemu.kvm.simpletrace.milkymist_softusb_pulse_irq = qemu.kvm.milkymist_softusb_pulse_irq ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1896, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.hid_kbd_queue_full = qemu.kvm.hid_kbd_queue_full ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1897, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.hid_kbd_queue_empty = qemu.kvm.hid_kbd_queue_empty ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1898, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.virtio_input_queue_full = qemu.kvm.virtio_input_queue_full ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1899, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.slavio_timer_get_out = qemu.kvm.slavio_timer_get_out ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1900, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), limit_, counthigh, count)
}
probe qemu.kvm.simpletrace.slavio_timer_irq = qemu.kvm.slavio_timer_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1901, gettimeofday_ns(), 24 + 8 + 8, pid(), counthigh, count)
}
probe qemu.kvm.simpletrace.slavio_timer_mem_readl_invalid = qemu.kvm.slavio_timer_mem_readl_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1902, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.slavio_timer_mem_readl = qemu.kvm.slavio_timer_mem_readl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1903, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, ret)
}
probe qemu.kvm.simpletrace.slavio_timer_mem_writel = qemu.kvm.slavio_timer_mem_writel ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1904, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.slavio_timer_mem_writel_limit = qemu.kvm.slavio_timer_mem_writel_limit ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1905, gettimeofday_ns(), 24 + 8 + 8, pid(), timer_index, count)
}
probe qemu.kvm.simpletrace.slavio_timer_mem_writel_counter_invalid = qemu.kvm.slavio_timer_mem_writel_counter_invalid ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1906, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.slavio_timer_mem_writel_status_start = qemu.kvm.slavio_timer_mem_writel_status_start ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1907, gettimeofday_ns(), 24 + 8, pid(), timer_index)
}
probe qemu.kvm.simpletrace.slavio_timer_mem_writel_status_stop = qemu.kvm.slavio_timer_mem_writel_status_stop ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1908, gettimeofday_ns(), 24 + 8, pid(), timer_index)
}
probe qemu.kvm.simpletrace.slavio_timer_mem_writel_mode_user = qemu.kvm.slavio_timer_mem_writel_mode_user ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1909, gettimeofday_ns(), 24 + 8, pid(), timer_index)
}
probe qemu.kvm.simpletrace.slavio_timer_mem_writel_mode_counter = qemu.kvm.slavio_timer_mem_writel_mode_counter ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1910, gettimeofday_ns(), 24 + 8, pid(), timer_index)
}
probe qemu.kvm.simpletrace.slavio_timer_mem_writel_mode_invalid = qemu.kvm.slavio_timer_mem_writel_mode_invalid ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1911, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.slavio_timer_mem_writel_invalid = qemu.kvm.slavio_timer_mem_writel_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1912, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.grlib_gptimer_enable = qemu.kvm.grlib_gptimer_enable ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1913, gettimeofday_ns(), 24 + 8 + 8, pid(), id, count)
}
probe qemu.kvm.simpletrace.grlib_gptimer_disabled = qemu.kvm.grlib_gptimer_disabled ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1914, gettimeofday_ns(), 24 + 8 + 8, pid(), id, config)
}
probe qemu.kvm.simpletrace.grlib_gptimer_restart = qemu.kvm.grlib_gptimer_restart ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1915, gettimeofday_ns(), 24 + 8 + 8, pid(), id, reload)
}
probe qemu.kvm.simpletrace.grlib_gptimer_set_scaler = qemu.kvm.grlib_gptimer_set_scaler ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1916, gettimeofday_ns(), 24 + 8 + 8, pid(), scaler, freq)
}
probe qemu.kvm.simpletrace.grlib_gptimer_hit = qemu.kvm.grlib_gptimer_hit ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1917, gettimeofday_ns(), 24 + 8, pid(), id)
}
probe qemu.kvm.simpletrace.grlib_gptimer_readl = qemu.kvm.grlib_gptimer_readl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1918, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), id, addr, val)
}
probe qemu.kvm.simpletrace.grlib_gptimer_writel = qemu.kvm.grlib_gptimer_writel ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1919, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), id, addr, val)
}
probe qemu.kvm.simpletrace.lm32_timer_memory_write = qemu.kvm.lm32_timer_memory_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1920, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.lm32_timer_memory_read = qemu.kvm.lm32_timer_memory_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1921, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.lm32_timer_hit = qemu.kvm.lm32_timer_hit ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1922, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.lm32_timer_irq_state = qemu.kvm.lm32_timer_irq_state ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1923, gettimeofday_ns(), 24 + 8, pid(), level)
}
probe qemu.kvm.simpletrace.milkymist_sysctl_memory_read = qemu.kvm.milkymist_sysctl_memory_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1924, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.milkymist_sysctl_memory_write = qemu.kvm.milkymist_sysctl_memory_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1925, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.milkymist_sysctl_icap_write = qemu.kvm.milkymist_sysctl_icap_write ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1926, gettimeofday_ns(), 24 + 8, pid(), value)
}
probe qemu.kvm.simpletrace.milkymist_sysctl_start_timer0 = qemu.kvm.milkymist_sysctl_start_timer0 ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1927, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.milkymist_sysctl_stop_timer0 = qemu.kvm.milkymist_sysctl_stop_timer0 ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1928, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.milkymist_sysctl_start_timer1 = qemu.kvm.milkymist_sysctl_start_timer1 ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1929, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.milkymist_sysctl_stop_timer1 = qemu.kvm.milkymist_sysctl_stop_timer1 ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1930, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.milkymist_sysctl_pulse_irq_timer0 = qemu.kvm.milkymist_sysctl_pulse_irq_timer0 ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1931, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.milkymist_sysctl_pulse_irq_timer1 = qemu.kvm.milkymist_sysctl_pulse_irq_timer1 ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1932, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.aspeed_timer_ctrl_enable = qemu.kvm.aspeed_timer_ctrl_enable ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1933, gettimeofday_ns(), 24 + 8 + 8, pid(), i, enable)
}
probe qemu.kvm.simpletrace.aspeed_timer_ctrl_external_clock = qemu.kvm.aspeed_timer_ctrl_external_clock ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1934, gettimeofday_ns(), 24 + 8 + 8, pid(), i, enable)
}
probe qemu.kvm.simpletrace.aspeed_timer_ctrl_overflow_interrupt = qemu.kvm.aspeed_timer_ctrl_overflow_interrupt ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1935, gettimeofday_ns(), 24 + 8 + 8, pid(), i, enable)
}
probe qemu.kvm.simpletrace.aspeed_timer_ctrl_pulse_enable = qemu.kvm.aspeed_timer_ctrl_pulse_enable ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1936, gettimeofday_ns(), 24 + 8 + 8, pid(), i, enable)
}
probe qemu.kvm.simpletrace.aspeed_timer_set_ctrl2 = qemu.kvm.aspeed_timer_set_ctrl2 ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1937, gettimeofday_ns(), 24 + 8, pid(), value)
}
probe qemu.kvm.simpletrace.aspeed_timer_set_value = qemu.kvm.aspeed_timer_set_value ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1938, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), timer, reg, value)
}
probe qemu.kvm.simpletrace.aspeed_timer_read = qemu.kvm.aspeed_timer_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1939, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, size, value)
}
probe qemu.kvm.simpletrace.systick_reload = qemu.kvm.systick_reload ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1940, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.systick_timer_tick = qemu.kvm.systick_timer_tick ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1941, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.systick_read = qemu.kvm.systick_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1942, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, value, size)
}
probe qemu.kvm.simpletrace.systick_write = qemu.kvm.systick_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1943, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, value, size)
}
probe qemu.kvm.simpletrace.cmsdk_apb_timer_read = qemu.kvm.cmsdk_apb_timer_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1944, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, data, size)
}
probe qemu.kvm.simpletrace.cmsdk_apb_timer_write = qemu.kvm.cmsdk_apb_timer_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1945, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, data, size)
}
probe qemu.kvm.simpletrace.cmsdk_apb_timer_reset = qemu.kvm.cmsdk_apb_timer_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1946, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.xlnx_zynqmp_rtc_gettime = qemu.kvm.xlnx_zynqmp_rtc_gettime ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 1947, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), year, month, day, hour, min, sec)
}
probe qemu.kvm.simpletrace.jazzio_read = qemu.kvm.jazzio_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1948, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, ret)
}
probe qemu.kvm.simpletrace.jazzio_write = qemu.kvm.jazzio_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1949, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.rc4030_read = qemu.kvm.rc4030_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1950, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, ret)
}
probe qemu.kvm.simpletrace.rc4030_write = qemu.kvm.rc4030_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1951, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.ledma_memory_read = qemu.kvm.ledma_memory_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1952, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, len)
}
probe qemu.kvm.simpletrace.ledma_memory_write = qemu.kvm.ledma_memory_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1953, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, len)
}
probe qemu.kvm.simpletrace.sparc32_dma_set_irq_raise = qemu.kvm.sparc32_dma_set_irq_raise ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1954, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sparc32_dma_set_irq_lower = qemu.kvm.sparc32_dma_set_irq_lower ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1955, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.espdma_memory_read = qemu.kvm.espdma_memory_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1956, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, len)
}
probe qemu.kvm.simpletrace.espdma_memory_write = qemu.kvm.espdma_memory_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1957, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, len)
}
probe qemu.kvm.simpletrace.sparc32_dma_mem_readl = qemu.kvm.sparc32_dma_mem_readl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1958, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, ret)
}
probe qemu.kvm.simpletrace.sparc32_dma_mem_writel = qemu.kvm.sparc32_dma_mem_writel ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1959, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, old, val)
}
probe qemu.kvm.simpletrace.sparc32_dma_enable_raise = qemu.kvm.sparc32_dma_enable_raise ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1960, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sparc32_dma_enable_lower = qemu.kvm.sparc32_dma_enable_lower ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1961, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.i8257_unregistered_dma = qemu.kvm.i8257_unregistered_dma ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1962, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), nchan, dma_pos, dma_len)
}
probe qemu.kvm.simpletrace.sun4m_cpu_interrupt = qemu.kvm.sun4m_cpu_interrupt ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1963, gettimeofday_ns(), 24 + 8, pid(), level)
}
probe qemu.kvm.simpletrace.sun4m_cpu_reset_interrupt = qemu.kvm.sun4m_cpu_reset_interrupt ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1964, gettimeofday_ns(), 24 + 8, pid(), level)
}
probe qemu.kvm.simpletrace.sun4m_cpu_set_irq_raise = qemu.kvm.sun4m_cpu_set_irq_raise ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1965, gettimeofday_ns(), 24 + 8, pid(), level)
}
probe qemu.kvm.simpletrace.sun4m_cpu_set_irq_lower = qemu.kvm.sun4m_cpu_set_irq_lower ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1966, gettimeofday_ns(), 24 + 8, pid(), level)
}
probe qemu.kvm.simpletrace.sun4m_iommu_mem_readl = qemu.kvm.sun4m_iommu_mem_readl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1967, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, ret)
}
probe qemu.kvm.simpletrace.sun4m_iommu_mem_writel = qemu.kvm.sun4m_iommu_mem_writel ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1968, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sun4m_iommu_mem_writel_ctrl = qemu.kvm.sun4m_iommu_mem_writel_ctrl ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1969, gettimeofday_ns(), 24 + 8, pid(), iostart)
}
probe qemu.kvm.simpletrace.sun4m_iommu_mem_writel_tlbflush = qemu.kvm.sun4m_iommu_mem_writel_tlbflush ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1970, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.sun4m_iommu_mem_writel_pgflush = qemu.kvm.sun4m_iommu_mem_writel_pgflush ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1971, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.sun4m_iommu_page_get_flags = qemu.kvm.sun4m_iommu_page_get_flags ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1972, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), pa, iopte, ret)
}
probe qemu.kvm.simpletrace.sun4m_iommu_translate_pa = qemu.kvm.sun4m_iommu_translate_pa ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1973, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, pa, iopte)
}
probe qemu.kvm.simpletrace.sun4m_iommu_bad_addr = qemu.kvm.sun4m_iommu_bad_addr ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1974, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.leon3_set_irq = qemu.kvm.leon3_set_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1975, gettimeofday_ns(), 24 + 8, pid(), intno)
}
probe qemu.kvm.simpletrace.leon3_reset_irq = qemu.kvm.leon3_reset_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1976, gettimeofday_ns(), 24 + 8, pid(), intno)
}
probe qemu.kvm.simpletrace.ebus_isa_irq_handler = qemu.kvm.ebus_isa_irq_handler ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 1977, gettimeofday_ns(), 24 + 8 + 8, pid(), n, level)
}
probe qemu.kvm.simpletrace.sun4u_iommu_mem_read = qemu.kvm.sun4u_iommu_mem_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1978, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, val, size)
}
probe qemu.kvm.simpletrace.sun4u_iommu_mem_write = qemu.kvm.sun4u_iommu_mem_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1979, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, val, size)
}
probe qemu.kvm.simpletrace.sun4u_iommu_translate = qemu.kvm.sun4u_iommu_translate ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1980, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, trans_addr, tte)
}
probe qemu.kvm.simpletrace.sparc64_cpu_check_irqs_reset_irq = qemu.kvm.sparc64_cpu_check_irqs_reset_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1981, gettimeofday_ns(), 24 + 8, pid(), intno)
}
probe qemu.kvm.simpletrace.sparc64_cpu_check_irqs_noset_irq = qemu.kvm.sparc64_cpu_check_irqs_noset_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1982, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), tl, tt, intno)
}
probe qemu.kvm.simpletrace.sparc64_cpu_check_irqs_set_irq = qemu.kvm.sparc64_cpu_check_irqs_set_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1983, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), i, old, new)
}
probe qemu.kvm.simpletrace.sparc64_cpu_check_irqs_disabled = qemu.kvm.sparc64_cpu_check_irqs_disabled ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 1984, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), pil, pil_in, softint, intno)
}
probe qemu.kvm.simpletrace.sparc64_cpu_ivec_raise_irq = qemu.kvm.sparc64_cpu_ivec_raise_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1985, gettimeofday_ns(), 24 + 8, pid(), irq)
}
probe qemu.kvm.simpletrace.sparc64_cpu_ivec_lower_irq = qemu.kvm.sparc64_cpu_ivec_lower_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 1986, gettimeofday_ns(), 24 + 8, pid(), irq)
}
probe qemu.kvm.simpletrace.sparc64_cpu_tick_irq_disabled = qemu.kvm.sparc64_cpu_tick_irq_disabled ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1987, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sparc64_cpu_tick_irq_fire = qemu.kvm.sparc64_cpu_tick_irq_fire ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1988, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sparc64_cpu_stick_irq_disabled = qemu.kvm.sparc64_cpu_stick_irq_disabled ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1989, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sparc64_cpu_stick_irq_fire = qemu.kvm.sparc64_cpu_stick_irq_fire ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1990, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sparc64_cpu_hstick_irq_disabled = qemu.kvm.sparc64_cpu_hstick_irq_disabled ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1991, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sparc64_cpu_hstick_irq_fire = qemu.kvm.sparc64_cpu_hstick_irq_fire ?
{
    printf("%8b%8b%8b%4b%4b", 1, 1992, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sparc64_cpu_tick_set_count = qemu.kvm.sparc64_cpu_tick_set_count ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argnpt_str = npt ? user_string_n(npt, 512) : "<null>"
    } catch {}
    argnpt_len = strlen(argnpt_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%4b%.*s%8b", 1, 1993, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 4 + argnpt_len + 8, pid(), argname_len, argname_len, argname_str, real_count, argnpt_len, argnpt_len, argnpt_str, p)
}
probe qemu.kvm.simpletrace.sparc64_cpu_tick_get_count = qemu.kvm.sparc64_cpu_tick_get_count ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argnpt_str = npt ? user_string_n(npt, 512) : "<null>"
    } catch {}
    argnpt_len = strlen(argnpt_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%4b%.*s%8b", 1, 1994, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 4 + argnpt_len + 8, pid(), argname_len, argname_len, argname_str, real_count, argnpt_len, argnpt_len, argnpt_str, p)
}
probe qemu.kvm.simpletrace.sparc64_cpu_tick_set_limit = qemu.kvm.sparc64_cpu_tick_set_limit ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argdis_str = dis ? user_string_n(dis, 512) : "<null>"
    } catch {}
    argdis_len = strlen(argdis_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%4b%.*s%8b%8b%8b%8b", 1, 1995, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 4 + argdis_len + 8 + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, real_limit, argdis_len, argdis_len, argdis_str, p, limit_, t, dt)
}
probe qemu.kvm.simpletrace.sparc64_cpu_tick_set_limit_zero = qemu.kvm.sparc64_cpu_tick_set_limit_zero ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 1996, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.bcm2835_sdhost_read = qemu.kvm.bcm2835_sdhost_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1997, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, data, size)
}
probe qemu.kvm.simpletrace.bcm2835_sdhost_write = qemu.kvm.bcm2835_sdhost_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 1998, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), offset, data, size)
}
probe qemu.kvm.simpletrace.bcm2835_sdhost_edm_change = qemu.kvm.bcm2835_sdhost_edm_change ?
{
    try {
        argwhy_str = why ? user_string_n(why, 512) : "<null>"
    } catch {}
    argwhy_len = strlen(argwhy_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 1999, gettimeofday_ns(), 24 + 4 + argwhy_len + 8, pid(), argwhy_len, argwhy_len, argwhy_str, edm)
}
probe qemu.kvm.simpletrace.bcm2835_sdhost_update_irq = qemu.kvm.bcm2835_sdhost_update_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2000, gettimeofday_ns(), 24 + 8, pid(), irq)
}
probe qemu.kvm.simpletrace.sdbus_command = qemu.kvm.sdbus_command ?
{
    try {
        argbus_name_str = bus_name ? user_string_n(bus_name, 512) : "<null>"
    } catch {}
    argbus_name_len = strlen(argbus_name_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 2001, gettimeofday_ns(), 24 + 4 + argbus_name_len + 8 + 8 + 8, pid(), argbus_name_len, argbus_name_len, argbus_name_str, cmd, arg, crc)
}
probe qemu.kvm.simpletrace.sdbus_read = qemu.kvm.sdbus_read ?
{
    try {
        argbus_name_str = bus_name ? user_string_n(bus_name, 512) : "<null>"
    } catch {}
    argbus_name_len = strlen(argbus_name_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2002, gettimeofday_ns(), 24 + 4 + argbus_name_len + 8, pid(), argbus_name_len, argbus_name_len, argbus_name_str, value)
}
probe qemu.kvm.simpletrace.sdbus_write = qemu.kvm.sdbus_write ?
{
    try {
        argbus_name_str = bus_name ? user_string_n(bus_name, 512) : "<null>"
    } catch {}
    argbus_name_len = strlen(argbus_name_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2003, gettimeofday_ns(), 24 + 4 + argbus_name_len + 8, pid(), argbus_name_len, argbus_name_len, argbus_name_str, value)
}
probe qemu.kvm.simpletrace.sdbus_set_voltage = qemu.kvm.sdbus_set_voltage ?
{
    try {
        argbus_name_str = bus_name ? user_string_n(bus_name, 512) : "<null>"
    } catch {}
    argbus_name_len = strlen(argbus_name_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2004, gettimeofday_ns(), 24 + 4 + argbus_name_len + 8, pid(), argbus_name_len, argbus_name_len, argbus_name_str, millivolts)
}
probe qemu.kvm.simpletrace.sdbus_get_dat_lines = qemu.kvm.sdbus_get_dat_lines ?
{
    try {
        argbus_name_str = bus_name ? user_string_n(bus_name, 512) : "<null>"
    } catch {}
    argbus_name_len = strlen(argbus_name_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2005, gettimeofday_ns(), 24 + 4 + argbus_name_len + 8, pid(), argbus_name_len, argbus_name_len, argbus_name_str, dat_lines)
}
probe qemu.kvm.simpletrace.sdbus_get_cmd_line = qemu.kvm.sdbus_get_cmd_line ?
{
    try {
        argbus_name_str = bus_name ? user_string_n(bus_name, 512) : "<null>"
    } catch {}
    argbus_name_len = strlen(argbus_name_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2006, gettimeofday_ns(), 24 + 4 + argbus_name_len + 8, pid(), argbus_name_len, argbus_name_len, argbus_name_str, cmd_line)
}
probe qemu.kvm.simpletrace.sdhci_set_inserted = qemu.kvm.sdhci_set_inserted ?
{
    try {
        arglevel_str = level ? user_string_n(level, 512) : "<null>"
    } catch {}
    arglevel_len = strlen(arglevel_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2007, gettimeofday_ns(), 24 + 4 + arglevel_len, pid(), arglevel_len, arglevel_len, arglevel_str)
}
probe qemu.kvm.simpletrace.sdhci_send_command = qemu.kvm.sdhci_send_command ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2008, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, arg)
}
probe qemu.kvm.simpletrace.sdhci_error = qemu.kvm.sdhci_error ?
{
    try {
        argmsg_str = msg ? user_string_n(msg, 512) : "<null>"
    } catch {}
    argmsg_len = strlen(argmsg_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2009, gettimeofday_ns(), 24 + 4 + argmsg_len, pid(), argmsg_len, argmsg_len, argmsg_str)
}
probe qemu.kvm.simpletrace.sdhci_response4 = qemu.kvm.sdhci_response4 ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2010, gettimeofday_ns(), 24 + 8, pid(), r0)
}
probe qemu.kvm.simpletrace.sdhci_response16 = qemu.kvm.sdhci_response16 ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2011, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), r3, r2, r1, r0)
}
probe qemu.kvm.simpletrace.sdhci_end_transfer = qemu.kvm.sdhci_end_transfer ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2012, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, arg)
}
probe qemu.kvm.simpletrace.sdhci_adma = qemu.kvm.sdhci_adma ?
{
    try {
        argdesc_str = desc ? user_string_n(desc, 512) : "<null>"
    } catch {}
    argdesc_len = strlen(argdesc_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2013, gettimeofday_ns(), 24 + 4 + argdesc_len + 8, pid(), argdesc_len, argdesc_len, argdesc_str, sysad)
}
probe qemu.kvm.simpletrace.sdhci_adma_loop = qemu.kvm.sdhci_adma_loop ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2014, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, length, attr)
}
probe qemu.kvm.simpletrace.sdhci_adma_transfer_completed = qemu.kvm.sdhci_adma_transfer_completed ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2015, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sdhci_access = qemu.kvm.sdhci_access ?
{
    try {
        argaccess_str = access ? user_string_n(access, 512) : "<null>"
    } catch {}
    argaccess_len = strlen(argaccess_str)
    try {
        argdir_str = dir ? user_string_n(dir, 512) : "<null>"
    } catch {}
    argdir_len = strlen(argdir_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%4b%.*s%8b%8b", 1, 2016, gettimeofday_ns(), 24 + 4 + argaccess_len + 8 + 8 + 4 + argdir_len + 8 + 8, pid(), argaccess_len, argaccess_len, argaccess_str, size, offset, argdir_len, argdir_len, argdir_str, val, val2)
}
probe qemu.kvm.simpletrace.sdhci_read_dataport = qemu.kvm.sdhci_read_dataport ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2017, gettimeofday_ns(), 24 + 8, pid(), data_count)
}
probe qemu.kvm.simpletrace.sdhci_write_dataport = qemu.kvm.sdhci_write_dataport ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2018, gettimeofday_ns(), 24 + 8, pid(), data_count)
}
probe qemu.kvm.simpletrace.sdhci_capareg = qemu.kvm.sdhci_capareg ?
{
    try {
        argdesc_str = desc ? user_string_n(desc, 512) : "<null>"
    } catch {}
    argdesc_len = strlen(argdesc_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2019, gettimeofday_ns(), 24 + 4 + argdesc_len + 8, pid(), argdesc_len, argdesc_len, argdesc_str, val)
}
probe qemu.kvm.simpletrace.sdcard_normal_command = qemu.kvm.sdcard_normal_command ?
{
    try {
        argproto_str = proto ? user_string_n(proto, 512) : "<null>"
    } catch {}
    argproto_len = strlen(argproto_str)
    try {
        argcmd_desc_str = cmd_desc ? user_string_n(cmd_desc, 512) : "<null>"
    } catch {}
    argcmd_desc_len = strlen(argcmd_desc_str)
    try {
        argstate_str = state ? user_string_n(state, 512) : "<null>"
    } catch {}
    argstate_len = strlen(argstate_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%8b%8b%4b%.*s", 1, 2020, gettimeofday_ns(), 24 + 4 + argproto_len + 4 + argcmd_desc_len + 8 + 8 + 4 + argstate_len, pid(), argproto_len, argproto_len, argproto_str, argcmd_desc_len, argcmd_desc_len, argcmd_desc_str, cmd, arg, argstate_len, argstate_len, argstate_str)
}
probe qemu.kvm.simpletrace.sdcard_app_command = qemu.kvm.sdcard_app_command ?
{
    try {
        argproto_str = proto ? user_string_n(proto, 512) : "<null>"
    } catch {}
    argproto_len = strlen(argproto_str)
    try {
        argacmd_desc_str = acmd_desc ? user_string_n(acmd_desc, 512) : "<null>"
    } catch {}
    argacmd_desc_len = strlen(argacmd_desc_str)
    try {
        argstate_str = state ? user_string_n(state, 512) : "<null>"
    } catch {}
    argstate_len = strlen(argstate_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%8b%8b%4b%.*s", 1, 2021, gettimeofday_ns(), 24 + 4 + argproto_len + 4 + argacmd_desc_len + 8 + 8 + 4 + argstate_len, pid(), argproto_len, argproto_len, argproto_str, argacmd_desc_len, argacmd_desc_len, argacmd_desc_str, acmd, arg, argstate_len, argstate_len, argstate_str)
}
probe qemu.kvm.simpletrace.sdcard_response = qemu.kvm.sdcard_response ?
{
    try {
        argrspdesc_str = rspdesc ? user_string_n(rspdesc, 512) : "<null>"
    } catch {}
    argrspdesc_len = strlen(argrspdesc_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2022, gettimeofday_ns(), 24 + 4 + argrspdesc_len + 8, pid(), argrspdesc_len, argrspdesc_len, argrspdesc_str, rsplen)
}
probe qemu.kvm.simpletrace.sdcard_powerup = qemu.kvm.sdcard_powerup ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2023, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sdcard_inquiry_cmd41 = qemu.kvm.sdcard_inquiry_cmd41 ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2024, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sdcard_set_enable = qemu.kvm.sdcard_set_enable ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2025, gettimeofday_ns(), 24 + 8 + 8, pid(), current_state, new_state)
}
probe qemu.kvm.simpletrace.sdcard_reset = qemu.kvm.sdcard_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2026, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sdcard_set_blocklen = qemu.kvm.sdcard_set_blocklen ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2027, gettimeofday_ns(), 24 + 8, pid(), length)
}
probe qemu.kvm.simpletrace.sdcard_inserted = qemu.kvm.sdcard_inserted ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2028, gettimeofday_ns(), 24 + 8, pid(), readonly)
}
probe qemu.kvm.simpletrace.sdcard_ejected = qemu.kvm.sdcard_ejected ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2029, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sdcard_erase = qemu.kvm.sdcard_erase ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2030, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sdcard_lock = qemu.kvm.sdcard_lock ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2031, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sdcard_unlock = qemu.kvm.sdcard_unlock ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2032, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.sdcard_read_block = qemu.kvm.sdcard_read_block ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2033, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, len)
}
probe qemu.kvm.simpletrace.sdcard_write_block = qemu.kvm.sdcard_write_block ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2034, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, len)
}
probe qemu.kvm.simpletrace.sdcard_write_data = qemu.kvm.sdcard_write_data ?
{
    try {
        argproto_str = proto ? user_string_n(proto, 512) : "<null>"
    } catch {}
    argproto_len = strlen(argproto_str)
    try {
        argcmd_desc_str = cmd_desc ? user_string_n(cmd_desc, 512) : "<null>"
    } catch {}
    argcmd_desc_len = strlen(argcmd_desc_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%8b%8b", 1, 2035, gettimeofday_ns(), 24 + 4 + argproto_len + 4 + argcmd_desc_len + 8 + 8, pid(), argproto_len, argproto_len, argproto_str, argcmd_desc_len, argcmd_desc_len, argcmd_desc_str, cmd, value)
}
probe qemu.kvm.simpletrace.sdcard_read_data = qemu.kvm.sdcard_read_data ?
{
    try {
        argproto_str = proto ? user_string_n(proto, 512) : "<null>"
    } catch {}
    argproto_len = strlen(argproto_str)
    try {
        argcmd_desc_str = cmd_desc ? user_string_n(cmd_desc, 512) : "<null>"
    } catch {}
    argcmd_desc_len = strlen(argcmd_desc_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%8b%8b", 1, 2036, gettimeofday_ns(), 24 + 4 + argproto_len + 4 + argcmd_desc_len + 8 + 8, pid(), argproto_len, argproto_len, argproto_str, argcmd_desc_len, argcmd_desc_len, argcmd_desc_str, cmd, length)
}
probe qemu.kvm.simpletrace.sdcard_set_voltage = qemu.kvm.sdcard_set_voltage ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2037, gettimeofday_ns(), 24 + 8, pid(), millivolts)
}
probe qemu.kvm.simpletrace.milkymist_memcard_memory_read = qemu.kvm.milkymist_memcard_memory_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2038, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.milkymist_memcard_memory_write = qemu.kvm.milkymist_memcard_memory_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2039, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.pxa2xx_mmci_read = qemu.kvm.pxa2xx_mmci_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2040, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), size, addr, value)
}
probe qemu.kvm.simpletrace.pxa2xx_mmci_write = qemu.kvm.pxa2xx_mmci_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2041, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), size, addr, value)
}
probe qemu.kvm.simpletrace.superio_create_parallel = qemu.kvm.superio_create_parallel ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2042, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), id, base, irq)
}
probe qemu.kvm.simpletrace.superio_create_serial = qemu.kvm.superio_create_serial ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2043, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), id, base, irq)
}
probe qemu.kvm.simpletrace.superio_create_floppy = qemu.kvm.superio_create_floppy ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2044, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), id, base, irq)
}
probe qemu.kvm.simpletrace.superio_create_ide = qemu.kvm.superio_create_ide ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2045, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), id, base, irq)
}
probe qemu.kvm.simpletrace.pc87312_io_read = qemu.kvm.pc87312_io_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2046, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.pc87312_io_write = qemu.kvm.pc87312_io_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2047, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.mhp_pc_dimm_assigned_slot = qemu.kvm.mhp_pc_dimm_assigned_slot ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2048, gettimeofday_ns(), 24 + 8, pid(), slot)
}
probe qemu.kvm.simpletrace.mhp_pc_dimm_assigned_address = qemu.kvm.mhp_pc_dimm_assigned_address ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2049, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.x86_iommu_iec_notify = qemu.kvm.x86_iommu_iec_notify ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2050, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), global_, index, mask)
}
probe qemu.kvm.simpletrace.vtd_inv_desc = qemu.kvm.vtd_inv_desc ?
{
    try {
        argtype_str = type ? user_string_n(type, 512) : "<null>"
    } catch {}
    argtype_len = strlen(argtype_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 2051, gettimeofday_ns(), 24 + 4 + argtype_len + 8 + 8, pid(), argtype_len, argtype_len, argtype_str, hi, lo)
}
probe qemu.kvm.simpletrace.vtd_inv_desc_invalid = qemu.kvm.vtd_inv_desc_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2052, gettimeofday_ns(), 24 + 8 + 8, pid(), hi, lo)
}
probe qemu.kvm.simpletrace.vtd_inv_desc_cc_domain = qemu.kvm.vtd_inv_desc_cc_domain ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2053, gettimeofday_ns(), 24 + 8, pid(), domain)
}
probe qemu.kvm.simpletrace.vtd_inv_desc_cc_global = qemu.kvm.vtd_inv_desc_cc_global ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2054, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.vtd_inv_desc_cc_device = qemu.kvm.vtd_inv_desc_cc_device ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2055, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bus, dev, fn)
}
probe qemu.kvm.simpletrace.vtd_inv_desc_cc_devices = qemu.kvm.vtd_inv_desc_cc_devices ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2056, gettimeofday_ns(), 24 + 8 + 8, pid(), sid, fmask)
}
probe qemu.kvm.simpletrace.vtd_inv_desc_cc_invalid = qemu.kvm.vtd_inv_desc_cc_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2057, gettimeofday_ns(), 24 + 8 + 8, pid(), hi, lo)
}
probe qemu.kvm.simpletrace.vtd_inv_desc_iotlb_global = qemu.kvm.vtd_inv_desc_iotlb_global ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2058, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.vtd_inv_desc_iotlb_domain = qemu.kvm.vtd_inv_desc_iotlb_domain ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2059, gettimeofday_ns(), 24 + 8, pid(), domain)
}
probe qemu.kvm.simpletrace.vtd_inv_desc_iotlb_pages = qemu.kvm.vtd_inv_desc_iotlb_pages ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2060, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), domain, addr, mask)
}
probe qemu.kvm.simpletrace.vtd_inv_desc_iotlb_invalid = qemu.kvm.vtd_inv_desc_iotlb_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2061, gettimeofday_ns(), 24 + 8 + 8, pid(), hi, lo)
}
probe qemu.kvm.simpletrace.vtd_inv_desc_wait_sw = qemu.kvm.vtd_inv_desc_wait_sw ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2062, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, data)
}
probe qemu.kvm.simpletrace.vtd_inv_desc_wait_irq = qemu.kvm.vtd_inv_desc_wait_irq ?
{
    try {
        argmsg_str = msg ? user_string_n(msg, 512) : "<null>"
    } catch {}
    argmsg_len = strlen(argmsg_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2063, gettimeofday_ns(), 24 + 4 + argmsg_len, pid(), argmsg_len, argmsg_len, argmsg_str)
}
probe qemu.kvm.simpletrace.vtd_inv_desc_wait_invalid = qemu.kvm.vtd_inv_desc_wait_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2064, gettimeofday_ns(), 24 + 8 + 8, pid(), hi, lo)
}
probe qemu.kvm.simpletrace.vtd_inv_desc_wait_write_fail = qemu.kvm.vtd_inv_desc_wait_write_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2065, gettimeofday_ns(), 24 + 8 + 8, pid(), hi, lo)
}
probe qemu.kvm.simpletrace.vtd_inv_desc_iec = qemu.kvm.vtd_inv_desc_iec ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2066, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), granularity, index, mask)
}
probe qemu.kvm.simpletrace.vtd_inv_qi_enable = qemu.kvm.vtd_inv_qi_enable ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2067, gettimeofday_ns(), 24 + 8, pid(), enable)
}
probe qemu.kvm.simpletrace.vtd_inv_qi_setup = qemu.kvm.vtd_inv_qi_setup ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2068, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, size)
}
probe qemu.kvm.simpletrace.vtd_inv_qi_head = qemu.kvm.vtd_inv_qi_head ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2069, gettimeofday_ns(), 24 + 8, pid(), head)
}
probe qemu.kvm.simpletrace.vtd_inv_qi_tail = qemu.kvm.vtd_inv_qi_tail ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2070, gettimeofday_ns(), 24 + 8, pid(), head)
}
probe qemu.kvm.simpletrace.vtd_inv_qi_fetch = qemu.kvm.vtd_inv_qi_fetch ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2071, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.vtd_context_cache_reset = qemu.kvm.vtd_context_cache_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2072, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.vtd_re_not_present = qemu.kvm.vtd_re_not_present ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2073, gettimeofday_ns(), 24 + 8, pid(), bus)
}
probe qemu.kvm.simpletrace.vtd_re_invalid = qemu.kvm.vtd_re_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2074, gettimeofday_ns(), 24 + 8 + 8, pid(), hi, lo)
}
probe qemu.kvm.simpletrace.vtd_ce_not_present = qemu.kvm.vtd_ce_not_present ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2075, gettimeofday_ns(), 24 + 8 + 8, pid(), bus, devfn)
}
probe qemu.kvm.simpletrace.vtd_ce_invalid = qemu.kvm.vtd_ce_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2076, gettimeofday_ns(), 24 + 8 + 8, pid(), hi, lo)
}
probe qemu.kvm.simpletrace.vtd_iotlb_page_hit = qemu.kvm.vtd_iotlb_page_hit ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2077, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), sid, addr, slpte, domain)
}
probe qemu.kvm.simpletrace.vtd_iotlb_page_update = qemu.kvm.vtd_iotlb_page_update ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2078, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), sid, addr, slpte, domain)
}
probe qemu.kvm.simpletrace.vtd_iotlb_cc_hit = qemu.kvm.vtd_iotlb_cc_hit ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2079, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), bus, devfn, high, low, gen)
}
probe qemu.kvm.simpletrace.vtd_iotlb_cc_update = qemu.kvm.vtd_iotlb_cc_update ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2080, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), bus, devfn, high, low, gen1, gen2)
}
probe qemu.kvm.simpletrace.vtd_iotlb_reset = qemu.kvm.vtd_iotlb_reset ?
{
    try {
        argreason_str = reason ? user_string_n(reason, 512) : "<null>"
    } catch {}
    argreason_len = strlen(argreason_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2081, gettimeofday_ns(), 24 + 4 + argreason_len, pid(), argreason_len, argreason_len, argreason_str)
}
probe qemu.kvm.simpletrace.vtd_fault_disabled = qemu.kvm.vtd_fault_disabled ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2082, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.vtd_replay_ce_valid = qemu.kvm.vtd_replay_ce_valid ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2083, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), bus, dev, fn, domain, hi, lo)
}
probe qemu.kvm.simpletrace.vtd_replay_ce_invalid = qemu.kvm.vtd_replay_ce_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2084, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bus, dev, fn)
}
probe qemu.kvm.simpletrace.vtd_page_walk_level = qemu.kvm.vtd_page_walk_level ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2085, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), addr, level, start, end)
}
probe qemu.kvm.simpletrace.vtd_page_walk_one = qemu.kvm.vtd_page_walk_one ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2086, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), domain, iova, gpa, mask, perm)
}
probe qemu.kvm.simpletrace.vtd_page_walk_one_skip_map = qemu.kvm.vtd_page_walk_one_skip_map ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2087, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), iova, mask, translated)
}
probe qemu.kvm.simpletrace.vtd_page_walk_one_skip_unmap = qemu.kvm.vtd_page_walk_one_skip_unmap ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2088, gettimeofday_ns(), 24 + 8 + 8, pid(), iova, mask)
}
probe qemu.kvm.simpletrace.vtd_page_walk_skip_read = qemu.kvm.vtd_page_walk_skip_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2089, gettimeofday_ns(), 24 + 8 + 8, pid(), iova, next_)
}
probe qemu.kvm.simpletrace.vtd_page_walk_skip_reserve = qemu.kvm.vtd_page_walk_skip_reserve ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2090, gettimeofday_ns(), 24 + 8 + 8, pid(), iova, next_)
}
probe qemu.kvm.simpletrace.vtd_switch_address_space = qemu.kvm.vtd_switch_address_space ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2091, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), bus, slot, fn, on)
}
probe qemu.kvm.simpletrace.vtd_as_unmap_whole = qemu.kvm.vtd_as_unmap_whole ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2092, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), bus, slot, fn, iova, size)
}
probe qemu.kvm.simpletrace.vtd_translate_pt = qemu.kvm.vtd_translate_pt ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2093, gettimeofday_ns(), 24 + 8 + 8, pid(), sid, addr)
}
probe qemu.kvm.simpletrace.vtd_pt_enable_fast_path = qemu.kvm.vtd_pt_enable_fast_path ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2094, gettimeofday_ns(), 24 + 8 + 8, pid(), sid, success)
}
probe qemu.kvm.simpletrace.vtd_irq_generate = qemu.kvm.vtd_irq_generate ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2095, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, data)
}
probe qemu.kvm.simpletrace.vtd_reg_read = qemu.kvm.vtd_reg_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2096, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, size)
}
probe qemu.kvm.simpletrace.vtd_reg_write = qemu.kvm.vtd_reg_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2097, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, size, val)
}
probe qemu.kvm.simpletrace.vtd_reg_dmar_root = qemu.kvm.vtd_reg_dmar_root ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2098, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, extended)
}
probe qemu.kvm.simpletrace.vtd_reg_ir_root = qemu.kvm.vtd_reg_ir_root ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2099, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, size)
}
probe qemu.kvm.simpletrace.vtd_reg_write_gcmd = qemu.kvm.vtd_reg_write_gcmd ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2100, gettimeofday_ns(), 24 + 8 + 8, pid(), status, val)
}
probe qemu.kvm.simpletrace.vtd_reg_write_fectl = qemu.kvm.vtd_reg_write_fectl ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2101, gettimeofday_ns(), 24 + 8, pid(), value)
}
probe qemu.kvm.simpletrace.vtd_reg_write_iectl = qemu.kvm.vtd_reg_write_iectl ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2102, gettimeofday_ns(), 24 + 8, pid(), value)
}
probe qemu.kvm.simpletrace.vtd_reg_ics_clear_ip = qemu.kvm.vtd_reg_ics_clear_ip ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2103, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.vtd_dmar_translate = qemu.kvm.vtd_dmar_translate ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2104, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), bus, slot, func, iova, gpa, mask)
}
probe qemu.kvm.simpletrace.vtd_dmar_enable = qemu.kvm.vtd_dmar_enable ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2105, gettimeofday_ns(), 24 + 8, pid(), en)
}
probe qemu.kvm.simpletrace.vtd_dmar_fault = qemu.kvm.vtd_dmar_fault ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2106, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), sid, fault, addr, is_write)
}
probe qemu.kvm.simpletrace.vtd_ir_enable = qemu.kvm.vtd_ir_enable ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2107, gettimeofday_ns(), 24 + 8, pid(), en)
}
probe qemu.kvm.simpletrace.vtd_ir_irte_get = qemu.kvm.vtd_ir_irte_get ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2108, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), index, lo, hi)
}
probe qemu.kvm.simpletrace.vtd_ir_remap = qemu.kvm.vtd_ir_remap ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2109, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), index, tri, vec, deliver, dest, dest_mode)
}
probe qemu.kvm.simpletrace.vtd_ir_remap_type = qemu.kvm.vtd_ir_remap_type ?
{
    try {
        argtype_str = type ? user_string_n(type, 512) : "<null>"
    } catch {}
    argtype_len = strlen(argtype_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2110, gettimeofday_ns(), 24 + 4 + argtype_len, pid(), argtype_len, argtype_len, argtype_str)
}
probe qemu.kvm.simpletrace.vtd_ir_remap_msi = qemu.kvm.vtd_ir_remap_msi ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2111, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), addr, data, addr2, data2)
}
probe qemu.kvm.simpletrace.vtd_ir_remap_msi_req = qemu.kvm.vtd_ir_remap_msi_req ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2112, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, data)
}
probe qemu.kvm.simpletrace.vtd_fsts_ppf = qemu.kvm.vtd_fsts_ppf ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2113, gettimeofday_ns(), 24 + 8, pid(), set)
}
probe qemu.kvm.simpletrace.vtd_fsts_clear_ip = qemu.kvm.vtd_fsts_clear_ip ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2114, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.vtd_frr_new = qemu.kvm.vtd_frr_new ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2115, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), index, hi, lo)
}
probe qemu.kvm.simpletrace.vtd_warn_invalid_qi_tail = qemu.kvm.vtd_warn_invalid_qi_tail ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2116, gettimeofday_ns(), 24 + 8, pid(), tail)
}
probe qemu.kvm.simpletrace.vtd_warn_ir_vector = qemu.kvm.vtd_warn_ir_vector ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2117, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), sid, index, vec, target)
}
probe qemu.kvm.simpletrace.vtd_warn_ir_trigger = qemu.kvm.vtd_warn_ir_trigger ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2118, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), sid, index, trig, target)
}
probe qemu.kvm.simpletrace.amdvi_evntlog_fail = qemu.kvm.amdvi_evntlog_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2119, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, head)
}
probe qemu.kvm.simpletrace.amdvi_cache_update = qemu.kvm.amdvi_cache_update ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2120, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), domid, bus, slot, func, gpa, txaddr)
}
probe qemu.kvm.simpletrace.amdvi_completion_wait_fail = qemu.kvm.amdvi_completion_wait_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2121, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.amdvi_mmio_write = qemu.kvm.amdvi_mmio_write ?
{
    try {
        argreg_str = reg ? user_string_n(reg, 512) : "<null>"
    } catch {}
    argreg_len = strlen(argreg_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b%8b", 1, 2122, gettimeofday_ns(), 24 + 4 + argreg_len + 8 + 8 + 8 + 8, pid(), argreg_len, argreg_len, argreg_str, addr, size, val, offset)
}
probe qemu.kvm.simpletrace.amdvi_mmio_read = qemu.kvm.amdvi_mmio_read ?
{
    try {
        argreg_str = reg ? user_string_n(reg, 512) : "<null>"
    } catch {}
    argreg_len = strlen(argreg_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 2123, gettimeofday_ns(), 24 + 4 + argreg_len + 8 + 8 + 8, pid(), argreg_len, argreg_len, argreg_str, addr, size, offset)
}
probe qemu.kvm.simpletrace.amdvi_mmio_read_invalid = qemu.kvm.amdvi_mmio_read_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2124, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), max, addr, size)
}
probe qemu.kvm.simpletrace.amdvi_command_error = qemu.kvm.amdvi_command_error ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2125, gettimeofday_ns(), 24 + 8, pid(), status)
}
probe qemu.kvm.simpletrace.amdvi_command_read_fail = qemu.kvm.amdvi_command_read_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2126, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, head)
}
probe qemu.kvm.simpletrace.amdvi_command_exec = qemu.kvm.amdvi_command_exec ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2127, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), head, tail, buf)
}
probe qemu.kvm.simpletrace.amdvi_unhandled_command = qemu.kvm.amdvi_unhandled_command ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2128, gettimeofday_ns(), 24 + 8, pid(), type)
}
probe qemu.kvm.simpletrace.amdvi_intr_inval = qemu.kvm.amdvi_intr_inval ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2129, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.amdvi_iotlb_inval = qemu.kvm.amdvi_iotlb_inval ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2130, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.amdvi_prefetch_pages = qemu.kvm.amdvi_prefetch_pages ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2131, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.amdvi_pages_inval = qemu.kvm.amdvi_pages_inval ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2132, gettimeofday_ns(), 24 + 8, pid(), domid)
}
probe qemu.kvm.simpletrace.amdvi_all_inval = qemu.kvm.amdvi_all_inval ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2133, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.amdvi_ppr_exec = qemu.kvm.amdvi_ppr_exec ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2134, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.amdvi_devtab_inval = qemu.kvm.amdvi_devtab_inval ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2135, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bus, slot, func)
}
probe qemu.kvm.simpletrace.amdvi_completion_wait = qemu.kvm.amdvi_completion_wait ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2136, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, data)
}
probe qemu.kvm.simpletrace.amdvi_control_status = qemu.kvm.amdvi_control_status ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2137, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.amdvi_iotlb_reset = qemu.kvm.amdvi_iotlb_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2138, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.amdvi_dte_get_fail = qemu.kvm.amdvi_dte_get_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2139, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, offset)
}
probe qemu.kvm.simpletrace.amdvi_invalid_dte = qemu.kvm.amdvi_invalid_dte ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2140, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.amdvi_get_pte_hwerror = qemu.kvm.amdvi_get_pte_hwerror ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2141, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.amdvi_mode_invalid = qemu.kvm.amdvi_mode_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2142, gettimeofday_ns(), 24 + 8 + 8, pid(), level, addr)
}
probe qemu.kvm.simpletrace.amdvi_page_fault = qemu.kvm.amdvi_page_fault ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2143, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.amdvi_iotlb_hit = qemu.kvm.amdvi_iotlb_hit ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2144, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), bus, slot, func, addr, txaddr)
}
probe qemu.kvm.simpletrace.amdvi_translation_result = qemu.kvm.amdvi_translation_result ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2145, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), bus, slot, func, addr, txaddr)
}
probe qemu.kvm.simpletrace.vmport_register = qemu.kvm.vmport_register ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2146, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), command, func, opaque)
}
probe qemu.kvm.simpletrace.vmport_command = qemu.kvm.vmport_command ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2147, gettimeofday_ns(), 24 + 8, pid(), command)
}
probe qemu.kvm.simpletrace.xen_platform_log = qemu.kvm.xen_platform_log ?
{
    try {
        args_str = s ? user_string_n(s, 512) : "<null>"
    } catch {}
    args_len = strlen(args_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2148, gettimeofday_ns(), 24 + 4 + args_len, pid(), args_len, args_len, args_str)
}
probe qemu.kvm.simpletrace.xen_pv_mmio_read = qemu.kvm.xen_pv_mmio_read ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2149, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.xen_pv_mmio_write = qemu.kvm.xen_pv_mmio_write ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2150, gettimeofday_ns(), 24 + 8, pid(), addr)
}
probe qemu.kvm.simpletrace.xen_ram_alloc = qemu.kvm.xen_ram_alloc ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2151, gettimeofday_ns(), 24 + 8 + 8, pid(), ram_addr, size)
}
probe qemu.kvm.simpletrace.xen_client_set_memory = qemu.kvm.xen_client_set_memory ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2152, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), start_addr, size, log_dirty)
}
probe qemu.kvm.simpletrace.handle_ioreq = qemu.kvm.handle_ioreq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b%8b%8b", 1, 2153, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), req, type, dir, df, data_is_ptr, addr, data, count, size)
}
probe qemu.kvm.simpletrace.handle_ioreq_read = qemu.kvm.handle_ioreq_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b%8b", 1, 2154, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), req, type, df, data_is_ptr, addr, data, count, size)
}
probe qemu.kvm.simpletrace.handle_ioreq_write = qemu.kvm.handle_ioreq_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b%8b", 1, 2155, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), req, type, df, data_is_ptr, addr, data, count, size)
}
probe qemu.kvm.simpletrace.cpu_ioreq_pio = qemu.kvm.cpu_ioreq_pio ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b%8b", 1, 2156, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), req, dir, df, data_is_ptr, addr, data, count, size)
}
probe qemu.kvm.simpletrace.cpu_ioreq_pio_read_reg = qemu.kvm.cpu_ioreq_pio_read_reg ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2157, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), req, data, addr, size)
}
probe qemu.kvm.simpletrace.cpu_ioreq_pio_write_reg = qemu.kvm.cpu_ioreq_pio_write_reg ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2158, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), req, data, addr, size)
}
probe qemu.kvm.simpletrace.cpu_ioreq_move = qemu.kvm.cpu_ioreq_move ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b%8b", 1, 2159, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), req, dir, df, data_is_ptr, addr, data, count, size)
}
probe qemu.kvm.simpletrace.xen_map_cache = qemu.kvm.xen_map_cache ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2160, gettimeofday_ns(), 24 + 8, pid(), phys_addr)
}
probe qemu.kvm.simpletrace.xen_remap_bucket = qemu.kvm.xen_remap_bucket ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2161, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.xen_map_cache_return = qemu.kvm.xen_map_cache_return ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2162, gettimeofday_ns(), 24 + 8, pid(), ptr)
}
probe qemu.kvm.simpletrace.v9fs_rcancel = qemu.kvm.v9fs_rcancel ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2163, gettimeofday_ns(), 24 + 8 + 8, pid(), tag, id)
}
probe qemu.kvm.simpletrace.v9fs_rerror = qemu.kvm.v9fs_rerror ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2164, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), tag, id, err)
}
probe qemu.kvm.simpletrace.v9fs_version = qemu.kvm.v9fs_version ?
{
    try {
        argversion_str = version ? user_string_n(version, 512) : "<null>"
    } catch {}
    argversion_len = strlen(argversion_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%4b%.*s", 1, 2165, gettimeofday_ns(), 24 + 8 + 8 + 8 + 4 + argversion_len, pid(), tag, id, msize, argversion_len, argversion_len, argversion_str)
}
probe qemu.kvm.simpletrace.v9fs_version_return = qemu.kvm.v9fs_version_return ?
{
    try {
        argversion_str = version ? user_string_n(version, 512) : "<null>"
    } catch {}
    argversion_len = strlen(argversion_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%4b%.*s", 1, 2166, gettimeofday_ns(), 24 + 8 + 8 + 8 + 4 + argversion_len, pid(), tag, id, msize, argversion_len, argversion_len, argversion_str)
}
probe qemu.kvm.simpletrace.v9fs_attach = qemu.kvm.v9fs_attach ?
{
    try {
        arguname_str = uname ? user_string_n(uname, 512) : "<null>"
    } catch {}
    arguname_len = strlen(arguname_str)
    try {
        arganame_str = aname ? user_string_n(aname, 512) : "<null>"
    } catch {}
    arganame_len = strlen(arganame_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%4b%.*s%4b%.*s", 1, 2167, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 4 + arguname_len + 4 + arganame_len, pid(), tag, id, fid, afid, arguname_len, arguname_len, arguname_str, arganame_len, arganame_len, arganame_str)
}
probe qemu.kvm.simpletrace.v9fs_attach_return = qemu.kvm.v9fs_attach_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2168, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, type, version, path)
}
probe qemu.kvm.simpletrace.v9fs_stat = qemu.kvm.v9fs_stat ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2169, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), tag, id, fid)
}
probe qemu.kvm.simpletrace.v9fs_stat_return = qemu.kvm.v9fs_stat_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2170, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, mode, atime, mtime, length)
}
probe qemu.kvm.simpletrace.v9fs_getattr = qemu.kvm.v9fs_getattr ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2171, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), tag, id, fid, request_mask)
}
probe qemu.kvm.simpletrace.v9fs_getattr_return = qemu.kvm.v9fs_getattr_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2172, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, result_mask, mode, uid, gid)
}
probe qemu.kvm.simpletrace.v9fs_walk = qemu.kvm.v9fs_walk ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2173, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, fid, newfid, nwnames)
}
probe qemu.kvm.simpletrace.v9fs_walk_return = qemu.kvm.v9fs_walk_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2174, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), tag, id, nwnames, qids)
}
probe qemu.kvm.simpletrace.v9fs_open = qemu.kvm.v9fs_open ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2175, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), tag, id, fid, mode)
}
probe qemu.kvm.simpletrace.v9fs_open_return = qemu.kvm.v9fs_open_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2176, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, type, version, path, iounit)
}
probe qemu.kvm.simpletrace.v9fs_lcreate = qemu.kvm.v9fs_lcreate ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2177, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, dfid, flags, mode, gid)
}
probe qemu.kvm.simpletrace.v9fs_lcreate_return = qemu.kvm.v9fs_lcreate_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2178, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, type, version, path, iounit)
}
probe qemu.kvm.simpletrace.v9fs_fsync = qemu.kvm.v9fs_fsync ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2179, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), tag, id, fid, datasync)
}
probe qemu.kvm.simpletrace.v9fs_clunk = qemu.kvm.v9fs_clunk ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2180, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), tag, id, fid)
}
probe qemu.kvm.simpletrace.v9fs_read = qemu.kvm.v9fs_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2181, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, fid, off, max_count)
}
probe qemu.kvm.simpletrace.v9fs_read_return = qemu.kvm.v9fs_read_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2182, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), tag, id, count, err)
}
probe qemu.kvm.simpletrace.v9fs_readdir = qemu.kvm.v9fs_readdir ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2183, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, fid, offset, max_count)
}
probe qemu.kvm.simpletrace.v9fs_readdir_return = qemu.kvm.v9fs_readdir_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2184, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), tag, id, count, retval)
}
probe qemu.kvm.simpletrace.v9fs_write = qemu.kvm.v9fs_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2185, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, fid, off, count, cnt)
}
probe qemu.kvm.simpletrace.v9fs_write_return = qemu.kvm.v9fs_write_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2186, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), tag, id, total, err)
}
probe qemu.kvm.simpletrace.v9fs_create = qemu.kvm.v9fs_create ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%4b%.*s%8b%8b", 1, 2187, gettimeofday_ns(), 24 + 8 + 8 + 8 + 4 + argname_len + 8 + 8, pid(), tag, id, fid, argname_len, argname_len, argname_str, perm, mode)
}
probe qemu.kvm.simpletrace.v9fs_create_return = qemu.kvm.v9fs_create_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2188, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, type, version, path, iounit)
}
probe qemu.kvm.simpletrace.v9fs_symlink = qemu.kvm.v9fs_symlink ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argsymname_str = symname ? user_string_n(symname, 512) : "<null>"
    } catch {}
    argsymname_len = strlen(argsymname_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%4b%.*s%4b%.*s%8b", 1, 2189, gettimeofday_ns(), 24 + 8 + 8 + 8 + 4 + argname_len + 4 + argsymname_len + 8, pid(), tag, id, fid, argname_len, argname_len, argname_str, argsymname_len, argsymname_len, argsymname_str, gid)
}
probe qemu.kvm.simpletrace.v9fs_symlink_return = qemu.kvm.v9fs_symlink_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2190, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, type, version, path)
}
probe qemu.kvm.simpletrace.v9fs_flush = qemu.kvm.v9fs_flush ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2191, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), tag, id, flush_tag)
}
probe qemu.kvm.simpletrace.v9fs_link = qemu.kvm.v9fs_link ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%4b%.*s", 1, 2192, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 4 + argname_len, pid(), tag, id, dfid, oldfid, argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.v9fs_remove = qemu.kvm.v9fs_remove ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2193, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), tag, id, fid)
}
probe qemu.kvm.simpletrace.v9fs_wstat = qemu.kvm.v9fs_wstat ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2194, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, fid, mode, atime, mtime)
}
probe qemu.kvm.simpletrace.v9fs_mknod = qemu.kvm.v9fs_mknod ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2195, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, fid, mode, major, minor)
}
probe qemu.kvm.simpletrace.v9fs_mknod_return = qemu.kvm.v9fs_mknod_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2196, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, type, version, path)
}
probe qemu.kvm.simpletrace.v9fs_lock = qemu.kvm.v9fs_lock ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2197, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, fid, type, start, length)
}
probe qemu.kvm.simpletrace.v9fs_lock_return = qemu.kvm.v9fs_lock_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2198, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), tag, id, status)
}
probe qemu.kvm.simpletrace.v9fs_getlock = qemu.kvm.v9fs_getlock ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2199, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, fid, type, start, length)
}
probe qemu.kvm.simpletrace.v9fs_getlock_return = qemu.kvm.v9fs_getlock_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2200, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, type, start, length, proc_id)
}
probe qemu.kvm.simpletrace.v9fs_mkdir = qemu.kvm.v9fs_mkdir ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%4b%.*s%8b%8b", 1, 2201, gettimeofday_ns(), 24 + 8 + 8 + 8 + 4 + argname_len + 8 + 8, pid(), tag, id, fid, argname_len, argname_len, argname_str, mode, gid)
}
probe qemu.kvm.simpletrace.v9fs_mkdir_return = qemu.kvm.v9fs_mkdir_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2202, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), tag, id, type, version, path, err)
}
probe qemu.kvm.simpletrace.v9fs_xattrwalk = qemu.kvm.v9fs_xattrwalk ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%4b%.*s", 1, 2203, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 4 + argname_len, pid(), tag, id, fid, newfid, argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.v9fs_xattrwalk_return = qemu.kvm.v9fs_xattrwalk_return ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2204, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), tag, id, size)
}
probe qemu.kvm.simpletrace.v9fs_xattrcreate = qemu.kvm.v9fs_xattrcreate ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%4b%.*s%8b%8b", 1, 2205, gettimeofday_ns(), 24 + 8 + 8 + 8 + 4 + argname_len + 8 + 8, pid(), tag, id, fid, argname_len, argname_len, argname_str, size, flags)
}
probe qemu.kvm.simpletrace.v9fs_readlink = qemu.kvm.v9fs_readlink ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2206, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), tag, id, fid)
}
probe qemu.kvm.simpletrace.v9fs_readlink_return = qemu.kvm.v9fs_readlink_return ?
{
    try {
        argtarget_str = target ? user_string_n(target, 512) : "<null>"
    } catch {}
    argtarget_len = strlen(argtarget_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 2207, gettimeofday_ns(), 24 + 8 + 8 + 4 + argtarget_len, pid(), tag, id, argtarget_len, argtarget_len, argtarget_str)
}
probe qemu.kvm.simpletrace.spapr_pci_msi = qemu.kvm.spapr_pci_msi ?
{
    try {
        argmsg_str = msg ? user_string_n(msg, 512) : "<null>"
    } catch {}
    argmsg_len = strlen(argmsg_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2208, gettimeofday_ns(), 24 + 4 + argmsg_len + 8, pid(), argmsg_len, argmsg_len, argmsg_str, ca)
}
probe qemu.kvm.simpletrace.spapr_pci_msi_setup = qemu.kvm.spapr_pci_msi_setup ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 2209, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8, pid(), argname_len, argname_len, argname_str, vector, addr)
}
probe qemu.kvm.simpletrace.spapr_pci_rtas_ibm_change_msi = qemu.kvm.spapr_pci_rtas_ibm_change_msi ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2210, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), cfg, func, req, first)
}
probe qemu.kvm.simpletrace.spapr_pci_rtas_ibm_query_interrupt_source_number = qemu.kvm.spapr_pci_rtas_ibm_query_interrupt_source_number ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2211, gettimeofday_ns(), 24 + 8 + 8, pid(), ioa, intr)
}
probe qemu.kvm.simpletrace.spapr_pci_msi_write = qemu.kvm.spapr_pci_msi_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2212, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, data, dt_irq)
}
probe qemu.kvm.simpletrace.spapr_pci_lsi_set = qemu.kvm.spapr_pci_lsi_set ?
{
    try {
        argbusname_str = busname ? user_string_n(busname, 512) : "<null>"
    } catch {}
    argbusname_len = strlen(argbusname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 2213, gettimeofday_ns(), 24 + 4 + argbusname_len + 8 + 8, pid(), argbusname_len, argbusname_len, argbusname_str, pin, irq)
}
probe qemu.kvm.simpletrace.spapr_pci_msi_retry = qemu.kvm.spapr_pci_msi_retry ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2214, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), config_addr, req_num, max_irqs)
}
probe qemu.kvm.simpletrace.spapr_cas_failed = qemu.kvm.spapr_cas_failed ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2215, gettimeofday_ns(), 24 + 8, pid(), n)
}
probe qemu.kvm.simpletrace.spapr_cas_continue = qemu.kvm.spapr_cas_continue ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2216, gettimeofday_ns(), 24 + 8, pid(), n)
}
probe qemu.kvm.simpletrace.spapr_irq_alloc = qemu.kvm.spapr_irq_alloc ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2217, gettimeofday_ns(), 24 + 8, pid(), irq)
}
probe qemu.kvm.simpletrace.spapr_irq_alloc_block = qemu.kvm.spapr_irq_alloc_block ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2218, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), first, num, lsi, align)
}
probe qemu.kvm.simpletrace.spapr_irq_free = qemu.kvm.spapr_irq_free ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2219, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), src, irq, num)
}
probe qemu.kvm.simpletrace.spapr_irq_free_warn = qemu.kvm.spapr_irq_free_warn ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2220, gettimeofday_ns(), 24 + 8 + 8, pid(), src, irq)
}
probe qemu.kvm.simpletrace.spapr_cas_pvr_try = qemu.kvm.spapr_cas_pvr_try ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2221, gettimeofday_ns(), 24 + 8, pid(), pvr)
}
probe qemu.kvm.simpletrace.spapr_cas_pvr = qemu.kvm.spapr_cas_pvr ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2222, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cur_pvr, explicit_match, new_pvr)
}
probe qemu.kvm.simpletrace.spapr_h_resize_hpt_prepare = qemu.kvm.spapr_h_resize_hpt_prepare ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2223, gettimeofday_ns(), 24 + 8 + 8, pid(), flags, shift)
}
probe qemu.kvm.simpletrace.spapr_h_resize_hpt_commit = qemu.kvm.spapr_h_resize_hpt_commit ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2224, gettimeofday_ns(), 24 + 8 + 8, pid(), flags, shift)
}
probe qemu.kvm.simpletrace.spapr_iommu_put = qemu.kvm.spapr_iommu_put ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2225, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), liobn, ioba, tce, ret)
}
probe qemu.kvm.simpletrace.spapr_iommu_get = qemu.kvm.spapr_iommu_get ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2226, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), liobn, ioba, ret, tce)
}
probe qemu.kvm.simpletrace.spapr_iommu_indirect = qemu.kvm.spapr_iommu_indirect ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2227, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), liobn, ioba, tce, iobaN, tceN, ret)
}
probe qemu.kvm.simpletrace.spapr_iommu_stuff = qemu.kvm.spapr_iommu_stuff ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2228, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), liobn, ioba, tce_value, npages, ret)
}
probe qemu.kvm.simpletrace.spapr_iommu_pci_put = qemu.kvm.spapr_iommu_pci_put ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2229, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), liobn, ioba, tce, ret)
}
probe qemu.kvm.simpletrace.spapr_iommu_pci_get = qemu.kvm.spapr_iommu_pci_get ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2230, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), liobn, ioba, ret, tce)
}
probe qemu.kvm.simpletrace.spapr_iommu_pci_indirect = qemu.kvm.spapr_iommu_pci_indirect ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2231, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), liobn, ioba, tce, iobaN, tceN, ret)
}
probe qemu.kvm.simpletrace.spapr_iommu_pci_stuff = qemu.kvm.spapr_iommu_pci_stuff ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2232, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), liobn, ioba, tce_value, npages, ret)
}
probe qemu.kvm.simpletrace.spapr_iommu_xlate = qemu.kvm.spapr_iommu_xlate ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2233, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), liobn, ioba, tce, perm, pgsize)
}
probe qemu.kvm.simpletrace.spapr_iommu_new_table = qemu.kvm.spapr_iommu_new_table ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2234, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), liobn, table, fd)
}
probe qemu.kvm.simpletrace.spapr_iommu_pre_save = qemu.kvm.spapr_iommu_pre_save ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2235, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), liobn, nb, offs, ps)
}
probe qemu.kvm.simpletrace.spapr_iommu_post_load = qemu.kvm.spapr_iommu_post_load ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2236, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), liobn, pre_nb, post_nb, offs, ps)
}
probe qemu.kvm.simpletrace.spapr_iommu_ddw_query = qemu.kvm.spapr_iommu_ddw_query ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2237, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), buid, cfgaddr, wa, win_size, pgmask)
}
probe qemu.kvm.simpletrace.spapr_iommu_ddw_create = qemu.kvm.spapr_iommu_ddw_create ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2238, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), buid, cfgaddr, pg_size, req_size, start, liobn)
}
probe qemu.kvm.simpletrace.spapr_iommu_ddw_remove = qemu.kvm.spapr_iommu_ddw_remove ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2239, gettimeofday_ns(), 24 + 8, pid(), liobn)
}
probe qemu.kvm.simpletrace.spapr_iommu_ddw_reset = qemu.kvm.spapr_iommu_ddw_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2240, gettimeofday_ns(), 24 + 8 + 8, pid(), buid, cfgaddr)
}
probe qemu.kvm.simpletrace.spapr_drc_set_isolation_state = qemu.kvm.spapr_drc_set_isolation_state ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2241, gettimeofday_ns(), 24 + 8 + 8, pid(), index, state)
}
probe qemu.kvm.simpletrace.spapr_drc_set_isolation_state_finalizing = qemu.kvm.spapr_drc_set_isolation_state_finalizing ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2242, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.spapr_drc_set_isolation_state_deferring = qemu.kvm.spapr_drc_set_isolation_state_deferring ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2243, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.spapr_drc_set_dr_indicator = qemu.kvm.spapr_drc_set_dr_indicator ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2244, gettimeofday_ns(), 24 + 8 + 8, pid(), index, state)
}
probe qemu.kvm.simpletrace.spapr_drc_set_allocation_state = qemu.kvm.spapr_drc_set_allocation_state ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2245, gettimeofday_ns(), 24 + 8 + 8, pid(), index, state)
}
probe qemu.kvm.simpletrace.spapr_drc_set_allocation_state_finalizing = qemu.kvm.spapr_drc_set_allocation_state_finalizing ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2246, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.spapr_drc_set_configured = qemu.kvm.spapr_drc_set_configured ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2247, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.spapr_drc_set_configured_skipping = qemu.kvm.spapr_drc_set_configured_skipping ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2248, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.spapr_drc_attach = qemu.kvm.spapr_drc_attach ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2249, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.spapr_drc_detach = qemu.kvm.spapr_drc_detach ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2250, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.spapr_drc_awaiting_quiesce = qemu.kvm.spapr_drc_awaiting_quiesce ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2251, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.spapr_drc_awaiting_allocation = qemu.kvm.spapr_drc_awaiting_allocation ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2252, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.spapr_drc_reset = qemu.kvm.spapr_drc_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2253, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.spapr_drc_realize = qemu.kvm.spapr_drc_realize ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2254, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.spapr_drc_realize_child = qemu.kvm.spapr_drc_realize_child ?
{
    try {
        argchildname_str = childname ? user_string_n(childname, 512) : "<null>"
    } catch {}
    argchildname_len = strlen(argchildname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 2255, gettimeofday_ns(), 24 + 8 + 4 + argchildname_len, pid(), index, argchildname_len, argchildname_len, argchildname_str)
}
probe qemu.kvm.simpletrace.spapr_drc_realize_complete = qemu.kvm.spapr_drc_realize_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2256, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.spapr_drc_unrealize = qemu.kvm.spapr_drc_unrealize ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2257, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.spapr_ovec_parse_vector = qemu.kvm.spapr_ovec_parse_vector ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2258, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), vector, byte, vec_len, entry)
}
probe qemu.kvm.simpletrace.spapr_ovec_populate_dt = qemu.kvm.spapr_ovec_populate_dt ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2259, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), byte, vec_len, entry)
}
probe qemu.kvm.simpletrace.spapr_rtas_get_sensor_state_not_supported = qemu.kvm.spapr_rtas_get_sensor_state_not_supported ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2260, gettimeofday_ns(), 24 + 8 + 8, pid(), index, type)
}
probe qemu.kvm.simpletrace.spapr_rtas_get_sensor_state_invalid = qemu.kvm.spapr_rtas_get_sensor_state_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2261, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.spapr_rtas_ibm_configure_connector_invalid = qemu.kvm.spapr_rtas_ibm_configure_connector_invalid ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2262, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.spapr_rtas_ibm_configure_connector_missing_fdt = qemu.kvm.spapr_rtas_ibm_configure_connector_missing_fdt ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2263, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.spapr_vio_h_reg_crq = qemu.kvm.spapr_vio_h_reg_crq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2264, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), reg, queue_addr, queue_len)
}
probe qemu.kvm.simpletrace.spapr_vio_free_crq = qemu.kvm.spapr_vio_free_crq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2265, gettimeofday_ns(), 24 + 8, pid(), reg)
}
probe qemu.kvm.simpletrace.ppc_tb_adjust = qemu.kvm.ppc_tb_adjust ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2266, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), offs1, offs2, diff, seconds)
}
probe qemu.kvm.simpletrace.prep_io_800_writeb = qemu.kvm.prep_io_800_writeb ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2267, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.prep_io_800_readb = qemu.kvm.prep_io_800_readb ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2268, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, retval)
}
probe qemu.kvm.simpletrace.prep_systemio_read = qemu.kvm.prep_systemio_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2269, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.prep_systemio_write = qemu.kvm.prep_systemio_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2270, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.rs6000mc_id_read = qemu.kvm.rs6000mc_id_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2271, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.rs6000mc_presence_read = qemu.kvm.rs6000mc_presence_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2272, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.rs6000mc_size_read = qemu.kvm.rs6000mc_size_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2273, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.rs6000mc_size_write = qemu.kvm.rs6000mc_size_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2274, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.rs6000mc_parity_read = qemu.kvm.rs6000mc_parity_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2275, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.mac99_uninorth_write = qemu.kvm.mac99_uninorth_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2276, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.mac99_uninorth_read = qemu.kvm.mac99_uninorth_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2277, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, value)
}
probe qemu.kvm.simpletrace.ppc4xx_pci_map_irq = qemu.kvm.ppc4xx_pci_map_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2278, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), devfn, irq_num, slot)
}
probe qemu.kvm.simpletrace.ppc4xx_pci_set_irq = qemu.kvm.ppc4xx_pci_set_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2279, gettimeofday_ns(), 24 + 8, pid(), irq_num)
}
probe qemu.kvm.simpletrace.ppc440_pcix_map_irq = qemu.kvm.ppc440_pcix_map_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2280, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), devfn, irq_num, slot)
}
probe qemu.kvm.simpletrace.ppc440_pcix_set_irq = qemu.kvm.ppc440_pcix_set_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2281, gettimeofday_ns(), 24 + 8, pid(), irq_num)
}
probe qemu.kvm.simpletrace.ppc440_pcix_update_pim = qemu.kvm.ppc440_pcix_update_pim ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2282, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), idx, size, la)
}
probe qemu.kvm.simpletrace.ppc440_pcix_update_pom = qemu.kvm.ppc440_pcix_update_pom ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2283, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), idx, size, la, pcia)
}
probe qemu.kvm.simpletrace.ppc440_pcix_reg_read = qemu.kvm.ppc440_pcix_reg_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2284, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.ppc440_pcix_reg_write = qemu.kvm.ppc440_pcix_reg_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2285, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.pci_update_mappings_del = qemu.kvm.pci_update_mappings_del ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b", 1, 2286, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), d, bus, slot, func, bar, addr, size)
}
probe qemu.kvm.simpletrace.pci_update_mappings_add = qemu.kvm.pci_update_mappings_add ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b", 1, 2287, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), d, bus, slot, func, bar, addr, size)
}
probe qemu.kvm.simpletrace.pci_cfg_read = qemu.kvm.pci_cfg_read ?
{
    try {
        argdev_str = dev ? user_string_n(dev, 512) : "<null>"
    } catch {}
    argdev_len = strlen(argdev_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b%8b", 1, 2288, gettimeofday_ns(), 24 + 4 + argdev_len + 8 + 8 + 8 + 8, pid(), argdev_len, argdev_len, argdev_str, devid, fnid, offs, val)
}
probe qemu.kvm.simpletrace.pci_cfg_write = qemu.kvm.pci_cfg_write ?
{
    try {
        argdev_str = dev ? user_string_n(dev, 512) : "<null>"
    } catch {}
    argdev_len = strlen(argdev_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b%8b", 1, 2289, gettimeofday_ns(), 24 + 4 + argdev_len + 8 + 8 + 8 + 8, pid(), argdev_len, argdev_len, argdev_str, devid, fnid, offs, val)
}
probe qemu.kvm.simpletrace.msix_write_config = qemu.kvm.msix_write_config ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 2290, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8, pid(), argname_len, argname_len, argname_str, enabled, masked)
}
probe qemu.kvm.simpletrace.grackle_set_irq = qemu.kvm.grackle_set_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2291, gettimeofday_ns(), 24 + 8 + 8, pid(), irq_num, level)
}
probe qemu.kvm.simpletrace.sabre_set_request = qemu.kvm.sabre_set_request ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2292, gettimeofday_ns(), 24 + 8, pid(), irq_num)
}
probe qemu.kvm.simpletrace.sabre_clear_request = qemu.kvm.sabre_clear_request ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2293, gettimeofday_ns(), 24 + 8, pid(), irq_num)
}
probe qemu.kvm.simpletrace.sabre_config_write = qemu.kvm.sabre_config_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2294, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sabre_config_read = qemu.kvm.sabre_config_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2295, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sabre_pci_config_write = qemu.kvm.sabre_pci_config_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2296, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sabre_pci_config_read = qemu.kvm.sabre_pci_config_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2297, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sabre_pci_set_irq = qemu.kvm.sabre_pci_set_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2298, gettimeofday_ns(), 24 + 8 + 8, pid(), irq_num, level)
}
probe qemu.kvm.simpletrace.sabre_pci_set_obio_irq = qemu.kvm.sabre_pci_set_obio_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2299, gettimeofday_ns(), 24 + 8 + 8, pid(), irq_num, level)
}
probe qemu.kvm.simpletrace.unin_set_irq = qemu.kvm.unin_set_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2300, gettimeofday_ns(), 24 + 8 + 8, pid(), irq_num, level)
}
probe qemu.kvm.simpletrace.unin_get_config_reg = qemu.kvm.unin_get_config_reg ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2301, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), reg, addr, retval)
}
probe qemu.kvm.simpletrace.unin_data_write = qemu.kvm.unin_data_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2302, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, len, val)
}
probe qemu.kvm.simpletrace.unin_data_read = qemu.kvm.unin_data_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2303, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, len, val)
}
probe qemu.kvm.simpletrace.css_enable_facility = qemu.kvm.css_enable_facility ?
{
    try {
        argfacility_str = facility ? user_string_n(facility, 512) : "<null>"
    } catch {}
    argfacility_len = strlen(argfacility_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2304, gettimeofday_ns(), 24 + 4 + argfacility_len, pid(), argfacility_len, argfacility_len, argfacility_str)
}
probe qemu.kvm.simpletrace.css_crw = qemu.kvm.css_crw ?
{
    try {
        argchained_str = chained ? user_string_n(chained, 512) : "<null>"
    } catch {}
    argchained_len = strlen(argchained_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%4b%.*s", 1, 2305, gettimeofday_ns(), 24 + 8 + 8 + 8 + 4 + argchained_len, pid(), rsc, erc, rsid, argchained_len, argchained_len, argchained_str)
}
probe qemu.kvm.simpletrace.css_chpid_add = qemu.kvm.css_chpid_add ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2306, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cssid, chpid, type)
}
probe qemu.kvm.simpletrace.css_new_image = qemu.kvm.css_new_image ?
{
    try {
        argdefault_cssid_str = default_cssid ? user_string_n(default_cssid, 512) : "<null>"
    } catch {}
    argdefault_cssid_len = strlen(argdefault_cssid_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 2307, gettimeofday_ns(), 24 + 8 + 4 + argdefault_cssid_len, pid(), cssid, argdefault_cssid_len, argdefault_cssid_len, argdefault_cssid_str)
}
probe qemu.kvm.simpletrace.css_assign_subch = qemu.kvm.css_assign_subch ?
{
    try {
        argdo_assign_str = do_assign ? user_string_n(do_assign, 512) : "<null>"
    } catch {}
    argdo_assign_len = strlen(argdo_assign_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b%8b", 1, 2308, gettimeofday_ns(), 24 + 4 + argdo_assign_len + 8 + 8 + 8 + 8, pid(), argdo_assign_len, argdo_assign_len, argdo_assign_str, cssid, ssid, schid, devno)
}
probe qemu.kvm.simpletrace.css_io_interrupt = qemu.kvm.css_io_interrupt ?
{
    try {
        argconditional_str = conditional ? user_string_n(conditional, 512) : "<null>"
    } catch {}
    argconditional_len = strlen(argconditional_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%4b%.*s", 1, 2309, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 4 + argconditional_len, pid(), cssid, ssid, schid, intparm, isc, argconditional_len, argconditional_len, argconditional_str)
}
probe qemu.kvm.simpletrace.css_adapter_interrupt = qemu.kvm.css_adapter_interrupt ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2310, gettimeofday_ns(), 24 + 8, pid(), isc)
}
probe qemu.kvm.simpletrace.css_do_sic = qemu.kvm.css_do_sic ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2311, gettimeofday_ns(), 24 + 8 + 8, pid(), mode, isc)
}
probe qemu.kvm.simpletrace.virtio_ccw_interpret_ccw = qemu.kvm.virtio_ccw_interpret_ccw ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2312, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), cssid, ssid, schid, cmd_code)
}
probe qemu.kvm.simpletrace.virtio_ccw_new_device = qemu.kvm.virtio_ccw_new_device ?
{
    try {
        argdevno_mode_str = devno_mode ? user_string_n(devno_mode, 512) : "<null>"
    } catch {}
    argdevno_mode_len = strlen(argdevno_mode_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%4b%.*s", 1, 2313, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 4 + argdevno_mode_len, pid(), cssid, ssid, schid, devno, argdevno_mode_len, argdevno_mode_len, argdevno_mode_str)
}
probe qemu.kvm.simpletrace.virtio_ccw_set_ind = qemu.kvm.virtio_ccw_set_ind ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2314, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), ind_loc, ind_old, ind_new)
}
probe qemu.kvm.simpletrace.vfio_intx_interrupt = qemu.kvm.vfio_intx_interrupt ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2315, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, line)
}
probe qemu.kvm.simpletrace.vfio_intx_eoi = qemu.kvm.vfio_intx_eoi ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2316, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_intx_enable_kvm = qemu.kvm.vfio_intx_enable_kvm ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2317, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_intx_disable_kvm = qemu.kvm.vfio_intx_disable_kvm ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2318, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_intx_update = qemu.kvm.vfio_intx_update ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 2319, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8, pid(), argname_len, argname_len, argname_str, new_irq, target_irq)
}
probe qemu.kvm.simpletrace.vfio_intx_enable = qemu.kvm.vfio_intx_enable ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2320, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_intx_disable = qemu.kvm.vfio_intx_disable ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2321, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_msi_interrupt = qemu.kvm.vfio_msi_interrupt ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 2322, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, index, addr, data)
}
probe qemu.kvm.simpletrace.vfio_msix_vector_do_use = qemu.kvm.vfio_msix_vector_do_use ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2323, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, index)
}
probe qemu.kvm.simpletrace.vfio_msix_vector_release = qemu.kvm.vfio_msix_vector_release ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2324, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, index)
}
probe qemu.kvm.simpletrace.vfio_msix_enable = qemu.kvm.vfio_msix_enable ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2325, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_msix_pba_disable = qemu.kvm.vfio_msix_pba_disable ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2326, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_msix_pba_enable = qemu.kvm.vfio_msix_pba_enable ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2327, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_msix_disable = qemu.kvm.vfio_msix_disable ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2328, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_msix_fixup = qemu.kvm.vfio_msix_fixup ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 2329, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, bar, start, end)
}
probe qemu.kvm.simpletrace.vfio_msix_relo_cost = qemu.kvm.vfio_msix_relo_cost ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 2330, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8, pid(), argname_len, argname_len, argname_str, bar, cost)
}
probe qemu.kvm.simpletrace.vfio_msix_relo = qemu.kvm.vfio_msix_relo ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 2331, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8, pid(), argname_len, argname_len, argname_str, bar, offset)
}
probe qemu.kvm.simpletrace.vfio_msi_enable = qemu.kvm.vfio_msi_enable ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2332, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, nr_vectors)
}
probe qemu.kvm.simpletrace.vfio_msi_disable = qemu.kvm.vfio_msi_disable ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2333, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_pci_load_rom = qemu.kvm.vfio_pci_load_rom ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 2334, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, size, offset, flags)
}
probe qemu.kvm.simpletrace.vfio_rom_read = qemu.kvm.vfio_rom_read ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 2335, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, addr, size, data)
}
probe qemu.kvm.simpletrace.vfio_pci_size_rom = qemu.kvm.vfio_pci_size_rom ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2336, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, size)
}
probe qemu.kvm.simpletrace.vfio_vga_write = qemu.kvm.vfio_vga_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2337, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, data, size)
}
probe qemu.kvm.simpletrace.vfio_vga_read = qemu.kvm.vfio_vga_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2338, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, size, data)
}
probe qemu.kvm.simpletrace.vfio_pci_read_config = qemu.kvm.vfio_pci_read_config ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 2339, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, addr, len, val)
}
probe qemu.kvm.simpletrace.vfio_pci_write_config = qemu.kvm.vfio_pci_write_config ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 2340, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, addr, val, len)
}
probe qemu.kvm.simpletrace.vfio_msi_setup = qemu.kvm.vfio_msi_setup ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2341, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, pos)
}
probe qemu.kvm.simpletrace.vfio_msix_early_setup = qemu.kvm.vfio_msix_early_setup ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b%8b", 1, 2342, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, pos, table_bar, offset, entries)
}
probe qemu.kvm.simpletrace.vfio_check_pcie_flr = qemu.kvm.vfio_check_pcie_flr ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2343, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_check_pm_reset = qemu.kvm.vfio_check_pm_reset ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2344, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_check_af_flr = qemu.kvm.vfio_check_af_flr ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2345, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_pci_hot_reset = qemu.kvm.vfio_pci_hot_reset ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argtype_str = type ? user_string_n(type, 512) : "<null>"
    } catch {}
    argtype_len = strlen(argtype_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 2346, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argtype_len, pid(), argname_len, argname_len, argname_str, argtype_len, argtype_len, argtype_str)
}
probe qemu.kvm.simpletrace.vfio_pci_hot_reset_has_dep_devices = qemu.kvm.vfio_pci_hot_reset_has_dep_devices ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2347, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_pci_hot_reset_dep_devices = qemu.kvm.vfio_pci_hot_reset_dep_devices ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2348, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), domain, bus, slot, function_, group_id)
}
probe qemu.kvm.simpletrace.vfio_pci_hot_reset_result = qemu.kvm.vfio_pci_hot_reset_result ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argresult_str = result ? user_string_n(result, 512) : "<null>"
    } catch {}
    argresult_len = strlen(argresult_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 2349, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argresult_len, pid(), argname_len, argname_len, argname_str, argresult_len, argresult_len, argresult_str)
}
probe qemu.kvm.simpletrace.vfio_populate_device_config = qemu.kvm.vfio_populate_device_config ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 2350, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, size, offset, flags)
}
probe qemu.kvm.simpletrace.vfio_populate_device_get_irq_info_failure = qemu.kvm.vfio_populate_device_get_irq_info_failure ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2351, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.vfio_realize = qemu.kvm.vfio_realize ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2352, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, group_id)
}
probe qemu.kvm.simpletrace.vfio_mdev = qemu.kvm.vfio_mdev ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2353, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, is_mdev)
}
probe qemu.kvm.simpletrace.vfio_add_ext_cap_dropped = qemu.kvm.vfio_add_ext_cap_dropped ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 2354, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8, pid(), argname_len, argname_len, argname_str, cap, offset)
}
probe qemu.kvm.simpletrace.vfio_pci_reset = qemu.kvm.vfio_pci_reset ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2355, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_pci_reset_flr = qemu.kvm.vfio_pci_reset_flr ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2356, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_pci_reset_pm = qemu.kvm.vfio_pci_reset_pm ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2357, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_pci_emulated_vendor_id = qemu.kvm.vfio_pci_emulated_vendor_id ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2358, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, val)
}
probe qemu.kvm.simpletrace.vfio_pci_emulated_device_id = qemu.kvm.vfio_pci_emulated_device_id ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2359, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, val)
}
probe qemu.kvm.simpletrace.vfio_pci_emulated_sub_vendor_id = qemu.kvm.vfio_pci_emulated_sub_vendor_id ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2360, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, val)
}
probe qemu.kvm.simpletrace.vfio_pci_emulated_sub_device_id = qemu.kvm.vfio_pci_emulated_sub_device_id ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2361, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, val)
}
probe qemu.kvm.simpletrace.vfio_quirk_rom_blacklisted = qemu.kvm.vfio_quirk_rom_blacklisted ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 2362, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8, pid(), argname_len, argname_len, argname_str, vid, did)
}
probe qemu.kvm.simpletrace.vfio_quirk_generic_window_address_write = qemu.kvm.vfio_quirk_generic_window_address_write ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argregion_name_str = region_name ? user_string_n(region_name, 512) : "<null>"
    } catch {}
    argregion_name_len = strlen(argregion_name_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%8b", 1, 2363, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argregion_name_len + 8, pid(), argname_len, argname_len, argname_str, argregion_name_len, argregion_name_len, argregion_name_str, data)
}
probe qemu.kvm.simpletrace.vfio_quirk_generic_window_data_read = qemu.kvm.vfio_quirk_generic_window_data_read ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argregion_name_str = region_name ? user_string_n(region_name, 512) : "<null>"
    } catch {}
    argregion_name_len = strlen(argregion_name_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%8b", 1, 2364, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argregion_name_len + 8, pid(), argname_len, argname_len, argname_str, argregion_name_len, argregion_name_len, argregion_name_str, data)
}
probe qemu.kvm.simpletrace.vfio_quirk_generic_window_data_write = qemu.kvm.vfio_quirk_generic_window_data_write ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argregion_name_str = region_name ? user_string_n(region_name, 512) : "<null>"
    } catch {}
    argregion_name_len = strlen(argregion_name_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%8b", 1, 2365, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argregion_name_len + 8, pid(), argname_len, argname_len, argname_str, argregion_name_len, argregion_name_len, argregion_name_str, data)
}
probe qemu.kvm.simpletrace.vfio_quirk_generic_mirror_read = qemu.kvm.vfio_quirk_generic_mirror_read ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argregion_name_str = region_name ? user_string_n(region_name, 512) : "<null>"
    } catch {}
    argregion_name_len = strlen(argregion_name_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%8b%8b", 1, 2366, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argregion_name_len + 8 + 8, pid(), argname_len, argname_len, argname_str, argregion_name_len, argregion_name_len, argregion_name_str, addr, data)
}
probe qemu.kvm.simpletrace.vfio_quirk_generic_mirror_write = qemu.kvm.vfio_quirk_generic_mirror_write ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argregion_name_str = region_name ? user_string_n(region_name, 512) : "<null>"
    } catch {}
    argregion_name_len = strlen(argregion_name_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%8b%8b", 1, 2367, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argregion_name_len + 8 + 8, pid(), argname_len, argname_len, argname_str, argregion_name_len, argregion_name_len, argregion_name_str, addr, data)
}
probe qemu.kvm.simpletrace.vfio_quirk_ati_3c3_read = qemu.kvm.vfio_quirk_ati_3c3_read ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2368, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, data)
}
probe qemu.kvm.simpletrace.vfio_quirk_ati_3c3_probe = qemu.kvm.vfio_quirk_ati_3c3_probe ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2369, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_quirk_ati_bar4_probe = qemu.kvm.vfio_quirk_ati_bar4_probe ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2370, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_quirk_ati_bar2_probe = qemu.kvm.vfio_quirk_ati_bar2_probe ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2371, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_quirk_nvidia_3d0_state = qemu.kvm.vfio_quirk_nvidia_3d0_state ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argstate_str = state ? user_string_n(state, 512) : "<null>"
    } catch {}
    argstate_len = strlen(argstate_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 2372, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argstate_len, pid(), argname_len, argname_len, argname_str, argstate_len, argstate_len, argstate_str)
}
probe qemu.kvm.simpletrace.vfio_quirk_nvidia_3d0_read = qemu.kvm.vfio_quirk_nvidia_3d0_read ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 2373, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, offset, size, val)
}
probe qemu.kvm.simpletrace.vfio_quirk_nvidia_3d0_write = qemu.kvm.vfio_quirk_nvidia_3d0_write ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 2374, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, offset, data, size)
}
probe qemu.kvm.simpletrace.vfio_quirk_nvidia_3d0_probe = qemu.kvm.vfio_quirk_nvidia_3d0_probe ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2375, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_quirk_nvidia_bar5_state = qemu.kvm.vfio_quirk_nvidia_bar5_state ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argstate_str = state ? user_string_n(state, 512) : "<null>"
    } catch {}
    argstate_len = strlen(argstate_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 2376, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argstate_len, pid(), argname_len, argname_len, argname_str, argstate_len, argstate_len, argstate_str)
}
probe qemu.kvm.simpletrace.vfio_quirk_nvidia_bar5_probe = qemu.kvm.vfio_quirk_nvidia_bar5_probe ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2377, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_quirk_nvidia_bar0_msi_ack = qemu.kvm.vfio_quirk_nvidia_bar0_msi_ack ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2378, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_quirk_nvidia_bar0_probe = qemu.kvm.vfio_quirk_nvidia_bar0_probe ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2379, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_quirk_rtl8168_fake_latch = qemu.kvm.vfio_quirk_rtl8168_fake_latch ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2380, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, val)
}
probe qemu.kvm.simpletrace.vfio_quirk_rtl8168_msix_write = qemu.kvm.vfio_quirk_rtl8168_msix_write ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 2381, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8, pid(), argname_len, argname_len, argname_str, offset, val)
}
probe qemu.kvm.simpletrace.vfio_quirk_rtl8168_msix_read = qemu.kvm.vfio_quirk_rtl8168_msix_read ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 2382, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8, pid(), argname_len, argname_len, argname_str, offset, val)
}
probe qemu.kvm.simpletrace.vfio_quirk_rtl8168_probe = qemu.kvm.vfio_quirk_rtl8168_probe ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2383, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_quirk_ati_bonaire_reset_skipped = qemu.kvm.vfio_quirk_ati_bonaire_reset_skipped ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2384, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_quirk_ati_bonaire_reset_no_smc = qemu.kvm.vfio_quirk_ati_bonaire_reset_no_smc ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2385, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_quirk_ati_bonaire_reset_timeout = qemu.kvm.vfio_quirk_ati_bonaire_reset_timeout ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2386, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_quirk_ati_bonaire_reset_done = qemu.kvm.vfio_quirk_ati_bonaire_reset_done ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2387, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_quirk_ati_bonaire_reset = qemu.kvm.vfio_quirk_ati_bonaire_reset ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2388, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_pci_igd_bar4_write = qemu.kvm.vfio_pci_igd_bar4_write ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 2389, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, index, data, base)
}
probe qemu.kvm.simpletrace.vfio_pci_igd_bdsm_enabled = qemu.kvm.vfio_pci_igd_bdsm_enabled ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2390, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, size)
}
probe qemu.kvm.simpletrace.vfio_pci_igd_opregion_enabled = qemu.kvm.vfio_pci_igd_opregion_enabled ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2391, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_pci_igd_host_bridge_enabled = qemu.kvm.vfio_pci_igd_host_bridge_enabled ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2392, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_pci_igd_lpc_bridge_enabled = qemu.kvm.vfio_pci_igd_lpc_bridge_enabled ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2393, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vfio_region_write = qemu.kvm.vfio_region_write ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b%8b", 1, 2394, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, index, addr, data, size)
}
probe qemu.kvm.simpletrace.vfio_region_read = qemu.kvm.vfio_region_read ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b%8b", 1, 2395, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, index, addr, size, data)
}
probe qemu.kvm.simpletrace.vfio_iommu_map_notify = qemu.kvm.vfio_iommu_map_notify ?
{
    try {
        argop_str = op ? user_string_n(op, 512) : "<null>"
    } catch {}
    argop_len = strlen(argop_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 2396, gettimeofday_ns(), 24 + 4 + argop_len + 8 + 8, pid(), argop_len, argop_len, argop_str, iova_start, iova_end)
}
probe qemu.kvm.simpletrace.vfio_listener_region_add_skip = qemu.kvm.vfio_listener_region_add_skip ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2397, gettimeofday_ns(), 24 + 8 + 8, pid(), start, end)
}
probe qemu.kvm.simpletrace.vfio_listener_region_add_iommu = qemu.kvm.vfio_listener_region_add_iommu ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2398, gettimeofday_ns(), 24 + 8 + 8, pid(), start, end)
}
probe qemu.kvm.simpletrace.vfio_listener_region_add_ram = qemu.kvm.vfio_listener_region_add_ram ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2399, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), iova_start, iova_end, vaddr)
}
probe qemu.kvm.simpletrace.vfio_listener_region_add_no_dma_map = qemu.kvm.vfio_listener_region_add_no_dma_map ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 2400, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, iova, size, page_size)
}
probe qemu.kvm.simpletrace.vfio_listener_region_del_skip = qemu.kvm.vfio_listener_region_del_skip ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2401, gettimeofday_ns(), 24 + 8 + 8, pid(), start, end)
}
probe qemu.kvm.simpletrace.vfio_listener_region_del = qemu.kvm.vfio_listener_region_del ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2402, gettimeofday_ns(), 24 + 8 + 8, pid(), start, end)
}
probe qemu.kvm.simpletrace.vfio_disconnect_container = qemu.kvm.vfio_disconnect_container ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2403, gettimeofday_ns(), 24 + 8, pid(), fd)
}
probe qemu.kvm.simpletrace.vfio_put_group = qemu.kvm.vfio_put_group ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2404, gettimeofday_ns(), 24 + 8, pid(), fd)
}
probe qemu.kvm.simpletrace.vfio_get_device = qemu.kvm.vfio_get_device ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 2405, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, flags, num_regions, num_irqs)
}
probe qemu.kvm.simpletrace.vfio_put_base_device = qemu.kvm.vfio_put_base_device ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2406, gettimeofday_ns(), 24 + 8, pid(), fd)
}
probe qemu.kvm.simpletrace.vfio_region_setup = qemu.kvm.vfio_region_setup ?
{
    try {
        argdev_str = dev ? user_string_n(dev, 512) : "<null>"
    } catch {}
    argdev_len = strlen(argdev_str)
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%4b%.*s%8b%8b%8b", 1, 2407, gettimeofday_ns(), 24 + 4 + argdev_len + 8 + 4 + argname_len + 8 + 8 + 8, pid(), argdev_len, argdev_len, argdev_str, index, argname_len, argname_len, argname_str, flags, offset, size)
}
probe qemu.kvm.simpletrace.vfio_region_mmap_fault = qemu.kvm.vfio_region_mmap_fault ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b%8b", 1, 2408, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, index, offset, size, fault)
}
probe qemu.kvm.simpletrace.vfio_region_mmap = qemu.kvm.vfio_region_mmap ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 2409, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8, pid(), argname_len, argname_len, argname_str, offset, end)
}
probe qemu.kvm.simpletrace.vfio_region_exit = qemu.kvm.vfio_region_exit ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2410, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, index)
}
probe qemu.kvm.simpletrace.vfio_region_finalize = qemu.kvm.vfio_region_finalize ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2411, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, index)
}
probe qemu.kvm.simpletrace.vfio_region_mmaps_set_enabled = qemu.kvm.vfio_region_mmaps_set_enabled ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2412, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, enabled)
}
probe qemu.kvm.simpletrace.vfio_region_sparse_mmap_header = qemu.kvm.vfio_region_sparse_mmap_header ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 2413, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8, pid(), argname_len, argname_len, argname_str, index, nr_areas)
}
probe qemu.kvm.simpletrace.vfio_region_sparse_mmap_entry = qemu.kvm.vfio_region_sparse_mmap_entry ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2414, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), i, start, end)
}
probe qemu.kvm.simpletrace.vfio_get_dev_region = qemu.kvm.vfio_get_dev_region ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 2415, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8 + 8, pid(), argname_len, argname_len, argname_str, index, type, subtype)
}
probe qemu.kvm.simpletrace.vfio_platform_base_device_init = qemu.kvm.vfio_platform_base_device_init ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2416, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, groupid)
}
probe qemu.kvm.simpletrace.vfio_platform_realize = qemu.kvm.vfio_platform_realize ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argcompat_str = compat ? user_string_n(compat, 512) : "<null>"
    } catch {}
    argcompat_len = strlen(argcompat_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 2417, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argcompat_len, pid(), argname_len, argname_len, argname_str, argcompat_len, argcompat_len, argcompat_str)
}
probe qemu.kvm.simpletrace.vfio_platform_eoi = qemu.kvm.vfio_platform_eoi ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2418, gettimeofday_ns(), 24 + 8 + 8, pid(), pin, fd)
}
probe qemu.kvm.simpletrace.vfio_platform_intp_mmap_enable = qemu.kvm.vfio_platform_intp_mmap_enable ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2419, gettimeofday_ns(), 24 + 8, pid(), pin)
}
probe qemu.kvm.simpletrace.vfio_platform_intp_interrupt = qemu.kvm.vfio_platform_intp_interrupt ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2420, gettimeofday_ns(), 24 + 8 + 8, pid(), pin, fd)
}
probe qemu.kvm.simpletrace.vfio_platform_intp_inject_pending_lockheld = qemu.kvm.vfio_platform_intp_inject_pending_lockheld ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2421, gettimeofday_ns(), 24 + 8 + 8, pid(), pin, fd)
}
probe qemu.kvm.simpletrace.vfio_platform_populate_interrupts = qemu.kvm.vfio_platform_populate_interrupts ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2422, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), pin, count, flags)
}
probe qemu.kvm.simpletrace.vfio_intp_interrupt_set_pending = qemu.kvm.vfio_intp_interrupt_set_pending ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2423, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.vfio_platform_start_level_irqfd_injection = qemu.kvm.vfio_platform_start_level_irqfd_injection ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2424, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), index, fd, resamplefd)
}
probe qemu.kvm.simpletrace.vfio_platform_start_edge_irqfd_injection = qemu.kvm.vfio_platform_start_edge_irqfd_injection ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2425, gettimeofday_ns(), 24 + 8 + 8, pid(), index, fd)
}
probe qemu.kvm.simpletrace.vfio_prereg_listener_region_add_skip = qemu.kvm.vfio_prereg_listener_region_add_skip ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2426, gettimeofday_ns(), 24 + 8 + 8, pid(), start, end)
}
probe qemu.kvm.simpletrace.vfio_prereg_listener_region_del_skip = qemu.kvm.vfio_prereg_listener_region_del_skip ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2427, gettimeofday_ns(), 24 + 8 + 8, pid(), start, end)
}
probe qemu.kvm.simpletrace.vfio_prereg_register = qemu.kvm.vfio_prereg_register ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2428, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), va, size, ret)
}
probe qemu.kvm.simpletrace.vfio_prereg_unregister = qemu.kvm.vfio_prereg_unregister ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2429, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), va, size, ret)
}
probe qemu.kvm.simpletrace.vfio_spapr_create_window = qemu.kvm.vfio_spapr_create_window ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2430, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), ps, ws, off)
}
probe qemu.kvm.simpletrace.vfio_spapr_remove_window = qemu.kvm.vfio_spapr_remove_window ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2431, gettimeofday_ns(), 24 + 8, pid(), off)
}
probe qemu.kvm.simpletrace.vfio_spapr_group_attach = qemu.kvm.vfio_spapr_group_attach ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2432, gettimeofday_ns(), 24 + 8 + 8, pid(), groupfd, tablefd)
}
probe qemu.kvm.simpletrace.mhp_acpi_invalid_slot_selected = qemu.kvm.mhp_acpi_invalid_slot_selected ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2433, gettimeofday_ns(), 24 + 8, pid(), slot)
}
probe qemu.kvm.simpletrace.mhp_acpi_ejecting_invalid_slot = qemu.kvm.mhp_acpi_ejecting_invalid_slot ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2434, gettimeofday_ns(), 24 + 8, pid(), slot)
}
probe qemu.kvm.simpletrace.mhp_acpi_read_addr_lo = qemu.kvm.mhp_acpi_read_addr_lo ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2435, gettimeofday_ns(), 24 + 8 + 8, pid(), slot, addr)
}
probe qemu.kvm.simpletrace.mhp_acpi_read_addr_hi = qemu.kvm.mhp_acpi_read_addr_hi ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2436, gettimeofday_ns(), 24 + 8 + 8, pid(), slot, addr)
}
probe qemu.kvm.simpletrace.mhp_acpi_read_size_lo = qemu.kvm.mhp_acpi_read_size_lo ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2437, gettimeofday_ns(), 24 + 8 + 8, pid(), slot, size)
}
probe qemu.kvm.simpletrace.mhp_acpi_read_size_hi = qemu.kvm.mhp_acpi_read_size_hi ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2438, gettimeofday_ns(), 24 + 8 + 8, pid(), slot, size)
}
probe qemu.kvm.simpletrace.mhp_acpi_read_pxm = qemu.kvm.mhp_acpi_read_pxm ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2439, gettimeofday_ns(), 24 + 8 + 8, pid(), slot, pxm)
}
probe qemu.kvm.simpletrace.mhp_acpi_read_flags = qemu.kvm.mhp_acpi_read_flags ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2440, gettimeofday_ns(), 24 + 8 + 8, pid(), slot, flags)
}
probe qemu.kvm.simpletrace.mhp_acpi_write_slot = qemu.kvm.mhp_acpi_write_slot ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2441, gettimeofday_ns(), 24 + 8, pid(), slot)
}
probe qemu.kvm.simpletrace.mhp_acpi_write_ost_ev = qemu.kvm.mhp_acpi_write_ost_ev ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2442, gettimeofday_ns(), 24 + 8 + 8, pid(), slot, ev)
}
probe qemu.kvm.simpletrace.mhp_acpi_write_ost_status = qemu.kvm.mhp_acpi_write_ost_status ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2443, gettimeofday_ns(), 24 + 8 + 8, pid(), slot, st)
}
probe qemu.kvm.simpletrace.mhp_acpi_clear_insert_evt = qemu.kvm.mhp_acpi_clear_insert_evt ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2444, gettimeofday_ns(), 24 + 8, pid(), slot)
}
probe qemu.kvm.simpletrace.mhp_acpi_clear_remove_evt = qemu.kvm.mhp_acpi_clear_remove_evt ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2445, gettimeofday_ns(), 24 + 8, pid(), slot)
}
probe qemu.kvm.simpletrace.mhp_acpi_pc_dimm_deleted = qemu.kvm.mhp_acpi_pc_dimm_deleted ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2446, gettimeofday_ns(), 24 + 8, pid(), slot)
}
probe qemu.kvm.simpletrace.mhp_acpi_pc_dimm_delete_failed = qemu.kvm.mhp_acpi_pc_dimm_delete_failed ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2447, gettimeofday_ns(), 24 + 8, pid(), slot)
}
probe qemu.kvm.simpletrace.cpuhp_acpi_invalid_idx_selected = qemu.kvm.cpuhp_acpi_invalid_idx_selected ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2448, gettimeofday_ns(), 24 + 8, pid(), idx)
}
probe qemu.kvm.simpletrace.cpuhp_acpi_read_flags = qemu.kvm.cpuhp_acpi_read_flags ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2449, gettimeofday_ns(), 24 + 8 + 8, pid(), idx, flags)
}
probe qemu.kvm.simpletrace.cpuhp_acpi_write_idx = qemu.kvm.cpuhp_acpi_write_idx ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2450, gettimeofday_ns(), 24 + 8, pid(), idx)
}
probe qemu.kvm.simpletrace.cpuhp_acpi_write_cmd = qemu.kvm.cpuhp_acpi_write_cmd ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2451, gettimeofday_ns(), 24 + 8 + 8, pid(), idx, cmd)
}
probe qemu.kvm.simpletrace.cpuhp_acpi_read_cmd_data = qemu.kvm.cpuhp_acpi_read_cmd_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2452, gettimeofday_ns(), 24 + 8 + 8, pid(), idx, data)
}
probe qemu.kvm.simpletrace.cpuhp_acpi_cpu_has_events = qemu.kvm.cpuhp_acpi_cpu_has_events ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2453, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), idx, ins, rm)
}
probe qemu.kvm.simpletrace.cpuhp_acpi_clear_inserting_evt = qemu.kvm.cpuhp_acpi_clear_inserting_evt ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2454, gettimeofday_ns(), 24 + 8, pid(), idx)
}
probe qemu.kvm.simpletrace.cpuhp_acpi_clear_remove_evt = qemu.kvm.cpuhp_acpi_clear_remove_evt ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2455, gettimeofday_ns(), 24 + 8, pid(), idx)
}
probe qemu.kvm.simpletrace.cpuhp_acpi_ejecting_invalid_cpu = qemu.kvm.cpuhp_acpi_ejecting_invalid_cpu ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2456, gettimeofday_ns(), 24 + 8, pid(), idx)
}
probe qemu.kvm.simpletrace.cpuhp_acpi_ejecting_cpu = qemu.kvm.cpuhp_acpi_ejecting_cpu ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2457, gettimeofday_ns(), 24 + 8, pid(), idx)
}
probe qemu.kvm.simpletrace.cpuhp_acpi_write_ost_ev = qemu.kvm.cpuhp_acpi_write_ost_ev ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2458, gettimeofday_ns(), 24 + 8 + 8, pid(), slot, ev)
}
probe qemu.kvm.simpletrace.cpuhp_acpi_write_ost_status = qemu.kvm.cpuhp_acpi_write_ost_status ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2459, gettimeofday_ns(), 24 + 8 + 8, pid(), slot, st)
}
probe qemu.kvm.simpletrace.tco_timer_reload = qemu.kvm.tco_timer_reload ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2460, gettimeofday_ns(), 24 + 8 + 8, pid(), ticks, msec)
}
probe qemu.kvm.simpletrace.tco_timer_expired = qemu.kvm.tco_timer_expired ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2461, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), timeouts_no, strap, no_reboot)
}
probe qemu.kvm.simpletrace.virt_acpi_setup = qemu.kvm.virt_acpi_setup ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2462, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.alpha_pci_iack_write = qemu.kvm.alpha_pci_iack_write ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2463, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.hppa_pci_iack_write = qemu.kvm.hppa_pci_iack_write ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2464, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.xen_default_ioreq_server = qemu.kvm.xen_default_ioreq_server ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2465, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.xen_ioreq_server_create = qemu.kvm.xen_ioreq_server_create ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2466, gettimeofday_ns(), 24 + 8, pid(), id)
}
probe qemu.kvm.simpletrace.xen_ioreq_server_destroy = qemu.kvm.xen_ioreq_server_destroy ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2467, gettimeofday_ns(), 24 + 8, pid(), id)
}
probe qemu.kvm.simpletrace.xen_ioreq_server_state = qemu.kvm.xen_ioreq_server_state ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2468, gettimeofday_ns(), 24 + 8 + 8, pid(), id, enable)
}
probe qemu.kvm.simpletrace.xen_map_mmio_range = qemu.kvm.xen_map_mmio_range ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2469, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), id, start_addr, end_addr)
}
probe qemu.kvm.simpletrace.xen_unmap_mmio_range = qemu.kvm.xen_unmap_mmio_range ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2470, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), id, start_addr, end_addr)
}
probe qemu.kvm.simpletrace.xen_map_portio_range = qemu.kvm.xen_map_portio_range ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2471, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), id, start_addr, end_addr)
}
probe qemu.kvm.simpletrace.xen_unmap_portio_range = qemu.kvm.xen_unmap_portio_range ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2472, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), id, start_addr, end_addr)
}
probe qemu.kvm.simpletrace.xen_map_pcidev = qemu.kvm.xen_map_pcidev ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2473, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), id, bus, dev, func)
}
probe qemu.kvm.simpletrace.xen_unmap_pcidev = qemu.kvm.xen_unmap_pcidev ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2474, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), id, bus, dev, func)
}
probe qemu.kvm.simpletrace.xen_domid_restrict = qemu.kvm.xen_domid_restrict ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2475, gettimeofday_ns(), 24 + 8, pid(), err)
}
probe qemu.kvm.simpletrace.ide_ioport_read = qemu.kvm.ide_ioport_read ?
{
    try {
        argreg_str = reg ? user_string_n(reg, 512) : "<null>"
    } catch {}
    argreg_len = strlen(argreg_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%8b%8b", 1, 2476, gettimeofday_ns(), 24 + 8 + 4 + argreg_len + 8 + 8 + 8, pid(), addr, argreg_len, argreg_len, argreg_str, val, bus, s)
}
probe qemu.kvm.simpletrace.ide_ioport_write = qemu.kvm.ide_ioport_write ?
{
    try {
        argreg_str = reg ? user_string_n(reg, 512) : "<null>"
    } catch {}
    argreg_len = strlen(argreg_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%8b%8b", 1, 2477, gettimeofday_ns(), 24 + 8 + 4 + argreg_len + 8 + 8 + 8, pid(), addr, argreg_len, argreg_len, argreg_str, val, bus, s)
}
probe qemu.kvm.simpletrace.ide_status_read = qemu.kvm.ide_status_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2478, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), addr, val, bus, s)
}
probe qemu.kvm.simpletrace.ide_cmd_write = qemu.kvm.ide_cmd_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2479, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, val, bus)
}
probe qemu.kvm.simpletrace.ide_data_readw = qemu.kvm.ide_data_readw ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2480, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), addr, val, bus, s)
}
probe qemu.kvm.simpletrace.ide_data_writew = qemu.kvm.ide_data_writew ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2481, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), addr, val, bus, s)
}
probe qemu.kvm.simpletrace.ide_data_readl = qemu.kvm.ide_data_readl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2482, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), addr, val, bus, s)
}
probe qemu.kvm.simpletrace.ide_data_writel = qemu.kvm.ide_data_writel ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2483, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), addr, val, bus, s)
}
probe qemu.kvm.simpletrace.ide_exec_cmd = qemu.kvm.ide_exec_cmd ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2484, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), bus, state, cmd)
}
probe qemu.kvm.simpletrace.ide_cancel_dma_sync_buffered = qemu.kvm.ide_cancel_dma_sync_buffered ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2485, gettimeofday_ns(), 24 + 8 + 8, pid(), fn, req)
}
probe qemu.kvm.simpletrace.ide_cancel_dma_sync_remaining = qemu.kvm.ide_cancel_dma_sync_remaining ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2486, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.ide_sector_read = qemu.kvm.ide_sector_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2487, gettimeofday_ns(), 24 + 8 + 8, pid(), sector_num, nsectors)
}
probe qemu.kvm.simpletrace.ide_sector_write = qemu.kvm.ide_sector_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2488, gettimeofday_ns(), 24 + 8 + 8, pid(), sector_num, nsectors)
}
probe qemu.kvm.simpletrace.ide_reset = qemu.kvm.ide_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2489, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.ide_bus_reset_aio = qemu.kvm.ide_bus_reset_aio ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2490, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.ide_dma_cb = qemu.kvm.ide_dma_cb ?
{
    try {
        argdma_str = dma ? user_string_n(dma, 512) : "<null>"
    } catch {}
    argdma_len = strlen(argdma_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%4b%.*s", 1, 2491, gettimeofday_ns(), 24 + 8 + 8 + 8 + 4 + argdma_len, pid(), s, sector_num, n, argdma_len, argdma_len, argdma_str)
}
probe qemu.kvm.simpletrace.bmdma_read_cmd646 = qemu.kvm.bmdma_read_cmd646 ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2492, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.bmdma_write_cmd646 = qemu.kvm.bmdma_write_cmd646 ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2493, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.bmdma_reset = qemu.kvm.bmdma_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2494, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.bmdma_cmd_writeb = qemu.kvm.bmdma_cmd_writeb ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2495, gettimeofday_ns(), 24 + 8, pid(), val)
}
probe qemu.kvm.simpletrace.bmdma_addr_read = qemu.kvm.bmdma_addr_read ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2496, gettimeofday_ns(), 24 + 8, pid(), data)
}
probe qemu.kvm.simpletrace.bmdma_addr_write = qemu.kvm.bmdma_addr_write ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2497, gettimeofday_ns(), 24 + 8, pid(), data)
}
probe qemu.kvm.simpletrace.bmdma_read = qemu.kvm.bmdma_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2498, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.bmdma_write = qemu.kvm.bmdma_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2499, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.sii3112_read = qemu.kvm.sii3112_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2500, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), size, addr, val)
}
probe qemu.kvm.simpletrace.sii3112_write = qemu.kvm.sii3112_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2501, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), size, addr, val)
}
probe qemu.kvm.simpletrace.sii3112_set_irq = qemu.kvm.sii3112_set_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2502, gettimeofday_ns(), 24 + 8 + 8, pid(), channel, level)
}
probe qemu.kvm.simpletrace.bmdma_read_via = qemu.kvm.bmdma_read_via ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2503, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.bmdma_write_via = qemu.kvm.bmdma_write_via ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2504, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, val)
}
probe qemu.kvm.simpletrace.cd_read_sector_sync = qemu.kvm.cd_read_sector_sync ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2505, gettimeofday_ns(), 24 + 8, pid(), lba)
}
probe qemu.kvm.simpletrace.cd_read_sector_cb = qemu.kvm.cd_read_sector_cb ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2506, gettimeofday_ns(), 24 + 8 + 8, pid(), lba, ret)
}
probe qemu.kvm.simpletrace.cd_read_sector = qemu.kvm.cd_read_sector ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2507, gettimeofday_ns(), 24 + 8, pid(), lba)
}
probe qemu.kvm.simpletrace.ide_atapi_cmd_error = qemu.kvm.ide_atapi_cmd_error ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2508, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, sense_key, asc)
}
probe qemu.kvm.simpletrace.ide_atapi_cmd_reply_end = qemu.kvm.ide_atapi_cmd_reply_end ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2509, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, tx_size, elem_tx_size, index)
}
probe qemu.kvm.simpletrace.ide_atapi_cmd_reply_end_eot = qemu.kvm.ide_atapi_cmd_reply_end_eot ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2510, gettimeofday_ns(), 24 + 8 + 8, pid(), s, status)
}
probe qemu.kvm.simpletrace.ide_atapi_cmd_reply_end_bcl = qemu.kvm.ide_atapi_cmd_reply_end_bcl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2511, gettimeofday_ns(), 24 + 8 + 8, pid(), s, bcl)
}
probe qemu.kvm.simpletrace.ide_atapi_cmd_reply_end_new = qemu.kvm.ide_atapi_cmd_reply_end_new ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2512, gettimeofday_ns(), 24 + 8 + 8, pid(), s, status)
}
probe qemu.kvm.simpletrace.ide_atapi_cmd_check_status = qemu.kvm.ide_atapi_cmd_check_status ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2513, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.ide_atapi_cmd_read = qemu.kvm.ide_atapi_cmd_read ?
{
    try {
        argmethod_str = method ? user_string_n(method, 512) : "<null>"
    } catch {}
    argmethod_len = strlen(argmethod_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%8b", 1, 2514, gettimeofday_ns(), 24 + 8 + 4 + argmethod_len + 8 + 8, pid(), s, argmethod_len, argmethod_len, argmethod_str, lba, nb_sectors)
}
probe qemu.kvm.simpletrace.ide_atapi_cmd = qemu.kvm.ide_atapi_cmd ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2515, gettimeofday_ns(), 24 + 8 + 8, pid(), s, cmd)
}
probe qemu.kvm.simpletrace.ide_atapi_cmd_read_dma_cb_aio = qemu.kvm.ide_atapi_cmd_read_dma_cb_aio ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2516, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, lba, n)
}
probe qemu.kvm.simpletrace.ide_atapi_cmd_packet = qemu.kvm.ide_atapi_cmd_packet ?
{
    try {
        argpacket_str = packet ? user_string_n(packet, 512) : "<null>"
    } catch {}
    argpacket_len = strlen(argpacket_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 2517, gettimeofday_ns(), 24 + 8 + 8 + 4 + argpacket_len, pid(), s, limit_, argpacket_len, argpacket_len, argpacket_str)
}
probe qemu.kvm.simpletrace.ahci_port_read = qemu.kvm.ahci_port_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2518, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, port, offset, ret)
}
probe qemu.kvm.simpletrace.ahci_irq_raise = qemu.kvm.ahci_irq_raise ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2519, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.ahci_irq_lower = qemu.kvm.ahci_irq_lower ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2520, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.ahci_check_irq = qemu.kvm.ahci_check_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2521, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, old, new)
}
probe qemu.kvm.simpletrace.ahci_trigger_irq = qemu.kvm.ahci_trigger_irq ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s%8b%8b%8b%8b", 1, 2522, gettimeofday_ns(), 24 + 8 + 8 + 4 + argname_len + 8 + 8 + 8 + 8, pid(), s, port, argname_len, argname_len, argname_str, val, old, new, effective)
}
probe qemu.kvm.simpletrace.ahci_port_write = qemu.kvm.ahci_port_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2523, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, port, offset, val)
}
probe qemu.kvm.simpletrace.ahci_mem_read_32 = qemu.kvm.ahci_mem_read_32 ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2524, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, addr, val)
}
probe qemu.kvm.simpletrace.ahci_mem_read = qemu.kvm.ahci_mem_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2525, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, size, addr, val)
}
probe qemu.kvm.simpletrace.ahci_mem_write = qemu.kvm.ahci_mem_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2526, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, size, addr, val)
}
probe qemu.kvm.simpletrace.ahci_mem_write_unknown = qemu.kvm.ahci_mem_write_unknown ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2527, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, size, addr, val)
}
probe qemu.kvm.simpletrace.ahci_set_signature = qemu.kvm.ahci_set_signature ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b", 1, 2528, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), s, port, nsector, sector, lcyl, hcyl, sig)
}
probe qemu.kvm.simpletrace.ahci_reset_port = qemu.kvm.ahci_reset_port ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2529, gettimeofday_ns(), 24 + 8 + 8, pid(), s, port)
}
probe qemu.kvm.simpletrace.ahci_unmap_fis_address_null = qemu.kvm.ahci_unmap_fis_address_null ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2530, gettimeofday_ns(), 24 + 8 + 8, pid(), s, port)
}
probe qemu.kvm.simpletrace.ahci_unmap_clb_address_null = qemu.kvm.ahci_unmap_clb_address_null ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2531, gettimeofday_ns(), 24 + 8 + 8, pid(), s, port)
}
probe qemu.kvm.simpletrace.ahci_populate_sglist = qemu.kvm.ahci_populate_sglist ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2532, gettimeofday_ns(), 24 + 8 + 8, pid(), s, port)
}
probe qemu.kvm.simpletrace.ahci_populate_sglist_no_prdtl = qemu.kvm.ahci_populate_sglist_no_prdtl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2533, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, port, opts)
}
probe qemu.kvm.simpletrace.ahci_populate_sglist_no_map = qemu.kvm.ahci_populate_sglist_no_map ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2534, gettimeofday_ns(), 24 + 8 + 8, pid(), s, port)
}
probe qemu.kvm.simpletrace.ahci_populate_sglist_short_map = qemu.kvm.ahci_populate_sglist_short_map ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2535, gettimeofday_ns(), 24 + 8 + 8, pid(), s, port)
}
probe qemu.kvm.simpletrace.ahci_populate_sglist_bad_offset = qemu.kvm.ahci_populate_sglist_bad_offset ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2536, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, port, off_idx, off_pos)
}
probe qemu.kvm.simpletrace.ncq_finish = qemu.kvm.ncq_finish ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2537, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, port, tag)
}
probe qemu.kvm.simpletrace.execute_ncq_command_read = qemu.kvm.execute_ncq_command_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2538, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, port, tag, count, lba)
}
probe qemu.kvm.simpletrace.execute_ncq_command_write = qemu.kvm.execute_ncq_command_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2539, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, port, tag, count, lba)
}
probe qemu.kvm.simpletrace.execute_ncq_command_unsup = qemu.kvm.execute_ncq_command_unsup ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2540, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, port, tag, cmd)
}
probe qemu.kvm.simpletrace.process_ncq_command_mismatch = qemu.kvm.process_ncq_command_mismatch ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2541, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, port, tag, slot)
}
probe qemu.kvm.simpletrace.process_ncq_command_aux = qemu.kvm.process_ncq_command_aux ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2542, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, port, tag)
}
probe qemu.kvm.simpletrace.process_ncq_command_prioicc = qemu.kvm.process_ncq_command_prioicc ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2543, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, port, tag)
}
probe qemu.kvm.simpletrace.process_ncq_command_fua = qemu.kvm.process_ncq_command_fua ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2544, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, port, tag)
}
probe qemu.kvm.simpletrace.process_ncq_command_rarc = qemu.kvm.process_ncq_command_rarc ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2545, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, port, tag)
}
probe qemu.kvm.simpletrace.process_ncq_command_large = qemu.kvm.process_ncq_command_large ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2546, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, port, tag, prdtl, size)
}
probe qemu.kvm.simpletrace.process_ncq_command = qemu.kvm.process_ncq_command ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2547, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), s, port, tag, cmd, lba, end)
}
probe qemu.kvm.simpletrace.handle_reg_h2d_fis_pmp = qemu.kvm.handle_reg_h2d_fis_pmp ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2548, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, port, b0, b1, b2)
}
probe qemu.kvm.simpletrace.handle_reg_h2d_fis_res = qemu.kvm.handle_reg_h2d_fis_res ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2549, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, port, b0, b1, b2)
}
probe qemu.kvm.simpletrace.handle_cmd_busy = qemu.kvm.handle_cmd_busy ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2550, gettimeofday_ns(), 24 + 8 + 8, pid(), s, port)
}
probe qemu.kvm.simpletrace.handle_cmd_nolist = qemu.kvm.handle_cmd_nolist ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2551, gettimeofday_ns(), 24 + 8 + 8, pid(), s, port)
}
probe qemu.kvm.simpletrace.handle_cmd_badport = qemu.kvm.handle_cmd_badport ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2552, gettimeofday_ns(), 24 + 8 + 8, pid(), s, port)
}
probe qemu.kvm.simpletrace.handle_cmd_badfis = qemu.kvm.handle_cmd_badfis ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2553, gettimeofday_ns(), 24 + 8 + 8, pid(), s, port)
}
probe qemu.kvm.simpletrace.handle_cmd_badmap = qemu.kvm.handle_cmd_badmap ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2554, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, port, len)
}
probe qemu.kvm.simpletrace.handle_cmd_unhandled_fis = qemu.kvm.handle_cmd_unhandled_fis ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2555, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, port, b0, b1, b2)
}
probe qemu.kvm.simpletrace.ahci_start_transfer = qemu.kvm.ahci_start_transfer ?
{
    try {
        argrw_str = rw ? user_string_n(rw, 512) : "<null>"
    } catch {}
    argrw_len = strlen(argrw_str)
    try {
        argtgt_str = tgt ? user_string_n(tgt, 512) : "<null>"
    } catch {}
    argtgt_len = strlen(argtgt_str)
    try {
        argsgl_str = sgl ? user_string_n(sgl, 512) : "<null>"
    } catch {}
    argsgl_len = strlen(argsgl_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s%8b%4b%.*s%4b%.*s", 1, 2556, gettimeofday_ns(), 24 + 8 + 8 + 4 + argrw_len + 8 + 4 + argtgt_len + 4 + argsgl_len, pid(), s, port, argrw_len, argrw_len, argrw_str, size, argtgt_len, argtgt_len, argtgt_str, argsgl_len, argsgl_len, argsgl_str)
}
probe qemu.kvm.simpletrace.ahci_start_dma = qemu.kvm.ahci_start_dma ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2557, gettimeofday_ns(), 24 + 8 + 8, pid(), s, port)
}
probe qemu.kvm.simpletrace.ahci_dma_prepare_buf = qemu.kvm.ahci_dma_prepare_buf ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2558, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), s, port, io_buffer_size, limit_)
}
probe qemu.kvm.simpletrace.ahci_dma_prepare_buf_fail = qemu.kvm.ahci_dma_prepare_buf_fail ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2559, gettimeofday_ns(), 24 + 8 + 8, pid(), s, port)
}
probe qemu.kvm.simpletrace.ahci_dma_rw_buf = qemu.kvm.ahci_dma_rw_buf ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2560, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), s, port, l)
}
probe qemu.kvm.simpletrace.ahci_cmd_done = qemu.kvm.ahci_cmd_done ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2561, gettimeofday_ns(), 24 + 8 + 8, pid(), s, port)
}
probe qemu.kvm.simpletrace.ahci_reset = qemu.kvm.ahci_reset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2562, gettimeofday_ns(), 24 + 8, pid(), s)
}
probe qemu.kvm.simpletrace.allwinner_ahci_mem_read = qemu.kvm.allwinner_ahci_mem_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2563, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, a, addr, val, size)
}
probe qemu.kvm.simpletrace.allwinner_ahci_mem_write = qemu.kvm.allwinner_ahci_mem_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2564, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), s, a, addr, val, size)
}
probe qemu.kvm.simpletrace.handle_reg_h2d_fis_dump = qemu.kvm.handle_reg_h2d_fis_dump ?
{
    try {
        argfis_str = fis ? user_string_n(fis, 512) : "<null>"
    } catch {}
    argfis_len = strlen(argfis_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 2565, gettimeofday_ns(), 24 + 8 + 8 + 4 + argfis_len, pid(), s, port, argfis_len, argfis_len, argfis_str)
}
probe qemu.kvm.simpletrace.handle_cmd_fis_dump = qemu.kvm.handle_cmd_fis_dump ?
{
    try {
        argfis_str = fis ? user_string_n(fis, 512) : "<null>"
    } catch {}
    argfis_len = strlen(argfis_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 2566, gettimeofday_ns(), 24 + 8 + 8 + 4 + argfis_len, pid(), s, port, argfis_len, argfis_len, argfis_str)
}
probe qemu.kvm.simpletrace.tpm_crb_mmio_read = qemu.kvm.tpm_crb_mmio_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2567, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, size, val)
}
probe qemu.kvm.simpletrace.tpm_crb_mmio_write = qemu.kvm.tpm_crb_mmio_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2568, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), addr, size, val)
}
probe qemu.kvm.simpletrace.tpm_passthrough_handle_request = qemu.kvm.tpm_passthrough_handle_request ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2569, gettimeofday_ns(), 24 + 8, pid(), cmd)
}
probe qemu.kvm.simpletrace.tpm_passthrough_reset = qemu.kvm.tpm_passthrough_reset ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2570, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.tpm_util_get_buffer_size_hdr_len = qemu.kvm.tpm_util_get_buffer_size_hdr_len ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2571, gettimeofday_ns(), 24 + 8 + 8, pid(), len, expected)
}
probe qemu.kvm.simpletrace.tpm_util_get_buffer_size_len = qemu.kvm.tpm_util_get_buffer_size_len ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2572, gettimeofday_ns(), 24 + 8 + 8, pid(), len, expected)
}
probe qemu.kvm.simpletrace.tpm_util_get_buffer_size_hdr_len2 = qemu.kvm.tpm_util_get_buffer_size_hdr_len2 ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2573, gettimeofday_ns(), 24 + 8 + 8, pid(), len, expected)
}
probe qemu.kvm.simpletrace.tpm_util_get_buffer_size_len2 = qemu.kvm.tpm_util_get_buffer_size_len2 ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2574, gettimeofday_ns(), 24 + 8 + 8, pid(), len, expected)
}
probe qemu.kvm.simpletrace.tpm_util_get_buffer_size = qemu.kvm.tpm_util_get_buffer_size ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2575, gettimeofday_ns(), 24 + 8, pid(), len)
}
probe qemu.kvm.simpletrace.tpm_emulator_set_locality = qemu.kvm.tpm_emulator_set_locality ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2576, gettimeofday_ns(), 24 + 8, pid(), locty)
}
probe qemu.kvm.simpletrace.tpm_emulator_handle_request = qemu.kvm.tpm_emulator_handle_request ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2577, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.tpm_emulator_probe_caps = qemu.kvm.tpm_emulator_probe_caps ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2578, gettimeofday_ns(), 24 + 8, pid(), caps)
}
probe qemu.kvm.simpletrace.tpm_emulator_set_buffer_size = qemu.kvm.tpm_emulator_set_buffer_size ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2579, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), buffersize, minsize, maxsize)
}
probe qemu.kvm.simpletrace.tpm_emulator_startup_tpm = qemu.kvm.tpm_emulator_startup_tpm ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2580, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.tpm_emulator_get_tpm_established_flag = qemu.kvm.tpm_emulator_get_tpm_established_flag ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2581, gettimeofday_ns(), 24 + 8, pid(), flag)
}
probe qemu.kvm.simpletrace.tpm_emulator_cancel_cmd_not_supt = qemu.kvm.tpm_emulator_cancel_cmd_not_supt ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2582, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.tpm_emulator_handle_device_opts_tpm12 = qemu.kvm.tpm_emulator_handle_device_opts_tpm12 ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2583, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.tpm_emulator_handle_device_opts_tpm2 = qemu.kvm.tpm_emulator_handle_device_opts_tpm2 ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2584, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.tpm_emulator_handle_device_opts_unspec = qemu.kvm.tpm_emulator_handle_device_opts_unspec ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2585, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.tpm_emulator_handle_device_opts_startup_error = qemu.kvm.tpm_emulator_handle_device_opts_startup_error ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2586, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.tpm_emulator_inst_init = qemu.kvm.tpm_emulator_inst_init ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2587, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.tpm_tis_raise_irq = qemu.kvm.tpm_tis_raise_irq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2588, gettimeofday_ns(), 24 + 8, pid(), irqmask)
}
probe qemu.kvm.simpletrace.tpm_tis_new_active_locality = qemu.kvm.tpm_tis_new_active_locality ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2589, gettimeofday_ns(), 24 + 8, pid(), locty)
}
probe qemu.kvm.simpletrace.tpm_tis_abort = qemu.kvm.tpm_tis_abort ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2590, gettimeofday_ns(), 24 + 8, pid(), locty)
}
probe qemu.kvm.simpletrace.tpm_tis_data_read = qemu.kvm.tpm_tis_data_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2591, gettimeofday_ns(), 24 + 8 + 8, pid(), value, off)
}
probe qemu.kvm.simpletrace.tpm_tis_mmio_read = qemu.kvm.tpm_tis_mmio_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2592, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), size, addr, val)
}
probe qemu.kvm.simpletrace.tpm_tis_mmio_write = qemu.kvm.tpm_tis_mmio_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2593, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), size, addr, val)
}
probe qemu.kvm.simpletrace.tpm_tis_mmio_write_locty4 = qemu.kvm.tpm_tis_mmio_write_locty4 ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2594, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.tpm_tis_mmio_write_release_locty = qemu.kvm.tpm_tis_mmio_write_release_locty ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2595, gettimeofday_ns(), 24 + 8, pid(), locty)
}
probe qemu.kvm.simpletrace.tpm_tis_mmio_write_locty_req_use = qemu.kvm.tpm_tis_mmio_write_locty_req_use ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2596, gettimeofday_ns(), 24 + 8, pid(), locty)
}
probe qemu.kvm.simpletrace.tpm_tis_mmio_write_next_locty = qemu.kvm.tpm_tis_mmio_write_next_locty ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2597, gettimeofday_ns(), 24 + 8, pid(), locty)
}
probe qemu.kvm.simpletrace.tpm_tis_mmio_write_locty_seized = qemu.kvm.tpm_tis_mmio_write_locty_seized ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2598, gettimeofday_ns(), 24 + 8 + 8, pid(), locty, active)
}
probe qemu.kvm.simpletrace.tpm_tis_mmio_write_init_abort = qemu.kvm.tpm_tis_mmio_write_init_abort ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2599, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.tpm_tis_mmio_write_lowering_irq = qemu.kvm.tpm_tis_mmio_write_lowering_irq ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2600, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.tpm_tis_mmio_write_data2send = qemu.kvm.tpm_tis_mmio_write_data2send ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2601, gettimeofday_ns(), 24 + 8 + 8, pid(), value, size)
}
probe qemu.kvm.simpletrace.console_gfx_new = qemu.kvm.console_gfx_new ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2602, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.console_gfx_reuse = qemu.kvm.console_gfx_reuse ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2603, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.console_gfx_close = qemu.kvm.console_gfx_close ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2604, gettimeofday_ns(), 24 + 8, pid(), index)
}
probe qemu.kvm.simpletrace.console_putchar_csi = qemu.kvm.console_putchar_csi ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2605, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), esc_param0, esc_param1, ch, nb_esc_params)
}
probe qemu.kvm.simpletrace.console_putchar_unhandled = qemu.kvm.console_putchar_unhandled ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2606, gettimeofday_ns(), 24 + 8, pid(), ch)
}
probe qemu.kvm.simpletrace.console_txt_new = qemu.kvm.console_txt_new ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2607, gettimeofday_ns(), 24 + 8 + 8, pid(), w, h)
}
probe qemu.kvm.simpletrace.console_select = qemu.kvm.console_select ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2608, gettimeofday_ns(), 24 + 8, pid(), nr)
}
probe qemu.kvm.simpletrace.console_refresh = qemu.kvm.console_refresh ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2609, gettimeofday_ns(), 24 + 8, pid(), interval)
}
probe qemu.kvm.simpletrace.displaysurface_create = qemu.kvm.displaysurface_create ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2610, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), display_surface, w, h)
}
probe qemu.kvm.simpletrace.displaysurface_create_from = qemu.kvm.displaysurface_create_from ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2611, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), display_surface, w, h, format)
}
probe qemu.kvm.simpletrace.displaysurface_create_pixman = qemu.kvm.displaysurface_create_pixman ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2612, gettimeofday_ns(), 24 + 8, pid(), display_surface)
}
probe qemu.kvm.simpletrace.displaysurface_free = qemu.kvm.displaysurface_free ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2613, gettimeofday_ns(), 24 + 8, pid(), display_surface)
}
probe qemu.kvm.simpletrace.displaychangelistener_register = qemu.kvm.displaychangelistener_register ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 2614, gettimeofday_ns(), 24 + 8 + 4 + argname_len, pid(), dcl, argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.displaychangelistener_unregister = qemu.kvm.displaychangelistener_unregister ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 2615, gettimeofday_ns(), 24 + 8 + 4 + argname_len, pid(), dcl, argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.ppm_save = qemu.kvm.ppm_save ?
{
    try {
        argfilename_str = filename ? user_string_n(filename, 512) : "<null>"
    } catch {}
    argfilename_len = strlen(argfilename_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2616, gettimeofday_ns(), 24 + 4 + argfilename_len + 8, pid(), argfilename_len, argfilename_len, argfilename_str, display_surface)
}
probe qemu.kvm.simpletrace.gd_switch = qemu.kvm.gd_switch ?
{
    try {
        argtab_str = tab ? user_string_n(tab, 512) : "<null>"
    } catch {}
    argtab_len = strlen(argtab_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 2617, gettimeofday_ns(), 24 + 4 + argtab_len + 8 + 8, pid(), argtab_len, argtab_len, argtab_str, width, height)
}
probe qemu.kvm.simpletrace.gd_update = qemu.kvm.gd_update ?
{
    try {
        argtab_str = tab ? user_string_n(tab, 512) : "<null>"
    } catch {}
    argtab_len = strlen(argtab_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b%8b", 1, 2618, gettimeofday_ns(), 24 + 4 + argtab_len + 8 + 8 + 8 + 8, pid(), argtab_len, argtab_len, argtab_str, x, y, w, h)
}
probe qemu.kvm.simpletrace.gd_key_event = qemu.kvm.gd_key_event ?
{
    try {
        argtab_str = tab ? user_string_n(tab, 512) : "<null>"
    } catch {}
    argtab_len = strlen(argtab_str)
    try {
        argaction_str = action ? user_string_n(action, 512) : "<null>"
    } catch {}
    argaction_len = strlen(argaction_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%4b%.*s", 1, 2619, gettimeofday_ns(), 24 + 4 + argtab_len + 8 + 8 + 4 + argaction_len, pid(), argtab_len, argtab_len, argtab_str, gdk_keycode, qkeycode, argaction_len, argaction_len, argaction_str)
}
probe qemu.kvm.simpletrace.gd_grab = qemu.kvm.gd_grab ?
{
    try {
        argtab_str = tab ? user_string_n(tab, 512) : "<null>"
    } catch {}
    argtab_len = strlen(argtab_str)
    try {
        argdevice_str = device ? user_string_n(device, 512) : "<null>"
    } catch {}
    argdevice_len = strlen(argdevice_str)
    try {
        argreason_str = reason ? user_string_n(reason, 512) : "<null>"
    } catch {}
    argreason_len = strlen(argreason_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%4b%.*s", 1, 2620, gettimeofday_ns(), 24 + 4 + argtab_len + 4 + argdevice_len + 4 + argreason_len, pid(), argtab_len, argtab_len, argtab_str, argdevice_len, argdevice_len, argdevice_str, argreason_len, argreason_len, argreason_str)
}
probe qemu.kvm.simpletrace.gd_ungrab = qemu.kvm.gd_ungrab ?
{
    try {
        argtab_str = tab ? user_string_n(tab, 512) : "<null>"
    } catch {}
    argtab_len = strlen(argtab_str)
    try {
        argdevice_str = device ? user_string_n(device, 512) : "<null>"
    } catch {}
    argdevice_len = strlen(argdevice_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 2621, gettimeofday_ns(), 24 + 4 + argtab_len + 4 + argdevice_len, pid(), argtab_len, argtab_len, argtab_str, argdevice_len, argdevice_len, argdevice_str)
}
probe qemu.kvm.simpletrace.gd_keymap_windowing = qemu.kvm.gd_keymap_windowing ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2622, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vnc_key_guest_leds = qemu.kvm.vnc_key_guest_leds ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2623, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), caps, num, scroll)
}
probe qemu.kvm.simpletrace.vnc_key_map_init = qemu.kvm.vnc_key_map_init ?
{
    try {
        arglayout_str = layout ? user_string_n(layout, 512) : "<null>"
    } catch {}
    arglayout_len = strlen(arglayout_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2624, gettimeofday_ns(), 24 + 4 + arglayout_len, pid(), arglayout_len, arglayout_len, arglayout_str)
}
probe qemu.kvm.simpletrace.vnc_key_event_ext = qemu.kvm.vnc_key_event_ext ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%4b%.*s", 1, 2625, gettimeofday_ns(), 24 + 8 + 8 + 8 + 4 + argname_len, pid(), down, sym, keycode, argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vnc_key_event_map = qemu.kvm.vnc_key_event_map ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%4b%.*s", 1, 2626, gettimeofday_ns(), 24 + 8 + 8 + 8 + 4 + argname_len, pid(), down, sym, keycode, argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vnc_key_sync_numlock = qemu.kvm.vnc_key_sync_numlock ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2627, gettimeofday_ns(), 24 + 8, pid(), on)
}
probe qemu.kvm.simpletrace.vnc_key_sync_capslock = qemu.kvm.vnc_key_sync_capslock ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2628, gettimeofday_ns(), 24 + 8, pid(), on)
}
probe qemu.kvm.simpletrace.vnc_client_eof = qemu.kvm.vnc_client_eof ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2629, gettimeofday_ns(), 24 + 8 + 8, pid(), state, ioc)
}
probe qemu.kvm.simpletrace.vnc_client_io_error = qemu.kvm.vnc_client_io_error ?
{
    try {
        argmsg_str = msg ? user_string_n(msg, 512) : "<null>"
    } catch {}
    argmsg_len = strlen(argmsg_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 2630, gettimeofday_ns(), 24 + 8 + 8 + 4 + argmsg_len, pid(), state, ioc, argmsg_len, argmsg_len, argmsg_str)
}
probe qemu.kvm.simpletrace.vnc_client_connect = qemu.kvm.vnc_client_connect ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2631, gettimeofday_ns(), 24 + 8 + 8, pid(), state, ioc)
}
probe qemu.kvm.simpletrace.vnc_client_disconnect_start = qemu.kvm.vnc_client_disconnect_start ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2632, gettimeofday_ns(), 24 + 8 + 8, pid(), state, ioc)
}
probe qemu.kvm.simpletrace.vnc_client_disconnect_finish = qemu.kvm.vnc_client_disconnect_finish ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2633, gettimeofday_ns(), 24 + 8 + 8, pid(), state, ioc)
}
probe qemu.kvm.simpletrace.vnc_client_io_wrap = qemu.kvm.vnc_client_io_wrap ?
{
    try {
        argtype_str = type ? user_string_n(type, 512) : "<null>"
    } catch {}
    argtype_len = strlen(argtype_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 2634, gettimeofday_ns(), 24 + 8 + 8 + 4 + argtype_len, pid(), state, ioc, argtype_len, argtype_len, argtype_str)
}
probe qemu.kvm.simpletrace.vnc_client_throttle_threshold = qemu.kvm.vnc_client_throttle_threshold ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b%8b%8b", 1, 2635, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8 + 8 + 8, pid(), state, ioc, oldoffset, offset, client_width, client_height, bytes_per_pixel, audio_cap)
}
probe qemu.kvm.simpletrace.vnc_client_throttle_incremental = qemu.kvm.vnc_client_throttle_incremental ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2636, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), state, ioc, job_update, offset)
}
probe qemu.kvm.simpletrace.vnc_client_throttle_forced = qemu.kvm.vnc_client_throttle_forced ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2637, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), state, ioc, job_update, offset)
}
probe qemu.kvm.simpletrace.vnc_client_throttle_audio = qemu.kvm.vnc_client_throttle_audio ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2638, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), state, ioc, offset)
}
probe qemu.kvm.simpletrace.vnc_client_unthrottle_forced = qemu.kvm.vnc_client_unthrottle_forced ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2639, gettimeofday_ns(), 24 + 8 + 8, pid(), state, ioc)
}
probe qemu.kvm.simpletrace.vnc_client_unthrottle_incremental = qemu.kvm.vnc_client_unthrottle_incremental ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2640, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), state, ioc, offset)
}
probe qemu.kvm.simpletrace.vnc_client_output_limit = qemu.kvm.vnc_client_output_limit ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2641, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), state, ioc, offset, threshold)
}
probe qemu.kvm.simpletrace.vnc_auth_init = qemu.kvm.vnc_auth_init ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2642, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), display, websock, auth, subauth)
}
probe qemu.kvm.simpletrace.vnc_auth_start = qemu.kvm.vnc_auth_start ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2643, gettimeofday_ns(), 24 + 8 + 8, pid(), state, method)
}
probe qemu.kvm.simpletrace.vnc_auth_pass = qemu.kvm.vnc_auth_pass ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2644, gettimeofday_ns(), 24 + 8 + 8, pid(), state, method)
}
probe qemu.kvm.simpletrace.vnc_auth_fail = qemu.kvm.vnc_auth_fail ?
{
    try {
        argmessage_str = message ? user_string_n(message, 512) : "<null>"
    } catch {}
    argmessage_len = strlen(argmessage_str)
    try {
        argreason_str = reason ? user_string_n(reason, 512) : "<null>"
    } catch {}
    argreason_len = strlen(argreason_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s%4b%.*s", 1, 2645, gettimeofday_ns(), 24 + 8 + 8 + 4 + argmessage_len + 4 + argreason_len, pid(), state, method, argmessage_len, argmessage_len, argmessage_str, argreason_len, argreason_len, argreason_str)
}
probe qemu.kvm.simpletrace.vnc_auth_reject = qemu.kvm.vnc_auth_reject ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2646, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), state, expect, got)
}
probe qemu.kvm.simpletrace.vnc_auth_vencrypt_version = qemu.kvm.vnc_auth_vencrypt_version ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2647, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), state, major, minor)
}
probe qemu.kvm.simpletrace.vnc_auth_vencrypt_subauth = qemu.kvm.vnc_auth_vencrypt_subauth ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2648, gettimeofday_ns(), 24 + 8 + 8, pid(), state, auth)
}
probe qemu.kvm.simpletrace.vnc_auth_sasl_mech_list = qemu.kvm.vnc_auth_sasl_mech_list ?
{
    try {
        argmechs_str = mechs ? user_string_n(mechs, 512) : "<null>"
    } catch {}
    argmechs_len = strlen(argmechs_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 2649, gettimeofday_ns(), 24 + 8 + 4 + argmechs_len, pid(), state, argmechs_len, argmechs_len, argmechs_str)
}
probe qemu.kvm.simpletrace.vnc_auth_sasl_mech_choose = qemu.kvm.vnc_auth_sasl_mech_choose ?
{
    try {
        argmech_str = mech ? user_string_n(mech, 512) : "<null>"
    } catch {}
    argmech_len = strlen(argmech_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 2650, gettimeofday_ns(), 24 + 8 + 4 + argmech_len, pid(), state, argmech_len, argmech_len, argmech_str)
}
probe qemu.kvm.simpletrace.vnc_auth_sasl_start = qemu.kvm.vnc_auth_sasl_start ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2651, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), state, clientdata, clientlen, serverdata, severlen, ret)
}
probe qemu.kvm.simpletrace.vnc_auth_sasl_step = qemu.kvm.vnc_auth_sasl_step ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2652, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), state, clientdata, clientlen, serverdata, severlen, ret)
}
probe qemu.kvm.simpletrace.vnc_auth_sasl_ssf = qemu.kvm.vnc_auth_sasl_ssf ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2653, gettimeofday_ns(), 24 + 8 + 8, pid(), state, ssf)
}
probe qemu.kvm.simpletrace.vnc_auth_sasl_username = qemu.kvm.vnc_auth_sasl_username ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 2654, gettimeofday_ns(), 24 + 8 + 4 + argname_len, pid(), state, argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.vnc_auth_sasl_acl = qemu.kvm.vnc_auth_sasl_acl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2655, gettimeofday_ns(), 24 + 8 + 8, pid(), state, allow)
}
probe qemu.kvm.simpletrace.input_event_key_number = qemu.kvm.input_event_key_number ?
{
    try {
        argqcode_str = qcode ? user_string_n(qcode, 512) : "<null>"
    } catch {}
    argqcode_len = strlen(argqcode_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s%8b", 1, 2656, gettimeofday_ns(), 24 + 8 + 8 + 4 + argqcode_len + 8, pid(), conidx, number, argqcode_len, argqcode_len, argqcode_str, down)
}
probe qemu.kvm.simpletrace.input_event_key_qcode = qemu.kvm.input_event_key_qcode ?
{
    try {
        argqcode_str = qcode ? user_string_n(qcode, 512) : "<null>"
    } catch {}
    argqcode_len = strlen(argqcode_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2657, gettimeofday_ns(), 24 + 8 + 4 + argqcode_len + 8, pid(), conidx, argqcode_len, argqcode_len, argqcode_str, down)
}
probe qemu.kvm.simpletrace.input_event_btn = qemu.kvm.input_event_btn ?
{
    try {
        argbtn_str = btn ? user_string_n(btn, 512) : "<null>"
    } catch {}
    argbtn_len = strlen(argbtn_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2658, gettimeofday_ns(), 24 + 8 + 4 + argbtn_len + 8, pid(), conidx, argbtn_len, argbtn_len, argbtn_str, down)
}
probe qemu.kvm.simpletrace.input_event_rel = qemu.kvm.input_event_rel ?
{
    try {
        argaxis_str = axis ? user_string_n(axis, 512) : "<null>"
    } catch {}
    argaxis_len = strlen(argaxis_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2659, gettimeofday_ns(), 24 + 8 + 4 + argaxis_len + 8, pid(), conidx, argaxis_len, argaxis_len, argaxis_str, value)
}
probe qemu.kvm.simpletrace.input_event_abs = qemu.kvm.input_event_abs ?
{
    try {
        argaxis_str = axis ? user_string_n(axis, 512) : "<null>"
    } catch {}
    argaxis_len = strlen(argaxis_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2660, gettimeofday_ns(), 24 + 8 + 4 + argaxis_len + 8, pid(), conidx, argaxis_len, argaxis_len, argaxis_str, value)
}
probe qemu.kvm.simpletrace.input_event_sync = qemu.kvm.input_event_sync ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2661, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.input_mouse_mode = qemu.kvm.input_mouse_mode ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2662, gettimeofday_ns(), 24 + 8, pid(), absolute)
}
probe qemu.kvm.simpletrace.qemu_spice_add_memslot = qemu.kvm.qemu_spice_add_memslot ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2663, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), qid, slot_id, virt_start, virt_end, async)
}
probe qemu.kvm.simpletrace.qemu_spice_del_memslot = qemu.kvm.qemu_spice_del_memslot ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2664, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qid, gid, slot_id)
}
probe qemu.kvm.simpletrace.qemu_spice_create_primary_surface = qemu.kvm.qemu_spice_create_primary_surface ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2665, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), qid, sid, surface, async)
}
probe qemu.kvm.simpletrace.qemu_spice_destroy_primary_surface = qemu.kvm.qemu_spice_destroy_primary_surface ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2666, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qid, sid, async)
}
probe qemu.kvm.simpletrace.qemu_spice_wakeup = qemu.kvm.qemu_spice_wakeup ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2667, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qemu_spice_create_update = qemu.kvm.qemu_spice_create_update ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2668, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), left, right, top, bottom)
}
probe qemu.kvm.simpletrace.qemu_spice_display_update = qemu.kvm.qemu_spice_display_update ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2669, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), qid, x, y, w, h)
}
probe qemu.kvm.simpletrace.qemu_spice_display_surface = qemu.kvm.qemu_spice_display_surface ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2670, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), qid, w, h, fast)
}
probe qemu.kvm.simpletrace.qemu_spice_display_refresh = qemu.kvm.qemu_spice_display_refresh ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2671, gettimeofday_ns(), 24 + 8 + 8, pid(), qid, notify)
}
probe qemu.kvm.simpletrace.qemu_spice_ui_info = qemu.kvm.qemu_spice_ui_info ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2672, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qid, width, height)
}
probe qemu.kvm.simpletrace.qemu_spice_gl_surface = qemu.kvm.qemu_spice_gl_surface ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2673, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), qid, w, h, fourcc)
}
probe qemu.kvm.simpletrace.qemu_spice_gl_scanout_disable = qemu.kvm.qemu_spice_gl_scanout_disable ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2674, gettimeofday_ns(), 24 + 8, pid(), qid)
}
probe qemu.kvm.simpletrace.qemu_spice_gl_scanout_texture = qemu.kvm.qemu_spice_gl_scanout_texture ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2675, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), qid, w, h, fourcc)
}
probe qemu.kvm.simpletrace.qemu_spice_gl_cursor = qemu.kvm.qemu_spice_gl_cursor ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2676, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qid, enabled, hotspot)
}
probe qemu.kvm.simpletrace.qemu_spice_gl_forward_dmabuf = qemu.kvm.qemu_spice_gl_forward_dmabuf ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2677, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qid, width, height)
}
probe qemu.kvm.simpletrace.qemu_spice_gl_render_dmabuf = qemu.kvm.qemu_spice_gl_render_dmabuf ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2678, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), qid, width, height)
}
probe qemu.kvm.simpletrace.qemu_spice_gl_update = qemu.kvm.qemu_spice_gl_update ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2679, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), qid, x, y, w, h)
}
probe qemu.kvm.simpletrace.keymap_parse = qemu.kvm.keymap_parse ?
{
    try {
        argfile_str = file ? user_string_n(file, 512) : "<null>"
    } catch {}
    argfile_len = strlen(argfile_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2680, gettimeofday_ns(), 24 + 4 + argfile_len, pid(), argfile_len, argfile_len, argfile_str)
}
probe qemu.kvm.simpletrace.keymap_add = qemu.kvm.keymap_add ?
{
    try {
        argline_str = line ? user_string_n(line, 512) : "<null>"
    } catch {}
    argline_len = strlen(argline_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 2681, gettimeofday_ns(), 24 + 8 + 8 + 4 + argline_len, pid(), sym, code, argline_len, argline_len, argline_str)
}
probe qemu.kvm.simpletrace.keymap_unmapped = qemu.kvm.keymap_unmapped ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2682, gettimeofday_ns(), 24 + 8, pid(), sym)
}
probe qemu.kvm.simpletrace.xkeymap_extension = qemu.kvm.xkeymap_extension ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2683, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.xkeymap_vendor = qemu.kvm.xkeymap_vendor ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2684, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.xkeymap_keycodes = qemu.kvm.xkeymap_keycodes ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2685, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.xkeymap_keymap = qemu.kvm.xkeymap_keymap ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2686, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.alsa_revents = qemu.kvm.alsa_revents ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2687, gettimeofday_ns(), 24 + 8, pid(), revents)
}
probe qemu.kvm.simpletrace.alsa_pollout = qemu.kvm.alsa_pollout ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2688, gettimeofday_ns(), 24 + 8 + 8, pid(), i, fd)
}
probe qemu.kvm.simpletrace.alsa_set_handler = qemu.kvm.alsa_set_handler ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2689, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), events, index, fd, err)
}
probe qemu.kvm.simpletrace.alsa_wrote_zero = qemu.kvm.alsa_wrote_zero ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2690, gettimeofday_ns(), 24 + 8, pid(), len)
}
probe qemu.kvm.simpletrace.alsa_read_zero = qemu.kvm.alsa_read_zero ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2691, gettimeofday_ns(), 24 + 8, pid(), len)
}
probe qemu.kvm.simpletrace.alsa_xrun_out = qemu.kvm.alsa_xrun_out ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2692, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.alsa_xrun_in = qemu.kvm.alsa_xrun_in ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2693, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.alsa_resume_out = qemu.kvm.alsa_resume_out ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2694, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.alsa_resume_in = qemu.kvm.alsa_resume_in ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2695, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.alsa_no_frames = qemu.kvm.alsa_no_frames ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2696, gettimeofday_ns(), 24 + 8, pid(), state)
}
probe qemu.kvm.simpletrace.oss_version = qemu.kvm.oss_version ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2697, gettimeofday_ns(), 24 + 8, pid(), version)
}
probe qemu.kvm.simpletrace.oss_invalid_available_size = qemu.kvm.oss_invalid_available_size ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2698, gettimeofday_ns(), 24 + 8 + 8, pid(), size, bufsize)
}
probe qemu.kvm.simpletrace.vhost_user_event = qemu.kvm.vhost_user_event ?
{
    try {
        argchr_str = chr ? user_string_n(chr, 512) : "<null>"
    } catch {}
    argchr_len = strlen(argchr_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2699, gettimeofday_ns(), 24 + 4 + argchr_len + 8, pid(), argchr_len, argchr_len, argchr_str, event)
}
probe qemu.kvm.simpletrace.colo_proxy_main = qemu.kvm.colo_proxy_main ?
{
    try {
        argchr_str = chr ? user_string_n(chr, 512) : "<null>"
    } catch {}
    argchr_len = strlen(argchr_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2700, gettimeofday_ns(), 24 + 4 + argchr_len, pid(), argchr_len, argchr_len, argchr_str)
}
probe qemu.kvm.simpletrace.colo_compare_main = qemu.kvm.colo_compare_main ?
{
    try {
        argchr_str = chr ? user_string_n(chr, 512) : "<null>"
    } catch {}
    argchr_len = strlen(argchr_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2701, gettimeofday_ns(), 24 + 4 + argchr_len, pid(), argchr_len, argchr_len, argchr_str)
}
probe qemu.kvm.simpletrace.colo_compare_udp_miscompare = qemu.kvm.colo_compare_udp_miscompare ?
{
    try {
        argsta_str = sta ? user_string_n(sta, 512) : "<null>"
    } catch {}
    argsta_len = strlen(argsta_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2702, gettimeofday_ns(), 24 + 4 + argsta_len + 8, pid(), argsta_len, argsta_len, argsta_str, size)
}
probe qemu.kvm.simpletrace.colo_compare_icmp_miscompare = qemu.kvm.colo_compare_icmp_miscompare ?
{
    try {
        argsta_str = sta ? user_string_n(sta, 512) : "<null>"
    } catch {}
    argsta_len = strlen(argsta_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2703, gettimeofday_ns(), 24 + 4 + argsta_len + 8, pid(), argsta_len, argsta_len, argsta_str, size)
}
probe qemu.kvm.simpletrace.colo_compare_ip_info = qemu.kvm.colo_compare_ip_info ?
{
    try {
        argsta_str = sta ? user_string_n(sta, 512) : "<null>"
    } catch {}
    argsta_len = strlen(argsta_str)
    try {
        argstb_str = stb ? user_string_n(stb, 512) : "<null>"
    } catch {}
    argstb_len = strlen(argstb_str)
    try {
        argstc_str = stc ? user_string_n(stc, 512) : "<null>"
    } catch {}
    argstc_len = strlen(argstc_str)
    try {
        argstd_str = std ? user_string_n(std, 512) : "<null>"
    } catch {}
    argstd_len = strlen(argstd_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%4b%.*s%8b%4b%.*s%4b%.*s", 1, 2704, gettimeofday_ns(), 24 + 8 + 4 + argsta_len + 4 + argstb_len + 8 + 4 + argstc_len + 4 + argstd_len, pid(), psize, argsta_len, argsta_len, argsta_str, argstb_len, argstb_len, argstb_str, ssize, argstc_len, argstc_len, argstc_str, argstd_len, argstd_len, argstd_str)
}
probe qemu.kvm.simpletrace.colo_old_packet_check_found = qemu.kvm.colo_old_packet_check_found ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2705, gettimeofday_ns(), 24 + 8, pid(), old_time)
}
probe qemu.kvm.simpletrace.colo_compare_miscompare = qemu.kvm.colo_compare_miscompare ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2706, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.colo_compare_tcp_info = qemu.kvm.colo_compare_tcp_info ?
{
    try {
        argpkt_str = pkt ? user_string_n(pkt, 512) : "<null>"
    } catch {}
    argpkt_len = strlen(argpkt_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b%8b%8b%8b", 1, 2707, gettimeofday_ns(), 24 + 4 + argpkt_len + 8 + 8 + 8 + 8 + 8 + 8, pid(), argpkt_len, argpkt_len, argpkt_str, seq, ack, hdlen, pdlen, offset, flags)
}
probe qemu.kvm.simpletrace.colo_filter_rewriter_debug = qemu.kvm.colo_filter_rewriter_debug ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2708, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.colo_filter_rewriter_pkt_info = qemu.kvm.colo_filter_rewriter_pkt_info ?
{
    try {
        argfunc_str = func ? user_string_n(func, 512) : "<null>"
    } catch {}
    argfunc_len = strlen(argfunc_str)
    try {
        argsrc_str = src ? user_string_n(src, 512) : "<null>"
    } catch {}
    argsrc_len = strlen(argsrc_str)
    try {
        argdst_str = dst ? user_string_n(dst, 512) : "<null>"
    } catch {}
    argdst_len = strlen(argdst_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%4b%.*s%8b%8b%8b", 1, 2709, gettimeofday_ns(), 24 + 4 + argfunc_len + 4 + argsrc_len + 4 + argdst_len + 8 + 8 + 8, pid(), argfunc_len, argfunc_len, argfunc_str, argsrc_len, argsrc_len, argsrc_str, argdst_len, argdst_len, argdst_str, seq, ack, flag)
}
probe qemu.kvm.simpletrace.colo_filter_rewriter_conn_offset = qemu.kvm.colo_filter_rewriter_conn_offset ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2710, gettimeofday_ns(), 24 + 8, pid(), offset)
}
probe qemu.kvm.simpletrace.arm_gt_recalc = qemu.kvm.arm_gt_recalc ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2711, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), timer, irqstate, nexttick)
}
probe qemu.kvm.simpletrace.arm_gt_recalc_disabled = qemu.kvm.arm_gt_recalc_disabled ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2712, gettimeofday_ns(), 24 + 8, pid(), timer)
}
probe qemu.kvm.simpletrace.arm_gt_cval_write = qemu.kvm.arm_gt_cval_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2713, gettimeofday_ns(), 24 + 8 + 8, pid(), timer, value)
}
probe qemu.kvm.simpletrace.arm_gt_tval_write = qemu.kvm.arm_gt_tval_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2714, gettimeofday_ns(), 24 + 8 + 8, pid(), timer, value)
}
probe qemu.kvm.simpletrace.arm_gt_ctl_write = qemu.kvm.arm_gt_ctl_write ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2715, gettimeofday_ns(), 24 + 8 + 8, pid(), timer, value)
}
probe qemu.kvm.simpletrace.arm_gt_imask_toggle = qemu.kvm.arm_gt_imask_toggle ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2716, gettimeofday_ns(), 24 + 8 + 8, pid(), timer, irqstate)
}
probe qemu.kvm.simpletrace.arm_gt_cntvoff_write = qemu.kvm.arm_gt_cntvoff_write ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2717, gettimeofday_ns(), 24 + 8, pid(), value)
}
probe qemu.kvm.simpletrace.kvm_x86_fixup_msi_error = qemu.kvm.kvm_x86_fixup_msi_error ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2718, gettimeofday_ns(), 24 + 8, pid(), gsi)
}
probe qemu.kvm.simpletrace.kvm_x86_add_msi_route = qemu.kvm.kvm_x86_add_msi_route ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2719, gettimeofday_ns(), 24 + 8, pid(), virq)
}
probe qemu.kvm.simpletrace.kvm_x86_remove_msi_route = qemu.kvm.kvm_x86_remove_msi_route ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2720, gettimeofday_ns(), 24 + 8, pid(), virq)
}
probe qemu.kvm.simpletrace.kvm_x86_update_msi_routes = qemu.kvm.kvm_x86_update_msi_routes ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2721, gettimeofday_ns(), 24 + 8, pid(), num)
}
probe qemu.kvm.simpletrace.kvm_sev_init = qemu.kvm.kvm_sev_init ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2722, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.kvm_memcrypt_register_region = qemu.kvm.kvm_memcrypt_register_region ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2723, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, len)
}
probe qemu.kvm.simpletrace.kvm_memcrypt_unregister_region = qemu.kvm.kvm_memcrypt_unregister_region ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2724, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, len)
}
probe qemu.kvm.simpletrace.kvm_sev_change_state = qemu.kvm.kvm_sev_change_state ?
{
    try {
        argold_str = old ? user_string_n(old, 512) : "<null>"
    } catch {}
    argold_len = strlen(argold_str)
    try {
        argnew_str = new ? user_string_n(new, 512) : "<null>"
    } catch {}
    argnew_len = strlen(argnew_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 2725, gettimeofday_ns(), 24 + 4 + argold_len + 4 + argnew_len, pid(), argold_len, argold_len, argold_str, argnew_len, argnew_len, argnew_str)
}
probe qemu.kvm.simpletrace.kvm_sev_launch_start = qemu.kvm.kvm_sev_launch_start ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2726, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), policy, session, pdh)
}
probe qemu.kvm.simpletrace.kvm_sev_launch_update_data = qemu.kvm.kvm_sev_launch_update_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2727, gettimeofday_ns(), 24 + 8 + 8, pid(), addr, len)
}
probe qemu.kvm.simpletrace.kvm_sev_launch_measurement = qemu.kvm.kvm_sev_launch_measurement ?
{
    try {
        argvalue_str = value ? user_string_n(value, 512) : "<null>"
    } catch {}
    argvalue_len = strlen(argvalue_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2728, gettimeofday_ns(), 24 + 4 + argvalue_len, pid(), argvalue_len, argvalue_len, argvalue_str)
}
probe qemu.kvm.simpletrace.kvm_sev_launch_finish = qemu.kvm.kvm_sev_launch_finish ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2729, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.mips_translate_c0 = qemu.kvm.mips_translate_c0 ?
{
    try {
        arginstr_str = instr ? user_string_n(instr, 512) : "<null>"
    } catch {}
    arginstr_len = strlen(arginstr_str)
    try {
        argrn_str = rn ? user_string_n(rn, 512) : "<null>"
    } catch {}
    argrn_len = strlen(argrn_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%8b%8b", 1, 2730, gettimeofday_ns(), 24 + 4 + arginstr_len + 4 + argrn_len + 8 + 8, pid(), arginstr_len, arginstr_len, arginstr_str, argrn_len, argrn_len, argrn_str, reg, sel)
}
probe qemu.kvm.simpletrace.mips_translate_tr = qemu.kvm.mips_translate_tr ?
{
    try {
        arginstr_str = instr ? user_string_n(instr, 512) : "<null>"
    } catch {}
    arginstr_len = strlen(arginstr_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b%8b", 1, 2731, gettimeofday_ns(), 24 + 4 + arginstr_len + 8 + 8 + 8 + 8, pid(), arginstr_len, arginstr_len, arginstr_str, rt, u, sel, h)
}
probe qemu.kvm.simpletrace.mmu_helper_dfault = qemu.kvm.mmu_helper_dfault ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2732, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), address, context, mmu_idx, tl)
}
probe qemu.kvm.simpletrace.mmu_helper_dprot = qemu.kvm.mmu_helper_dprot ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2733, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), address, context, mmu_idx, tl)
}
probe qemu.kvm.simpletrace.mmu_helper_dmiss = qemu.kvm.mmu_helper_dmiss ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2734, gettimeofday_ns(), 24 + 8 + 8, pid(), address, context)
}
probe qemu.kvm.simpletrace.mmu_helper_tfault = qemu.kvm.mmu_helper_tfault ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2735, gettimeofday_ns(), 24 + 8 + 8, pid(), address, context)
}
probe qemu.kvm.simpletrace.mmu_helper_tmiss = qemu.kvm.mmu_helper_tmiss ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2736, gettimeofday_ns(), 24 + 8 + 8, pid(), address, context)
}
probe qemu.kvm.simpletrace.mmu_helper_get_phys_addr_code = qemu.kvm.mmu_helper_get_phys_addr_code ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2737, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), tl, mmu_idx, prim_context, sec_context, address)
}
probe qemu.kvm.simpletrace.mmu_helper_get_phys_addr_data = qemu.kvm.mmu_helper_get_phys_addr_data ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2738, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), tl, mmu_idx, prim_context, sec_context, address)
}
probe qemu.kvm.simpletrace.mmu_helper_mmu_fault = qemu.kvm.mmu_helper_mmu_fault ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2739, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), address, paddr, mmu_idx, tl, prim_context, sec_context)
}
probe qemu.kvm.simpletrace.int_helper_set_softint = qemu.kvm.int_helper_set_softint ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2740, gettimeofday_ns(), 24 + 8, pid(), softint)
}
probe qemu.kvm.simpletrace.int_helper_clear_softint = qemu.kvm.int_helper_clear_softint ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2741, gettimeofday_ns(), 24 + 8, pid(), softint)
}
probe qemu.kvm.simpletrace.int_helper_write_softint = qemu.kvm.int_helper_write_softint ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2742, gettimeofday_ns(), 24 + 8, pid(), softint)
}
probe qemu.kvm.simpletrace.int_helper_icache_freeze = qemu.kvm.int_helper_icache_freeze ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2743, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.int_helper_dcache_freeze = qemu.kvm.int_helper_dcache_freeze ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2744, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.win_helper_gregset_error = qemu.kvm.win_helper_gregset_error ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2745, gettimeofday_ns(), 24 + 8, pid(), pstate)
}
probe qemu.kvm.simpletrace.win_helper_switch_pstate = qemu.kvm.win_helper_switch_pstate ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2746, gettimeofday_ns(), 24 + 8 + 8, pid(), pstate_regs, new_pstate_regs)
}
probe qemu.kvm.simpletrace.win_helper_no_switch_pstate = qemu.kvm.win_helper_no_switch_pstate ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2747, gettimeofday_ns(), 24 + 8, pid(), new_pstate_regs)
}
probe qemu.kvm.simpletrace.win_helper_wrpil = qemu.kvm.win_helper_wrpil ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2748, gettimeofday_ns(), 24 + 8 + 8, pid(), psrpil, new_pil)
}
probe qemu.kvm.simpletrace.win_helper_done = qemu.kvm.win_helper_done ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2749, gettimeofday_ns(), 24 + 8, pid(), tl)
}
probe qemu.kvm.simpletrace.win_helper_retry = qemu.kvm.win_helper_retry ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2750, gettimeofday_ns(), 24 + 8, pid(), tl)
}
probe qemu.kvm.simpletrace.get_skeys_nonzero = qemu.kvm.get_skeys_nonzero ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2751, gettimeofday_ns(), 24 + 8, pid(), rc)
}
probe qemu.kvm.simpletrace.set_skeys_nonzero = qemu.kvm.set_skeys_nonzero ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2752, gettimeofday_ns(), 24 + 8, pid(), rc)
}
probe qemu.kvm.simpletrace.ioinst = qemu.kvm.ioinst ?
{
    try {
        arginsn_str = insn ? user_string_n(insn, 512) : "<null>"
    } catch {}
    arginsn_len = strlen(arginsn_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2753, gettimeofday_ns(), 24 + 4 + arginsn_len, pid(), arginsn_len, arginsn_len, arginsn_str)
}
probe qemu.kvm.simpletrace.ioinst_sch_id = qemu.kvm.ioinst_sch_id ?
{
    try {
        arginsn_str = insn ? user_string_n(insn, 512) : "<null>"
    } catch {}
    arginsn_len = strlen(arginsn_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 2754, gettimeofday_ns(), 24 + 4 + arginsn_len + 8 + 8 + 8, pid(), arginsn_len, arginsn_len, arginsn_str, cssid, ssid, schid)
}
probe qemu.kvm.simpletrace.ioinst_chp_id = qemu.kvm.ioinst_chp_id ?
{
    try {
        arginsn_str = insn ? user_string_n(insn, 512) : "<null>"
    } catch {}
    arginsn_len = strlen(arginsn_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 2755, gettimeofday_ns(), 24 + 4 + arginsn_len + 8 + 8, pid(), arginsn_len, arginsn_len, arginsn_str, cssid, chpid)
}
probe qemu.kvm.simpletrace.ioinst_chsc_cmd = qemu.kvm.ioinst_chsc_cmd ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2756, gettimeofday_ns(), 24 + 8 + 8, pid(), cmd, len)
}
probe qemu.kvm.simpletrace.kvm_enable_cmma = qemu.kvm.kvm_enable_cmma ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2757, gettimeofday_ns(), 24 + 8, pid(), rc)
}
probe qemu.kvm.simpletrace.kvm_clear_cmma = qemu.kvm.kvm_clear_cmma ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2758, gettimeofday_ns(), 24 + 8, pid(), rc)
}
probe qemu.kvm.simpletrace.kvm_failed_cpu_state_set = qemu.kvm.kvm_failed_cpu_state_set ?
{
    try {
        argmsg_str = msg ? user_string_n(msg, 512) : "<null>"
    } catch {}
    argmsg_len = strlen(argmsg_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 2759, gettimeofday_ns(), 24 + 8 + 8 + 4 + argmsg_len, pid(), cpu_index, state, argmsg_len, argmsg_len, argmsg_str)
}
probe qemu.kvm.simpletrace.cpu_set_state = qemu.kvm.cpu_set_state ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2760, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu_index, state)
}
probe qemu.kvm.simpletrace.cpu_halt = qemu.kvm.cpu_halt ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2761, gettimeofday_ns(), 24 + 8, pid(), cpu_index)
}
probe qemu.kvm.simpletrace.cpu_unhalt = qemu.kvm.cpu_unhalt ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2762, gettimeofday_ns(), 24 + 8, pid(), cpu_index)
}
probe qemu.kvm.simpletrace.sigp_finished = qemu.kvm.sigp_finished ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2763, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), order, cpu_index, dst_index, cc)
}
probe qemu.kvm.simpletrace.kvm_failed_spr_set = qemu.kvm.kvm_failed_spr_set ?
{
    try {
        argmsg_str = msg ? user_string_n(msg, 512) : "<null>"
    } catch {}
    argmsg_len = strlen(argmsg_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 2764, gettimeofday_ns(), 24 + 8 + 4 + argmsg_len, pid(), str, argmsg_len, argmsg_len, argmsg_str)
}
probe qemu.kvm.simpletrace.kvm_failed_spr_get = qemu.kvm.kvm_failed_spr_get ?
{
    try {
        argmsg_str = msg ? user_string_n(msg, 512) : "<null>"
    } catch {}
    argmsg_len = strlen(argmsg_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 2765, gettimeofday_ns(), 24 + 8 + 4 + argmsg_len, pid(), str, argmsg_len, argmsg_len, argmsg_str)
}
probe qemu.kvm.simpletrace.object_dynamic_cast_assert = qemu.kvm.object_dynamic_cast_assert ?
{
    try {
        argtype_str = type ? user_string_n(type, 512) : "<null>"
    } catch {}
    argtype_len = strlen(argtype_str)
    try {
        argtarget_str = target ? user_string_n(target, 512) : "<null>"
    } catch {}
    argtarget_len = strlen(argtarget_str)
    try {
        argfile_str = file ? user_string_n(file, 512) : "<null>"
    } catch {}
    argfile_len = strlen(argfile_str)
    try {
        argfunc_str = func ? user_string_n(func, 512) : "<null>"
    } catch {}
    argfunc_len = strlen(argfunc_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%4b%.*s%8b%4b%.*s", 1, 2766, gettimeofday_ns(), 24 + 4 + argtype_len + 4 + argtarget_len + 4 + argfile_len + 8 + 4 + argfunc_len, pid(), argtype_len, argtype_len, argtype_str, argtarget_len, argtarget_len, argtarget_str, argfile_len, argfile_len, argfile_str, line, argfunc_len, argfunc_len, argfunc_str)
}
probe qemu.kvm.simpletrace.object_class_dynamic_cast_assert = qemu.kvm.object_class_dynamic_cast_assert ?
{
    try {
        argtype_str = type ? user_string_n(type, 512) : "<null>"
    } catch {}
    argtype_len = strlen(argtype_str)
    try {
        argtarget_str = target ? user_string_n(target, 512) : "<null>"
    } catch {}
    argtarget_len = strlen(argtarget_str)
    try {
        argfile_str = file ? user_string_n(file, 512) : "<null>"
    } catch {}
    argfile_len = strlen(argfile_str)
    try {
        argfunc_str = func ? user_string_n(func, 512) : "<null>"
    } catch {}
    argfunc_len = strlen(argfunc_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%4b%.*s%8b%4b%.*s", 1, 2767, gettimeofday_ns(), 24 + 4 + argtype_len + 4 + argtarget_len + 4 + argfile_len + 8 + 4 + argfunc_len, pid(), argtype_len, argtype_len, argtype_str, argtarget_len, argtarget_len, argtarget_str, argfile_len, argfile_len, argfile_str, line, argfunc_len, argfunc_len, argfunc_str)
}
probe qemu.kvm.simpletrace.user_setup_frame = qemu.kvm.user_setup_frame ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2768, gettimeofday_ns(), 24 + 8 + 8, pid(), env, frame_addr)
}
probe qemu.kvm.simpletrace.user_setup_rt_frame = qemu.kvm.user_setup_rt_frame ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2769, gettimeofday_ns(), 24 + 8 + 8, pid(), env, frame_addr)
}
probe qemu.kvm.simpletrace.user_do_rt_sigreturn = qemu.kvm.user_do_rt_sigreturn ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2770, gettimeofday_ns(), 24 + 8 + 8, pid(), env, frame_addr)
}
probe qemu.kvm.simpletrace.user_do_sigreturn = qemu.kvm.user_do_sigreturn ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2771, gettimeofday_ns(), 24 + 8 + 8, pid(), env, frame_addr)
}
probe qemu.kvm.simpletrace.user_force_sig = qemu.kvm.user_force_sig ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2772, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), env, target_sig, host_sig)
}
probe qemu.kvm.simpletrace.user_handle_signal = qemu.kvm.user_handle_signal ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2773, gettimeofday_ns(), 24 + 8 + 8, pid(), env, target_sig)
}
probe qemu.kvm.simpletrace.user_host_signal = qemu.kvm.user_host_signal ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2774, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), env, host_sig, target_sig)
}
probe qemu.kvm.simpletrace.user_queue_signal = qemu.kvm.user_queue_signal ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2775, gettimeofday_ns(), 24 + 8 + 8, pid(), env, target_sig)
}
probe qemu.kvm.simpletrace.user_s390x_restore_sigregs = qemu.kvm.user_s390x_restore_sigregs ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2776, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), env, sc_psw_addr, env_psw_addr)
}
probe qemu.kvm.simpletrace.visit_free = qemu.kvm.visit_free ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2777, gettimeofday_ns(), 24 + 8, pid(), v)
}
probe qemu.kvm.simpletrace.visit_complete = qemu.kvm.visit_complete ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2778, gettimeofday_ns(), 24 + 8 + 8, pid(), v, opaque)
}
probe qemu.kvm.simpletrace.visit_start_struct = qemu.kvm.visit_start_struct ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%8b", 1, 2779, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8 + 8, pid(), v, argname_len, argname_len, argname_str, obj, size)
}
probe qemu.kvm.simpletrace.visit_check_struct = qemu.kvm.visit_check_struct ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2780, gettimeofday_ns(), 24 + 8, pid(), v)
}
probe qemu.kvm.simpletrace.visit_end_struct = qemu.kvm.visit_end_struct ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2781, gettimeofday_ns(), 24 + 8 + 8, pid(), v, obj)
}
probe qemu.kvm.simpletrace.visit_start_list = qemu.kvm.visit_start_list ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%8b", 1, 2782, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8 + 8, pid(), v, argname_len, argname_len, argname_str, obj, size)
}
probe qemu.kvm.simpletrace.visit_next_list = qemu.kvm.visit_next_list ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2783, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), v, tail, size)
}
probe qemu.kvm.simpletrace.visit_check_list = qemu.kvm.visit_check_list ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2784, gettimeofday_ns(), 24 + 8, pid(), v)
}
probe qemu.kvm.simpletrace.visit_end_list = qemu.kvm.visit_end_list ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2785, gettimeofday_ns(), 24 + 8 + 8, pid(), v, obj)
}
probe qemu.kvm.simpletrace.visit_start_alternate = qemu.kvm.visit_start_alternate ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%8b", 1, 2786, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8 + 8, pid(), v, argname_len, argname_len, argname_str, obj, size)
}
probe qemu.kvm.simpletrace.visit_end_alternate = qemu.kvm.visit_end_alternate ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2787, gettimeofday_ns(), 24 + 8 + 8, pid(), v, obj)
}
probe qemu.kvm.simpletrace.visit_optional = qemu.kvm.visit_optional ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2788, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), v, argname_len, argname_len, argname_str, present)
}
probe qemu.kvm.simpletrace.visit_type_enum = qemu.kvm.visit_type_enum ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2789, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), v, argname_len, argname_len, argname_str, obj)
}
probe qemu.kvm.simpletrace.visit_type_int = qemu.kvm.visit_type_int ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2790, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), v, argname_len, argname_len, argname_str, obj)
}
probe qemu.kvm.simpletrace.visit_type_uint8 = qemu.kvm.visit_type_uint8 ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2791, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), v, argname_len, argname_len, argname_str, obj)
}
probe qemu.kvm.simpletrace.visit_type_uint16 = qemu.kvm.visit_type_uint16 ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2792, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), v, argname_len, argname_len, argname_str, obj)
}
probe qemu.kvm.simpletrace.visit_type_uint32 = qemu.kvm.visit_type_uint32 ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2793, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), v, argname_len, argname_len, argname_str, obj)
}
probe qemu.kvm.simpletrace.visit_type_uint64 = qemu.kvm.visit_type_uint64 ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2794, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), v, argname_len, argname_len, argname_str, obj)
}
probe qemu.kvm.simpletrace.visit_type_int8 = qemu.kvm.visit_type_int8 ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2795, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), v, argname_len, argname_len, argname_str, obj)
}
probe qemu.kvm.simpletrace.visit_type_int16 = qemu.kvm.visit_type_int16 ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2796, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), v, argname_len, argname_len, argname_str, obj)
}
probe qemu.kvm.simpletrace.visit_type_int32 = qemu.kvm.visit_type_int32 ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2797, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), v, argname_len, argname_len, argname_str, obj)
}
probe qemu.kvm.simpletrace.visit_type_int64 = qemu.kvm.visit_type_int64 ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2798, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), v, argname_len, argname_len, argname_str, obj)
}
probe qemu.kvm.simpletrace.visit_type_size = qemu.kvm.visit_type_size ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2799, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), v, argname_len, argname_len, argname_str, obj)
}
probe qemu.kvm.simpletrace.visit_type_bool = qemu.kvm.visit_type_bool ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2800, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), v, argname_len, argname_len, argname_str, obj)
}
probe qemu.kvm.simpletrace.visit_type_str = qemu.kvm.visit_type_str ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2801, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), v, argname_len, argname_len, argname_str, obj)
}
probe qemu.kvm.simpletrace.visit_type_number = qemu.kvm.visit_type_number ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2802, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), v, argname_len, argname_len, argname_str, obj)
}
probe qemu.kvm.simpletrace.visit_type_any = qemu.kvm.visit_type_any ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2803, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), v, argname_len, argname_len, argname_str, obj)
}
probe qemu.kvm.simpletrace.visit_type_null = qemu.kvm.visit_type_null ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2804, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), v, argname_len, argname_len, argname_str, obj)
}
probe qemu.kvm.simpletrace.translate_block = qemu.kvm.translate_block ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2808, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), tb, pc, tb_code)
}
probe qemu.kvm.simpletrace.kvm_ioctl = qemu.kvm.kvm_ioctl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2809, gettimeofday_ns(), 24 + 8 + 8, pid(), type, arg)
}
probe qemu.kvm.simpletrace.kvm_vm_ioctl = qemu.kvm.kvm_vm_ioctl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2810, gettimeofday_ns(), 24 + 8 + 8, pid(), type, arg)
}
probe qemu.kvm.simpletrace.kvm_vcpu_ioctl = qemu.kvm.kvm_vcpu_ioctl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2811, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), cpu_index, type, arg)
}
probe qemu.kvm.simpletrace.kvm_run_exit = qemu.kvm.kvm_run_exit ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2812, gettimeofday_ns(), 24 + 8 + 8, pid(), cpu_index, reason)
}
probe qemu.kvm.simpletrace.kvm_device_ioctl = qemu.kvm.kvm_device_ioctl ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2813, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), fd, type, arg)
}
probe qemu.kvm.simpletrace.kvm_failed_reg_get = qemu.kvm.kvm_failed_reg_get ?
{
    try {
        argmsg_str = msg ? user_string_n(msg, 512) : "<null>"
    } catch {}
    argmsg_len = strlen(argmsg_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 2814, gettimeofday_ns(), 24 + 8 + 4 + argmsg_len, pid(), id, argmsg_len, argmsg_len, argmsg_str)
}
probe qemu.kvm.simpletrace.kvm_failed_reg_set = qemu.kvm.kvm_failed_reg_set ?
{
    try {
        argmsg_str = msg ? user_string_n(msg, 512) : "<null>"
    } catch {}
    argmsg_len = strlen(argmsg_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 2815, gettimeofday_ns(), 24 + 8 + 4 + argmsg_len, pid(), id, argmsg_len, argmsg_len, argmsg_str)
}
probe qemu.kvm.simpletrace.kvm_irqchip_commit_routes = qemu.kvm.kvm_irqchip_commit_routes ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2816, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.kvm_irqchip_add_msi_route = qemu.kvm.kvm_irqchip_add_msi_route ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b", 1, 2817, gettimeofday_ns(), 24 + 4 + argname_len + 8 + 8, pid(), argname_len, argname_len, argname_str, vector, virq)
}
probe qemu.kvm.simpletrace.kvm_irqchip_update_msi_route = qemu.kvm.kvm_irqchip_update_msi_route ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2818, gettimeofday_ns(), 24 + 8, pid(), virq)
}
probe qemu.kvm.simpletrace.kvm_irqchip_release_virq = qemu.kvm.kvm_irqchip_release_virq ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2819, gettimeofday_ns(), 24 + 8, pid(), virq)
}
probe qemu.kvm.simpletrace.kvm_set_user_memory = qemu.kvm.kvm_set_user_memory ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%8b", 1, 2820, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 8, pid(), slot, flags, guest_phys_addr, memory_size, userspace_addr, ret)
}
probe qemu.kvm.simpletrace.nbd_send_option_request = qemu.kvm.nbd_send_option_request ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2821, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), opt, argname_len, argname_len, argname_str, len)
}
probe qemu.kvm.simpletrace.nbd_receive_option_reply = qemu.kvm.nbd_receive_option_reply ?
{
    try {
        argoptname_str = optname ? user_string_n(optname, 512) : "<null>"
    } catch {}
    argoptname_len = strlen(argoptname_str)
    try {
        argtypename_str = typename ? user_string_n(typename, 512) : "<null>"
    } catch {}
    argtypename_len = strlen(argtypename_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%4b%.*s%8b", 1, 2822, gettimeofday_ns(), 24 + 8 + 4 + argoptname_len + 8 + 4 + argtypename_len + 8, pid(), option, argoptname_len, argoptname_len, argoptname_str, type, argtypename_len, argtypename_len, argtypename_str, length)
}
probe qemu.kvm.simpletrace.nbd_server_error_msg = qemu.kvm.nbd_server_error_msg ?
{
    try {
        argtype_str = type ? user_string_n(type, 512) : "<null>"
    } catch {}
    argtype_len = strlen(argtype_str)
    try {
        argmsg_str = msg ? user_string_n(msg, 512) : "<null>"
    } catch {}
    argmsg_len = strlen(argmsg_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%4b%.*s", 1, 2823, gettimeofday_ns(), 24 + 8 + 4 + argtype_len + 4 + argmsg_len, pid(), err, argtype_len, argtype_len, argtype_str, argmsg_len, argmsg_len, argmsg_str)
}
probe qemu.kvm.simpletrace.nbd_reply_err_unsup = qemu.kvm.nbd_reply_err_unsup ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 2824, gettimeofday_ns(), 24 + 8 + 4 + argname_len, pid(), option, argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.nbd_receive_list = qemu.kvm.nbd_receive_list ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argdesc_str = desc ? user_string_n(desc, 512) : "<null>"
    } catch {}
    argdesc_len = strlen(argdesc_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 2825, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argdesc_len, pid(), argname_len, argname_len, argname_str, argdesc_len, argdesc_len, argdesc_str)
}
probe qemu.kvm.simpletrace.nbd_opt_info_go_start = qemu.kvm.nbd_opt_info_go_start ?
{
    try {
        argopt_str = opt ? user_string_n(opt, 512) : "<null>"
    } catch {}
    argopt_len = strlen(argopt_str)
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 2826, gettimeofday_ns(), 24 + 4 + argopt_len + 4 + argname_len, pid(), argopt_len, argopt_len, argopt_str, argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.nbd_opt_info_go_success = qemu.kvm.nbd_opt_info_go_success ?
{
    try {
        argopt_str = opt ? user_string_n(opt, 512) : "<null>"
    } catch {}
    argopt_len = strlen(argopt_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2827, gettimeofday_ns(), 24 + 4 + argopt_len, pid(), argopt_len, argopt_len, argopt_str)
}
probe qemu.kvm.simpletrace.nbd_opt_info_unknown = qemu.kvm.nbd_opt_info_unknown ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 2828, gettimeofday_ns(), 24 + 8 + 4 + argname_len, pid(), info, argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.nbd_opt_info_block_size = qemu.kvm.nbd_opt_info_block_size ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2829, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), minimum, preferred, maximum)
}
probe qemu.kvm.simpletrace.nbd_receive_query_exports_start = qemu.kvm.nbd_receive_query_exports_start ?
{
    try {
        argwantname_str = wantname ? user_string_n(wantname, 512) : "<null>"
    } catch {}
    argwantname_len = strlen(argwantname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2830, gettimeofday_ns(), 24 + 4 + argwantname_len, pid(), argwantname_len, argwantname_len, argwantname_str)
}
probe qemu.kvm.simpletrace.nbd_receive_query_exports_success = qemu.kvm.nbd_receive_query_exports_success ?
{
    try {
        argwantname_str = wantname ? user_string_n(wantname, 512) : "<null>"
    } catch {}
    argwantname_len = strlen(argwantname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2831, gettimeofday_ns(), 24 + 4 + argwantname_len, pid(), argwantname_len, argwantname_len, argwantname_str)
}
probe qemu.kvm.simpletrace.nbd_receive_starttls_new_client = qemu.kvm.nbd_receive_starttls_new_client ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2832, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nbd_receive_starttls_tls_handshake = qemu.kvm.nbd_receive_starttls_tls_handshake ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2833, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nbd_opt_meta_request = qemu.kvm.nbd_opt_meta_request ?
{
    try {
        argoptname_str = optname ? user_string_n(optname, 512) : "<null>"
    } catch {}
    argoptname_len = strlen(argoptname_str)
    try {
        argcontext_str = context ? user_string_n(context, 512) : "<null>"
    } catch {}
    argcontext_len = strlen(argcontext_str)
    try {
        argexport_str = export ? user_string_n(export, 512) : "<null>"
    } catch {}
    argexport_len = strlen(argexport_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%4b%.*s", 1, 2834, gettimeofday_ns(), 24 + 4 + argoptname_len + 4 + argcontext_len + 4 + argexport_len, pid(), argoptname_len, argoptname_len, argoptname_str, argcontext_len, argcontext_len, argcontext_str, argexport_len, argexport_len, argexport_str)
}
probe qemu.kvm.simpletrace.nbd_opt_meta_reply = qemu.kvm.nbd_opt_meta_reply ?
{
    try {
        argoptname_str = optname ? user_string_n(optname, 512) : "<null>"
    } catch {}
    argoptname_len = strlen(argoptname_str)
    try {
        argcontext_str = context ? user_string_n(context, 512) : "<null>"
    } catch {}
    argcontext_len = strlen(argcontext_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%8b", 1, 2835, gettimeofday_ns(), 24 + 4 + argoptname_len + 4 + argcontext_len + 8, pid(), argoptname_len, argoptname_len, argoptname_str, argcontext_len, argcontext_len, argcontext_str, id)
}
probe qemu.kvm.simpletrace.nbd_start_negotiate = qemu.kvm.nbd_start_negotiate ?
{
    try {
        arghostname_str = hostname ? user_string_n(hostname, 512) : "<null>"
    } catch {}
    arghostname_len = strlen(arghostname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 2836, gettimeofday_ns(), 24 + 8 + 4 + arghostname_len, pid(), tlscreds, arghostname_len, arghostname_len, arghostname_str)
}
probe qemu.kvm.simpletrace.nbd_receive_negotiate_magic = qemu.kvm.nbd_receive_negotiate_magic ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2837, gettimeofday_ns(), 24 + 8, pid(), magic)
}
probe qemu.kvm.simpletrace.nbd_receive_negotiate_server_flags = qemu.kvm.nbd_receive_negotiate_server_flags ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2838, gettimeofday_ns(), 24 + 8, pid(), globalflags)
}
probe qemu.kvm.simpletrace.nbd_receive_negotiate_name = qemu.kvm.nbd_receive_negotiate_name ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2839, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.nbd_receive_negotiate_size_flags = qemu.kvm.nbd_receive_negotiate_size_flags ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2840, gettimeofday_ns(), 24 + 8 + 8, pid(), size, flags)
}
probe qemu.kvm.simpletrace.nbd_init_set_socket = qemu.kvm.nbd_init_set_socket ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2841, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nbd_init_set_block_size = qemu.kvm.nbd_init_set_block_size ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2842, gettimeofday_ns(), 24 + 8, pid(), block_size)
}
probe qemu.kvm.simpletrace.nbd_init_set_size = qemu.kvm.nbd_init_set_size ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2843, gettimeofday_ns(), 24 + 8, pid(), sectors)
}
probe qemu.kvm.simpletrace.nbd_init_trailing_bytes = qemu.kvm.nbd_init_trailing_bytes ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2844, gettimeofday_ns(), 24 + 8, pid(), ignored_bytes)
}
probe qemu.kvm.simpletrace.nbd_init_set_readonly = qemu.kvm.nbd_init_set_readonly ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2845, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nbd_init_finish = qemu.kvm.nbd_init_finish ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2846, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nbd_client_loop = qemu.kvm.nbd_client_loop ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2847, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nbd_client_loop_ret = qemu.kvm.nbd_client_loop_ret ?
{
    try {
        argerror_str = error ? user_string_n(error, 512) : "<null>"
    } catch {}
    argerror_len = strlen(argerror_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 2848, gettimeofday_ns(), 24 + 8 + 4 + argerror_len, pid(), ret, argerror_len, argerror_len, argerror_str)
}
probe qemu.kvm.simpletrace.nbd_client_clear_queue = qemu.kvm.nbd_client_clear_queue ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2849, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nbd_client_clear_socket = qemu.kvm.nbd_client_clear_socket ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2850, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nbd_send_request = qemu.kvm.nbd_send_request ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b%4b%.*s", 1, 2851, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8 + 4 + argname_len, pid(), from, len, handle, flags, type, argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.nbd_receive_simple_reply = qemu.kvm.nbd_receive_simple_reply ?
{
    try {
        argerrname_str = errname ? user_string_n(errname, 512) : "<null>"
    } catch {}
    argerrname_len = strlen(argerrname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2852, gettimeofday_ns(), 24 + 8 + 4 + argerrname_len + 8, pid(), error, argerrname_len, argerrname_len, argerrname_str, handle)
}
probe qemu.kvm.simpletrace.nbd_receive_structured_reply_chunk = qemu.kvm.nbd_receive_structured_reply_chunk ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s%8b%8b", 1, 2853, gettimeofday_ns(), 24 + 8 + 8 + 4 + argname_len + 8 + 8, pid(), flags, type, argname_len, argname_len, argname_str, handle, length)
}
probe qemu.kvm.simpletrace.nbd_unknown_error = qemu.kvm.nbd_unknown_error ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2854, gettimeofday_ns(), 24 + 8, pid(), err)
}
probe qemu.kvm.simpletrace.nbd_negotiate_send_rep_len = qemu.kvm.nbd_negotiate_send_rep_len ?
{
    try {
        argoptname_str = optname ? user_string_n(optname, 512) : "<null>"
    } catch {}
    argoptname_len = strlen(argoptname_str)
    try {
        argtypename_str = typename ? user_string_n(typename, 512) : "<null>"
    } catch {}
    argtypename_len = strlen(argtypename_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b%4b%.*s%8b", 1, 2855, gettimeofday_ns(), 24 + 8 + 4 + argoptname_len + 8 + 4 + argtypename_len + 8, pid(), opt, argoptname_len, argoptname_len, argoptname_str, type, argtypename_len, argtypename_len, argtypename_str, len)
}
probe qemu.kvm.simpletrace.nbd_negotiate_send_rep_err = qemu.kvm.nbd_negotiate_send_rep_err ?
{
    try {
        argmsg_str = msg ? user_string_n(msg, 512) : "<null>"
    } catch {}
    argmsg_len = strlen(argmsg_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2856, gettimeofday_ns(), 24 + 4 + argmsg_len, pid(), argmsg_len, argmsg_len, argmsg_str)
}
probe qemu.kvm.simpletrace.nbd_negotiate_send_rep_list = qemu.kvm.nbd_negotiate_send_rep_list ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    try {
        argdesc_str = desc ? user_string_n(desc, 512) : "<null>"
    } catch {}
    argdesc_len = strlen(argdesc_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s", 1, 2857, gettimeofday_ns(), 24 + 4 + argname_len + 4 + argdesc_len, pid(), argname_len, argname_len, argname_str, argdesc_len, argdesc_len, argdesc_str)
}
probe qemu.kvm.simpletrace.nbd_negotiate_handle_export_name = qemu.kvm.nbd_negotiate_handle_export_name ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2858, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nbd_negotiate_handle_export_name_request = qemu.kvm.nbd_negotiate_handle_export_name_request ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2859, gettimeofday_ns(), 24 + 4 + argname_len, pid(), argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.nbd_negotiate_send_info = qemu.kvm.nbd_negotiate_send_info ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s%8b", 1, 2860, gettimeofday_ns(), 24 + 8 + 4 + argname_len + 8, pid(), info, argname_len, argname_len, argname_str, length)
}
probe qemu.kvm.simpletrace.nbd_negotiate_handle_info_requests = qemu.kvm.nbd_negotiate_handle_info_requests ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2861, gettimeofday_ns(), 24 + 8, pid(), requests)
}
probe qemu.kvm.simpletrace.nbd_negotiate_handle_info_request = qemu.kvm.nbd_negotiate_handle_info_request ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 2862, gettimeofday_ns(), 24 + 8 + 4 + argname_len, pid(), request, argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.nbd_negotiate_handle_info_block_size = qemu.kvm.nbd_negotiate_handle_info_block_size ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2863, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), minimum, preferred, maximum)
}
probe qemu.kvm.simpletrace.nbd_negotiate_handle_starttls = qemu.kvm.nbd_negotiate_handle_starttls ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2864, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nbd_negotiate_handle_starttls_handshake = qemu.kvm.nbd_negotiate_handle_starttls_handshake ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2865, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nbd_negotiate_meta_context = qemu.kvm.nbd_negotiate_meta_context ?
{
    try {
        argoptname_str = optname ? user_string_n(optname, 512) : "<null>"
    } catch {}
    argoptname_len = strlen(argoptname_str)
    try {
        argexport_str = export ? user_string_n(export, 512) : "<null>"
    } catch {}
    argexport_len = strlen(argexport_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%4b%.*s%8b", 1, 2866, gettimeofday_ns(), 24 + 4 + argoptname_len + 4 + argexport_len + 8, pid(), argoptname_len, argoptname_len, argoptname_str, argexport_len, argexport_len, argexport_str, queries)
}
probe qemu.kvm.simpletrace.nbd_negotiate_meta_query_skip = qemu.kvm.nbd_negotiate_meta_query_skip ?
{
    try {
        argreason_str = reason ? user_string_n(reason, 512) : "<null>"
    } catch {}
    argreason_len = strlen(argreason_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2867, gettimeofday_ns(), 24 + 4 + argreason_len, pid(), argreason_len, argreason_len, argreason_str)
}
probe qemu.kvm.simpletrace.nbd_negotiate_meta_query_parse = qemu.kvm.nbd_negotiate_meta_query_parse ?
{
    try {
        argquery_str = query ? user_string_n(query, 512) : "<null>"
    } catch {}
    argquery_len = strlen(argquery_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s", 1, 2868, gettimeofday_ns(), 24 + 4 + argquery_len, pid(), argquery_len, argquery_len, argquery_str)
}
probe qemu.kvm.simpletrace.nbd_negotiate_meta_query_reply = qemu.kvm.nbd_negotiate_meta_query_reply ?
{
    try {
        argcontext_str = context ? user_string_n(context, 512) : "<null>"
    } catch {}
    argcontext_len = strlen(argcontext_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2869, gettimeofday_ns(), 24 + 4 + argcontext_len + 8, pid(), argcontext_len, argcontext_len, argcontext_str, id)
}
probe qemu.kvm.simpletrace.nbd_negotiate_options_flags = qemu.kvm.nbd_negotiate_options_flags ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2870, gettimeofday_ns(), 24 + 8, pid(), flags)
}
probe qemu.kvm.simpletrace.nbd_negotiate_options_check_magic = qemu.kvm.nbd_negotiate_options_check_magic ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2871, gettimeofday_ns(), 24 + 8, pid(), magic)
}
probe qemu.kvm.simpletrace.nbd_negotiate_options_check_option = qemu.kvm.nbd_negotiate_options_check_option ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%4b%.*s", 1, 2872, gettimeofday_ns(), 24 + 8 + 4 + argname_len, pid(), option, argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.nbd_negotiate_begin = qemu.kvm.nbd_negotiate_begin ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2873, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nbd_negotiate_old_style = qemu.kvm.nbd_negotiate_old_style ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2874, gettimeofday_ns(), 24 + 8 + 8, pid(), size, flags)
}
probe qemu.kvm.simpletrace.nbd_negotiate_new_style_size_flags = qemu.kvm.nbd_negotiate_new_style_size_flags ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2875, gettimeofday_ns(), 24 + 8 + 8, pid(), size, flags)
}
probe qemu.kvm.simpletrace.nbd_negotiate_success = qemu.kvm.nbd_negotiate_success ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2876, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.nbd_receive_request = qemu.kvm.nbd_receive_request ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2877, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), magic, flags, type, from, len)
}
probe qemu.kvm.simpletrace.nbd_blk_aio_attached = qemu.kvm.nbd_blk_aio_attached ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2878, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, ctx)
}
probe qemu.kvm.simpletrace.nbd_blk_aio_detach = qemu.kvm.nbd_blk_aio_detach ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b", 1, 2879, gettimeofday_ns(), 24 + 4 + argname_len + 8, pid(), argname_len, argname_len, argname_str, ctx)
}
probe qemu.kvm.simpletrace.nbd_co_send_simple_reply = qemu.kvm.nbd_co_send_simple_reply ?
{
    try {
        argerrname_str = errname ? user_string_n(errname, 512) : "<null>"
    } catch {}
    argerrname_len = strlen(argerrname_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s%8b", 1, 2880, gettimeofday_ns(), 24 + 8 + 8 + 4 + argerrname_len + 8, pid(), handle, error, argerrname_len, argerrname_len, argerrname_str, len)
}
probe qemu.kvm.simpletrace.nbd_co_send_structured_done = qemu.kvm.nbd_co_send_structured_done ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2881, gettimeofday_ns(), 24 + 8, pid(), handle)
}
probe qemu.kvm.simpletrace.nbd_co_send_structured_read = qemu.kvm.nbd_co_send_structured_read ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2882, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), handle, offset, data, size)
}
probe qemu.kvm.simpletrace.nbd_co_send_structured_read_hole = qemu.kvm.nbd_co_send_structured_read_hole ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2883, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), handle, offset, size)
}
probe qemu.kvm.simpletrace.nbd_co_send_extents = qemu.kvm.nbd_co_send_extents ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b%8b", 1, 2884, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8 + 8, pid(), handle, extents, id, length, last)
}
probe qemu.kvm.simpletrace.nbd_co_send_structured_error = qemu.kvm.nbd_co_send_structured_error ?
{
    try {
        argerrname_str = errname ? user_string_n(errname, 512) : "<null>"
    } catch {}
    argerrname_len = strlen(argerrname_str)
    try {
        argmsg_str = msg ? user_string_n(msg, 512) : "<null>"
    } catch {}
    argmsg_len = strlen(argmsg_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s%4b%.*s", 1, 2885, gettimeofday_ns(), 24 + 8 + 8 + 4 + argerrname_len + 4 + argmsg_len, pid(), handle, err, argerrname_len, argerrname_len, argerrname_str, argmsg_len, argmsg_len, argmsg_str)
}
probe qemu.kvm.simpletrace.nbd_co_receive_request_decode_type = qemu.kvm.nbd_co_receive_request_decode_type ?
{
    try {
        argname_str = name ? user_string_n(name, 512) : "<null>"
    } catch {}
    argname_len = strlen(argname_str)
    printf("%8b%8b%8b%4b%4b%8b%8b%4b%.*s", 1, 2886, gettimeofday_ns(), 24 + 8 + 8 + 4 + argname_len, pid(), handle, type, argname_len, argname_len, argname_str)
}
probe qemu.kvm.simpletrace.nbd_co_receive_request_payload_received = qemu.kvm.nbd_co_receive_request_payload_received ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b", 1, 2887, gettimeofday_ns(), 24 + 8 + 8, pid(), handle, len)
}
probe qemu.kvm.simpletrace.nbd_co_receive_request_cmd_write = qemu.kvm.nbd_co_receive_request_cmd_write ?
{
    printf("%8b%8b%8b%4b%4b%8b", 1, 2888, gettimeofday_ns(), 24 + 8, pid(), len)
}
probe qemu.kvm.simpletrace.nbd_co_receive_align_compliance = qemu.kvm.nbd_co_receive_align_compliance ?
{
    try {
        argop_str = op ? user_string_n(op, 512) : "<null>"
    } catch {}
    argop_len = strlen(argop_str)
    printf("%8b%8b%8b%4b%4b%4b%.*s%8b%8b%8b", 1, 2889, gettimeofday_ns(), 24 + 4 + argop_len + 8 + 8 + 8, pid(), argop_len, argop_len, argop_str, from, len, align)
}
probe qemu.kvm.simpletrace.nbd_trip = qemu.kvm.nbd_trip ?
{
    printf("%8b%8b%8b%4b%4b", 1, 2890, gettimeofday_ns(), 24, pid())
}
probe qemu.kvm.simpletrace.pr_manager_execute = qemu.kvm.pr_manager_execute ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b%8b", 1, 2891, gettimeofday_ns(), 24 + 8 + 8 + 8 + 8, pid(), fd, cmd, sa, opaque)
}
probe qemu.kvm.simpletrace.pr_manager_run = qemu.kvm.pr_manager_run ?
{
    printf("%8b%8b%8b%4b%4b%8b%8b%8b", 1, 2892, gettimeofday_ns(), 24 + 8 + 8 + 8, pid(), fd, cmd, sa)
}

